# ----------------------------------------- #
# --- Internal LCD (400x240) - PNG only --- #
# ----------------------------------------- #

Display PNG_standard {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_user01 {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_user02 {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_user03 {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_user04 {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_radio {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness', 1)
}

Display PNG_standby {
	driver		'Image'
	format		'PNG'
	pixel		'1+0'
	gap		'0x0'
	border		0
	font		'20x32'
	size		'400x240'
	basecolor	'000000'
	foreground	'ffffff'
	background	'00000000'
	backlight	file::readline('/tmp/lcd/brightness_standby', 1)
}

# --------------------------------------------------------------------------- #

# --- general widgets (partly postfixed with _layout) --- #

Widget PNG_LOGO {
	class		'Image'
	file		file::readline('/tmp/lcd/logo', 1)
	update		5000
	reload		1
	center		1
	inverted	0
	scale		35
}

Widget PNG_LOGO_user02 {
	class		'Image'
	file		file::readline('/tmp/lcd/logo', 1)
	update		5000
	reload		1
	center		1
	inverted	0
	scale		100
}

Widget PNG_SERVICE {
	class		'Text'
	expression	file::readline('/tmp/lcd/service', 1)
	align		'C'
	width		20
	update		250
#	speed		325
}

Widget PNG_EVENT {
	class		'Text'
	expression	file::readline('/tmp/lcd/event', 1)
	align		'C'
	width		20
	update		250
#	speed		325
}

Widget PNG_EVENT_user01 {
	class		'Text'
	expression	file::readline('/tmp/lcd/event', 1)
	align		'C'
	width		16
	update		250
#	speed		325
}

Widget PNG_EVENT_user02 {
	class		'Text'
	expression	file::readline('/tmp/lcd/event', 1)
	align		'C'
	width		32
	update		250
#	speed		325
}

Widget PNG_EVENT_user03 {
	class		'Text'
	expression	file::readline('/tmp/lcd/event', 1)
	align		'C'
	width		20
	update		250
#	speed		325
}

Widget PNG_EVENT_user04 {
	class		'Text'
	expression	file::readline('/tmp/lcd/event', 1)
	align		'C'
	width		20
	update		250
#	speed		325
}

Widget PNG_PROGRESS {
	class		'Bar'
	expression	0
	expression2	file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		20
	update		2600
	foreground	'0000ff'
	barcolor0	'00000000'
}

Widget PNG_PROGRESS_user01 {
	class		'Bar'
	expression	0
	expression2	file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		20
	update		2600
	foreground	'0000ff'
	barcolor0	'00000000'
}

Widget PNG_PROGRESS_user02 {
	class		'Bar'
	expression	0
	expression2	file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		20
	update		2600
	foreground	'0000ff'
	barcolor0	'00000000'
}

Widget PNG_PROGRESS_user03 {
	class		'Bar'
	expression	0
	expression2	file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		20
	update		2600
	foreground	'0000ff'
	barcolor0	'00000000'
}

Widget PNG_PROGRESS_user04 {
	class		'Bar'
	expression	0
	expression2	file::readline('/tmp/lcd/progress', 1)
	min		0
	max		100
	length		20
	update		2600
	foreground	'0000ff'
	barcolor0	'00000000'
}

Widget PNG_DURATION {
	class 'Text'
	expression	file::readline('/tmp/lcd/duration', 1)
	align		'R'
#	width		10
	update		500
}

Widget PNG_DURATION_user01 {
	class 'Text'
	expression	file::readline('/tmp/lcd/duration', 1)
	align		'R'
	width		20
	update		500
}

Widget PNG_DURATION_user02 {
	class 'Text'
	expression	file::readline('/tmp/lcd/duration', 1)
	align		'R'
	width		20
	update		500
}

Widget PNG_DURATION_user03 {
	class 'Text'
	expression	file::readline('/tmp/lcd/duration', 1)
	align		'R'
	width		20
	update		500
}

Widget PNG_DURATION_user04 {
	class 'Text'
	expression	file::readline('/tmp/lcd/duration', 1)
	align		'R'
	width		20
	update		500
}

Widget PNG_VOLUME {
	class		'Bar'
	expression	file::readline('/tmp/lcd/volume', 1)
	expression2	0
	min		0
	max		100
	length		10
	update		1000
	barcolor1	'00000000'
}

Widget PNG_VOLUME_user01 {
	class		'Bar'
	expression	file::readline('/tmp/lcd/volume', 1)
	expression2	0
	min		0
	max		100
	length		10
	update		1000
	barcolor1	'00000000'
}

Widget PNG_VOLUME_user02 {
	class		'Bar'
	expression	file::readline('/tmp/lcd/volume', 1)
	expression2	0
	min		0
	max		100
	length		10
	update		1000
	barcolor1	'00000000'
}

Widget PNG_VOLUME_user03 {
	class		'Bar'
	expression	file::readline('/tmp/lcd/volume', 1)
	expression2	0
	min		0
	max		100
	length		10
	update		1000
	barcolor1	'00000000'
}

Widget PNG_VOLUME_user04 {
	class		'Bar'
	expression	file::readline('/tmp/lcd/volume', 1)
	expression2	0
	min		0
	max		100
	length		10
	update		1000
	barcolor1	'00000000'
}

Widget PNG_TIME {
	class		'Text'
	expression	strftime('%H:%M', time())
	align		'L'
#	width		20
	update		5000
}

Widget PNG_TIME_user01 {
	class		'Text'
	expression	strftime('%H:%M', time())
	align		'L'
	width		20
	update		5000
}

Widget PNG_TIME_user02 {
	class		'Text'
	expression	strftime('%H:%M', time())
	align		'L'
	width		20
	update		5000
}

Widget PNG_TIME_user03 {
	class		'Text'
	expression	strftime('%H:%M', time())
	align		'L'
	width		20
	update		5000
}

Widget PNG_TIME_user04 {
	class		'Text'
	expression	strftime('%H:%M', time())
	align		'L'
	width		20
	update		5000
}

# --- system-info --- #

Widget PNG_CPU {
	class		'Text'
	prefix		'CPU: '
	expression	proc_stat::cpu('busy', 500)
	postfix		'%'
	precision	1
	align		'R'
	width		11
	update		1000
	foreground	'808080'
}

Widget PNG_CPU_BAR {
	class		'Bar'
	expression	proc_stat::cpu('busy', 500)
	min		0
	max		100
	length		17
	style		'H'
	update		500
	foreground	'808080'
}

Widget PNG_RAM {
	class		'Text'
	prefix		'RAM: '
	expression	100 - ((meminfo('MemFree') * 100) / meminfo('MemTotal'))
	postfix		'%'
	precision	1
	align		'R'
	width		11
	update		1000
	foreground	'808080'
}

Widget PNG_MTD {
	class		'Text'
	prefix		'MTD: '
	expression	100 - (statfs('/', 'bfree') * 100) / statfs('/', 'blocks')
	postfix		'%'
	precision	1
	align		'R'
	width		11
	update		1000
	foreground	'808080'
}

# --- the clocks for standby-mode --- #
# --- the digital clock --- #

Widget PNG_HOUR1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital/' . substr(strftime('%H', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget PNG_HOUR_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital/' . substr(strftime('%H', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget PNG_DP {
	class		'Image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital/dp.png'
	update		0
	scale		130
}

Widget PNG_MIN1_ {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital/' . substr(strftime('%M', time()), 0, 1) . '.png'
	update		10000
	reload		1
	scale		130
}

Widget PNG_MIN_1 {
	class		'image'
	file		file::exist(FCLOCK) == 1 ? ICONS . 'blank.png' : ICONS . 'clock/digital/' . substr(strftime('%M', time()), 1) . '.png'
	update		10000
	reload		1
	scale		130
}

# --- the analog clock --- #

Widget PNG_DIAL_A {
	class		'image'
	file		file::exist(FCLOCK) == 0 ? ICONS . 'blank.png' : ICONS . 'clock/analog/dial.png'
	update		0
	scale		160
}

Widget PNG_HOUR_A {
	class		'image'
	file		file::exist(FCLOCK) == 0 ? ICONS . 'blank.png' : ICONS . 'clock/analog/h' . ( ( (strftime('%I', time()) == 12 ? 0 : strftime('%I', time())) *5) + substr((strftime('%M', time()) / 12), 0, 1) ). '.png'
	update		10000
	reload		1
	scale		150
}

Widget PNG_MIN_A {
	class		'image'
	file		file::exist(FCLOCK) == 0 ? ICONS . 'blank.png' : ICONS . 'clock/analog/m' . strftime('%M', time()) . '.png'
	update		10000
	reload		2
	scale		150
}

# --------------------------------------------------------------------------- #

Layout PNG_standard {
	layer 0 {
		row04.col01	'PNG_SERVICE'
		row05.col01	'PNG_EVENT'
		row06.col01	'PNG_PROGRESS'
		row07 {
			col01	'PNG_TIME'
			col11	'PNG_DURATION'
		}
	}
	layer 1 {
		x001.y001	'PNG_LOGO'
	}
}

Layout PNG_user01 {
	layer 0 {
		row02.col01	'PNG_SERVICE'
		row04.col01	'PNG_EVENT'
		row05.col01	'PNG_PROGRESS'
		row07 {
			col01	'PNG_TIME'
			col11	'PNG_DURATION'
		}
	}
}

Layout PNG_user02 {
	layer 0 {
		x001.y001	'PNG_LOGO_user02'
	}
}

Layout PNG_user03 {
	layer 0 {
		row01.col04	'PNG_PROGRESS_user03'
		row03.col01	'PNG_EVENT_user03'
		row05 {
			col04	'PNG_VOLUME_user03'
			col15	'PNG_TIME_user03'
		}
	}
}

Layout PNG_user04 {
	layer 0 {
		row02.col01	'PNG_EVENT'
		row03.col02	'PNG_PROGRESS'
		row05 {
			col07	'PNG_DURATION'
			col02	'PNG_TIME'
		}
	}
}

Layout PNG_radio {
	layer 0 {
		row04.col01	'PNG_SERVICE'
		row05.col01	'PNG_EVENT'
		row06.col01	'PNG_PROGRESS'
		row07 {
			col01	'PNG_TIME'
			col11	'PNG_DURATION'
		}
	}
	layer 1 {
		x001.y001	'PNG_LOGO'
	}
}

Layout PNG_standby {
	layer 0 {
		x010.y090	'PNG_MIN_A'

		X070.Y040	'PNG_HOUR1_'
		X070.Y110	'PNG_HOUR_1'
		X070.Y175	'PNG_DP'
		X070.Y210	'PNG_MIN1_'
		X070.Y280	'PNG_MIN_1'
	}
	layer 1 {
		x010.y090	'PNG_HOUR_A'
	}
	layer 2 {
		x001.y82	'PNG_DIAL_A'
	}
}

# ------------------------ #
# --- General Settings --- #
# ------------------------ #

Variables {
	ICONS		'/var/tuxbox/lcd/icons/'
	SYSICONS	'/usr/share/tuxbox/neutrino/icons/'
	FCLOCK		'/var/etc/.lcd-clock_a'
}

Display		file::readline('/tmp/lcd/layout', 1)
Layout		file::readline('/tmp/lcd/layout', 1)
