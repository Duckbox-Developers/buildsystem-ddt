--- a/arch/sh/boards/mach-mb448/setup.c	2011-07-15 00:53:16.000000000 +0200
+++ b/setup.c.patched	2011-07-20 15:08:41.000000000 +0200
@@ -19,6 +19,7 @@
 #include <linux/mtd/physmap.h>
 #include <linux/stm/platform.h>
 #include <linux/stm/stx7100.h>
+#include <linux/bpa2.h>
 #include <asm/irl.h>
 
 
@@ -26,6 +27,25 @@
 #define MB448_PIO_SMC91X_RESET stm_gpio(2, 6)
 #define MB448_PIO_FLASH_VPP stm_gpio(2, 7)
 
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
+
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+      {
+	      .name  = "LMI_VID",
+	      .start = 0x10800000,
+	      .size  = 0x03800000,
+	      .flags = 0,
+	      .aka   = LMI_VID_partalias
+      },
+      {
+	      .name  = "LMI_SYS",
+	      .start = 0,
+	      .size  = 0x01300000,
+	      .flags = 0,
+	      .aka   = LMI_SYS_partalias
+      }
+};
 
 
 void __init mb448_setup(char **cmdline_p)
@@ -35,11 +55,13 @@
 	stx7100_early_device_init();
 
 	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
-			.hw_flow_control = 0,
+			.hw_flow_control = 1,
 			.is_console = 1, });
 	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
-			.hw_flow_control = 0,
+			.hw_flow_control = 1,
 			.is_console = 0, });
+
+  	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
 }
 
 
@@ -68,25 +90,119 @@
 
 static void mb448_set_vpp(struct map_info *info, int enable)
 {
-	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
+//	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
 }
 
+static struct mtd_partition mtd_parts_table[] =
+{
+//enable this part if you want to build usb/mtd flash image:
+#if 1
+	{
+		.name = "Boot Firmware",
+		.size =   0x00020000,	//u-boot 0x00000000-0xa001ffff  128k
+		.offset = 0x00000000,
+		mask_flags: 0
+	},
+	{
+		.name = "Kernel",
+		.size =   0x00200000,	//kernel 0x40000-0x1fffff 2MB
+		.offset = 0x00040000
+	},
+	{
+		.name = "ROOT SQUASHFS",
+		.size =   0x00F00000, //root 0x240000-0xfffff 15,7MB
+		.offset = 0x00240000
+	},
+	{
+		.name = "VAR-JFFS2",
+		.size =   0x0EC0000,  //0x1040000-0x1ffffff 15,5MB
+		.offset = 0x01140000
+	},
+	{
+		.name = "Boot Config",
+		.size =   0x00020000,	//boot config 0xa0020000-0xa003ffff  128k
+		.offset = 0x00020000
+ 	},
+ 	{
+		.name = "Full without bootloader",
+		.size =   0x01FC0000,
+		.offset = 0x00040000
+	}
+//};
+//set above to #if 0 if you want to build an ird image
+#else
+	{
+		.name = "[uboot] - [  RAW   ] [RO]",
+		.size =   0x00300000,	//u-boot 3MB
+		.offset = 0x00000000,
+		mask_flags: 0
+	},
+	{
+		.name = "[linux] - [  RAW   ] [RW]",
+		.size =   0x00300000,	//kernel 3MB
+		.offset = 0x00300000
+	},
+	{
+		.name = "[appLW] - [appHIbak] [RO]",
+		.size =   0x004E0000,	//app 5MB
+		.offset = 0x00620000
+	},
+	{
+		.name = "[appHI] - [squashfs] [RW]",
+		.size =   0x004E0000,	//app 5MB
+		.offset = 0x00B20000
+	},
+	{
+		.name = "[root ] - [squashfs] [RW]",
+		.size =   0x007E0000, //root 8MB - 219 byte fake squash
+		.offset = 0x01020000
+	},
+ 	{
+		.name = "[devfs] - [squashfs] [RW]",
+		.size =   0x00300000,  //Devices 3MB
+		.offset = 0x01800000
+	},
+	{
+		.name = "[conf ] - [ jffs2  ] [RW]",
+		.size =   0x00100000,  //Neutrino Config '/var/tuxbox/config' 1MB
+		.offset = 0x01b00000
+	},
+	{
+		.name = "[user ] - [ jffs2  ] [RW]",
+		.size =   0x00400000,  //VAR '/var' 4MB
+		.offset = 0x01c00000
+	},
+	{
+		.name = "[fl-bl] - [  RAW   ] [RW]",
+		.size =   0x01D00000,
+		.offset = 0x00300000
+	},
+	{
+		.name = "[fl+bl] - [  RAW   ] [RO]",
+		.size =   0x02000000,
+		.offset = 0x00000000
+	}
+#endif
+};
+
 static struct platform_device mb448_physmap_flash = {
 	.name		= "physmap-flash",
 	.id		= -1,
 	.num_resources	= 1,
 	.resource	= (struct resource[]) {
-		STM_PLAT_RESOURCE_MEM(0, 8*1024*1024),
+		STM_PLAT_RESOURCE_MEM(0, 32*1024*1024),
 	},
 	.dev.platform_data = &(struct physmap_flash_data) {
 		.width		= 2,
 		.set_vpp	= mb448_set_vpp,
+    	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+    	.parts		= mtd_parts_table
 	},
 };
 
 
 
-#define STMMAC_PHY_ADDR 14
+#define STMMAC_PHY_ADDR 2
 static int stmmac_phy_irqs[PHY_MAX_ADDR] = {
 	[STMMAC_PHY_ADDR] = IRL0_IRQ,
 };
@@ -106,7 +222,7 @@
 	stx7100_configure_sata();
 
 	stx7100_configure_ssc_i2c(0, NULL);
-	stx7100_configure_ssc_spi(1, NULL);
+	stx7100_configure_ssc_i2c(1, NULL);
 	stx7100_configure_ssc_i2c(2, NULL);
 
 	stx7100_configure_usb();
@@ -119,17 +235,17 @@
 			.mdio_bus_data = &stmmac_mdio_bus,
 		});
 
-	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
+/*	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
 	gpio_direction_output(MB448_PIO_FLASH_VPP, 0);
-
-	/* Reset the SMSC 91C111 Ethernet chip */
+*/
+	/* Reset the SMSC 91C111 Ethernet chip
 	gpio_request(MB448_PIO_SMC91X_RESET, "SMC91x reset");
 	gpio_direction_output(MB448_PIO_SMC91X_RESET, 0);
 	udelay(1);
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 1);
 	udelay(1);
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 0);
-
+*/
 	return platform_add_devices(mb448_devices,
 			ARRAY_SIZE(mb448_devices));
 }
*** a/drivers/stm/stx7100_comms.c	2011-07-11 21:21:19.000000000 +0200
--- b/stx7100_comms.c	2011-07-14 19:51:23.729808261 +0200
***************
*** 240,251 ****
  			STM_PAD_PIO_BIDIR_NAMED(3, 0, 1, "SCL"),
  			STM_PAD_PIO_BIDIR_NAMED(3, 1, 1, "SDA"),
  		},
! 		.sysconfs_num = 2,
  		.sysconfs = (struct stm_pad_sysconf []) {
  			/* SSC1_MUX_SEL = 0 (default assignment) */
  			STM_PAD_SYS_CFG(7, 2, 2, 0),
! 			/* DVO_OUT_ON = 0 (SSC not DVO) */
! 			STM_PAD_SYS_CFG(7, 10, 10, 0),
  		},
  	},
  	[2] = {
--- 240,251 ----
  			STM_PAD_PIO_BIDIR_NAMED(3, 0, 1, "SCL"),
  			STM_PAD_PIO_BIDIR_NAMED(3, 1, 1, "SDA"),
  		},
! 		.sysconfs_num = 1,
  		.sysconfs = (struct stm_pad_sysconf []) {
  			/* SSC1_MUX_SEL = 0 (default assignment) */
  			STM_PAD_SYS_CFG(7, 2, 2, 0),
! 			/* DVO_OUT_ON = 0 (SSC not DVO) 
! 			STM_PAD_SYS_CFG(7, 10, 10, 0),*/
  		},
  	},
  	[2] = {
