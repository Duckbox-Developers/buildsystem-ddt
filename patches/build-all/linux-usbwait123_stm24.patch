--- a/drivers/usb/storage/usb.c
+++ b/drivers/usb/storage/usb.c
@@ -74,9 +74,9 @@
 MODULE_DESCRIPTION("USB Mass Storage driver for Linux");
 MODULE_LICENSE("GPL");
 
-static unsigned int delay_use = 5;
-module_param(delay_use, uint, S_IRUGO | S_IWUSR);
-MODULE_PARM_DESC(delay_use, "seconds to delay before using a new device");
+static char usbwait123[9];
+module_param_string(usbwait123, usbwait123, 9, 0);
+MODULE_PARM_DESC(usbwait123, "seconds to delay before using a new device");
 
 static char quirks[128];
 module_param_string(quirks, quirks, sizeof(quirks), S_IRUGO | S_IWUSR);
@@ -812,18 +812,49 @@
 static int usb_stor_scan_thread(void * __us)
 {
 	struct us_data *us = (struct us_data *)__us;
+	unsigned char usbwait=5;
+	char cur[9], *delim, *delim1;
+
+	strcpy(cur, usbwait123);
 
 	printk(KERN_DEBUG
 		"usb-storage: device found at %d\n", us->pusb_dev->devnum);
 
+	if (strcmp(us->pusb_dev->devpath,"1.2") == 0) { //usb port hinten/unten
+		if ((delim = strchr(cur, ':')) != NULL) {
+			delim++;
+			if ((delim1 = strchr(delim, ':')) != NULL) {
+				delim1++;
+				usbwait=simple_strtol(delim1, NULL, 10);
+			}
+		}
+	}
+	if (strcmp(us->pusb_dev->devpath,"1.3") == 0) { //usb port hinten/oben
+		if ((delim = strchr(cur, ':')) != NULL) {
+			delim++;
+			if ((delim1 = strchr(delim, ':')) != NULL) {
+				*delim1=0;
+				usbwait=simple_strtol(delim, NULL, 10);
+			}
+		}
+	}
+	if (strcmp(us->pusb_dev->devpath,"1.4") == 0) { //usb port vorne
+		if ((delim = strchr(cur, ':')) != NULL) {
+			*delim=0;
+			usbwait=simple_strtol(cur, NULL, 10);
+		}
+	}
+       
+	printk("usb-storage: wait %d seconds on usb port %s\n", usbwait, us->pusb_dev->devpath);
+
 	set_freezable();
 	/* Wait for the timeout to expire or for a disconnect */
-	if (delay_use > 0) {
+	if (usbwait > 0) {
 		printk(KERN_DEBUG "usb-storage: waiting for device "
 				"to settle before scanning\n");
 		wait_event_freezable_timeout(us->delay_wait,
 				test_bit(US_FLIDX_DONT_SCAN, &us->dflags),
-				delay_use * HZ);
+				usbwait * HZ);
 	}
 
 	/* If the device is still connected, perform the scanning */
