diff --git a/Makefile b/Makefile
index 65a2273..105c460 100644
--- a/Makefile
+++ b/Makefile
@@ -10,7 +10,6 @@ DVB_API_MINOR := $(word 3, $(shell grep -m1 "DVB_API_VERSION_MINOR" $(VERSION_FI
 
 all clean install:
 	$(MAKE) -C lib $@
-	$(MAKE) -C test $@
 	$(MAKE) -C util $@
 
 update:
diff --git a/util/dst-utils/dst_test.c b/util/dst-utils/dst_test.c
index 74385de..bfe2895 100644
--- a/util/dst-utils/dst_test.c
+++ b/util/dst-utils/dst_test.c
@@ -36,6 +36,15 @@
 
 #define CA_NODE "/dev/dvb/adapter0/ca0"
 
+#ifndef CA_SET_PID
+typedef struct ca_pid {
+	unsigned int pid;
+	int index;	/* -1 == disable*/
+	} ca_pid_t;
+//We should not be able to get it so a number that is unlikely to happen
+#define CA_SET_PID 42424242
+#endif
+
 static int dst_comms(int cafd, uint32_t tag, uint32_t function, struct ca_msg *msg)
 {
 	if (tag) {
diff --git a/util/dvbdate/dvbdate.c b/util/dvbdate/dvbdate.c
index f0df437..6b5f4d4 100644
--- a/util/dvbdate/dvbdate.c
+++ b/util/dvbdate/dvbdate.c
@@ -309,7 +309,14 @@ int atsc_scan_date(time_t *rx_time, unsigned int to)
  */
 int set_time(time_t * new_time)
 {
+#if (__GLIBC__ == 2 && __GLIBC_MINOR__ > 30) || (__GLIBC__ > 2)
+	struct timespec s = {0};
+	s.tv_sec = new_time;
+
+	if (clock_settime(CLOCK_REALTIME, &s)) {
+#else
 	if (stime(new_time)) {
+#endif
 		perror("Unable to set time");
 		return -1;
 	}
diff --git a/util/femon/femon.c b/util/femon/femon.c
index a50fe17..1ed198b 100644
--- a/util/femon/femon.c
+++ b/util/femon/femon.c
@@ -42,17 +42,23 @@
 static char *usage_str =
     "\nusage: femon [options]\n"
     "     -H        : human readable output\n"
+    "     -M        : minimalized output\n"
     "     -A        : Acoustical mode. A sound indicates the signal quality.\n"
     "     -r        : If 'Acoustical mode' is active it tells the application\n"
     "                 is called remotely via ssh. The sound is heard on the 'real'\n"
     "                 machine but. The user has to be root.\n"
+    "     -d        : show only different values\n"
+    "     -t number : use given cycle time (default 1.00)\n"
     "     -a number : use given adapter (default 0)\n"
     "     -f number : use given frontend (default 0)\n"
     "     -c number : samples to take (default 0 = infinite)\n\n";
 
 int sleep_time=1000000;
+float fl_sleep_time=1;
 int acoustical_mode=0;
+int minimalized=0;
 int remote=0;
+int onlydiff=0;
 
 static void usage(void)
 {
@@ -65,38 +71,66 @@ static
 int check_frontend (struct dvbfe_handle *fe, int human_readable, unsigned int count)
 {
 	struct dvbfe_info fe_info;
+	struct dvbfe_info fe_info_tmp;
 	unsigned int samples = 0;
 	FILE *ttyFile=NULL;
-	
+	struct timeval now;
+
 	// We dont write the "beep"-codes to stdout but to /dev/tty1.
 	// This is neccessary for Thin-Client-Systems or Streaming-Boxes
 	// where the computer does not have a monitor and femon is called via ssh.
-	if(acoustical_mode)
+	if (acoustical_mode)
 	{
-	    if(remote)
-	    {
-		ttyFile=fopen("/dev/tty1","w");
-	        if(!ttyFile)
+		if (remote)
+		{
+			ttyFile=fopen("/dev/tty1","w");
+			if (!ttyFile)
+			{
+				fprintf(stderr, "Could not open /dev/tty1. No access rights?\n");
+				exit(-1);
+			}
+		}
+		else
 		{
-		    fprintf(stderr, "Could not open /dev/tty1. No access rights?\n");
-		    exit(-1);
+			ttyFile=stdout;
 		}
-	    }
-	    else
-	    {
-		ttyFile=stdout;
-	    }
 	}
 
 	do {
 		if (dvbfe_get_info(fe, FE_STATUS_PARAMS, &fe_info, DVBFE_INFO_QUERYTYPE_IMMEDIATE, 0) != FE_STATUS_PARAMS) {
-			fprintf(stderr, "Problem retrieving frontend information: %m\n");
+			if (!minimalized)
+				fprintf(stderr, "Problem retrieving frontend information: %m\n");
 		}
 
+		if (onlydiff == 1)
+		{
+			if ((fe_info_tmp.signal_strength * 100) / 0xffff != (fe_info.signal_strength * 100) / 0xffff || (fe_info_tmp.snr * 100) / 0xffff != (fe_info.snr * 100) / 0xffff || fe_info_tmp.ber != fe_info.ber)
+			{
+				fe_info_tmp = fe_info;
+			}
+			else
+			{
+				usleep(sleep_time);
+				continue;
+			}
+		}
 
+		gettimeofday(&now, NULL);
+		int milli = now.tv_usec / 1000;
+		char buffer[80] = "";
+		strftime(buffer, 80, "%a %b %d %Y - %H:%M:%S", localtime(&now.tv_sec));
+		char ntime[84] = "";
+		sprintf(ntime, "%s.%03d", buffer, milli);
 
 		if (human_readable) {
-                       printf ("status %c%c%c%c%c | signal %3u%% | snr %3u%% | ber %d | unc %d | ",
+			if (minimalized) {
+				printf ("%s | sig %3u%% | snr %3u%% | ber %d",
+				ntime,
+				(fe_info.signal_strength * 100) / 0xffff,
+				(fe_info.snr * 100) / 0xffff,
+				fe_info.ber);
+			} else {
+				printf ("status %c%c%c%c%c | signal %3u%% | snr %3u%% | ber %d | unc %d | ",
 				fe_info.signal ? 'S' : ' ',
 				fe_info.carrier ? 'C' : ' ',
 				fe_info.viterbi ? 'V' : ' ',
@@ -106,8 +140,16 @@ int check_frontend (struct dvbfe_handle *fe, int human_readable, unsigned int co
 				(fe_info.snr * 100) / 0xffff,
 				fe_info.ber,
 				fe_info.ucblocks);
+			}
 		} else {
-			printf ("status %c%c%c%c%c | signal %04x | snr %04x | ber %08x | unc %08x | ",
+			if (minimalized) {
+				printf ("%s | sig %04x | snr %04x | ber %08x",
+				ntime,
+				fe_info.signal_strength,
+				fe_info.snr,
+				fe_info.ber);
+			} else {
+				printf ("status %c%c%c%c%c | signal %04x | snr %04x | ber %08x | unc %08x | ",
 				fe_info.signal ? 'S' : ' ',
 				fe_info.carrier ? 'C' : ' ',
 				fe_info.viterbi ? 'V' : ' ',
@@ -117,18 +159,20 @@ int check_frontend (struct dvbfe_handle *fe, int human_readable, unsigned int co
 				fe_info.snr,
 				fe_info.ber,
 				fe_info.ucblocks);
+			}
 		}
 
 		if (fe_info.lock)
-			printf("FE_HAS_LOCK");
+			if (!minimalized)
+				printf("FE_HAS_LOCK");
 
 		// create beep if acoustical_mode enabled
-		if(acoustical_mode)
+		if (acoustical_mode)
 		{
-		    int signal=(fe_info.signal_strength * 100) / 0xffff;
-		    fprintf( ttyFile, "\033[10;%d]\a", 500+(signal*2));
-		    // printf("Variable : %d\n", signal);
-		    fflush(ttyFile);
+			int signal=(fe_info.signal_strength * 100) / 0xffff;
+			fprintf( ttyFile, "\033[10;%d]\a", 500+(signal*2));
+			// printf("Variable : %d\n", signal);
+			fflush(ttyFile);
 		}
 
 		printf("\n");
@@ -136,10 +180,10 @@ int check_frontend (struct dvbfe_handle *fe, int human_readable, unsigned int co
 		usleep(sleep_time);
 		samples++;
 	} while ((!count) || (count-samples));
-	
-	if(ttyFile)
-	    fclose(ttyFile);
-	
+
+	if (ttyFile)
+		fclose(ttyFile);
+
 	return 0;
 }
 
@@ -188,7 +232,7 @@ int main(int argc, char *argv[])
 	int human_readable = 0;
 	int opt;
 
-       while ((opt = getopt(argc, argv, "rAHa:f:c:")) != -1) {
+       while ((opt = getopt(argc, argv, "drAMHa:f:c:t:")) != -1) {
 		switch (opt)
 		{
 		default:
@@ -200,12 +244,19 @@ int main(int argc, char *argv[])
 		case 'c':
 			count = strtoul(optarg, NULL, 0);
 			break;
+		case 't':
+			fl_sleep_time = strtof(optarg, NULL);
+			sleep_time=fl_sleep_time*1000000;
+			break;
 		case 'f':
 			frontend = strtoul(optarg, NULL, 0);
 			break;
 		case 'H':
 			human_readable = 1;
 			break;
+		case 'M':
+			minimalized = 1;
+			break;
 		case 'A':
 			// Acoustical mode: we have to reduce the delay between
 			// checks in order to hear nice sound
@@ -215,6 +266,9 @@ int main(int argc, char *argv[])
 		case 'r':
 			remote=1;
 			break;
+		case 'd':
+			onlydiff=1;
+			break;
 		}
 	}
 
diff --git a/util/scan/Makefile b/util/scan/Makefile
index 32d1f1c..51b3777 100644
--- a/util/scan/Makefile
+++ b/util/scan/Makefile
@@ -25,7 +25,7 @@ $(binaries): $(objects)
 $(objects): atsc_psip_section.c atsc_psip_section.h
 
 atsc_psip_section.c atsc_psip_section.h:
-	perl section_generate.pl atsc_psip_section.pl
+	perl section_generate.pl ./atsc_psip_section.pl
 
 include ../../Make.rules
 
