--- a/utils/alsa.pc.in
+++ b/utils/alsa.pc.in
@@ -1,7 +1,7 @@
 prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
+exec_prefix=${prefix}
+libdir=${exec_prefix}/lib
+includedir=${prefix}/include
 
 Name: alsa
 Description: Advanced Linux Sound Architecture (ALSA) - Library
diff --git a/src/control/control.c b/src/control/control.c
index 91415b51..ca302df6 100644
--- a/src/control/control.c
+++ b/src/control/control.c
@@ -1616,11 +1616,14 @@ int snd_ctl_open(snd_ctl_t **ctlp, const char *name, int mode)
 	int err;
 
 	assert(ctlp && name);
+#ifdef BUILD_UCM
 	if (_snd_is_ucm_device(name)) {
 		name = uc_mgr_alibcfg_by_device(&top, name);
 		if (name == NULL)
 			return -ENODEV;
-	} else {
+	} else
+#endif
+	{
 		err = snd_config_update_ref(&top);
 		if (err < 0)
 			return err;
diff --git a/include/seqmid.h b/include/seqmid.h
--- a/include/seqmid.h
+++ b/include/seqmid.h
@@ -526,12 +526,14 @@
 	((ev)->type = SND_SEQ_EVENT_SYSEX,\
 	 snd_seq_ev_set_variable(ev, datalen, dataptr))
 
+#ifdef __ALSA_RAWMIDI_H
 /* Helper API functions for UMP endpoint and block creations */
 int snd_seq_create_ump_endpoint(snd_seq_t *seq,
 				const snd_ump_endpoint_info_t *info,
 				unsigned int num_groups);
 int snd_seq_create_ump_block(snd_seq_t *seq, int blkid,
 			     const snd_ump_block_info_t *info);
+#endif
 
 /** \} */
 
diff --git a/src/pcm/pcm.c b/src/pcm/pcm.c
index 892abf98..67912794 100644
--- a/src/pcm/pcm.c
+++ b/src/pcm/pcm.c
@@ -2748,11 +2748,14 @@ int snd_pcm_open(snd_pcm_t **pcmp, const char *name,
 	int err;
 
 	assert(pcmp && name);
+#ifdef BUILD_UCM
 	if (_snd_is_ucm_device(name)) {
 		name = uc_mgr_alibcfg_by_device(&top, name);
 		if (name == NULL)
 			return -ENODEV;
-	} else {
+	} else
+#endif
+	{
 		err = snd_config_update_ref(&top);
 		if (err < 0)
 			return err;
diff --git a/src/rawmidi/rawmidi.c b/src/rawmidi/rawmidi.c
index 55f44821..f6a60611 100644
--- a/src/rawmidi/rawmidi.c
+++ b/src/rawmidi/rawmidi.c
@@ -316,11 +316,14 @@ int snd_rawmidi_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,
 	int err;
 
 	assert((inputp || outputp) && name);
+#ifdef BUILD_UCM
 	if (_snd_is_ucm_device(name)) {
 		name = uc_mgr_alibcfg_by_device(&top, name);
 		if (name == NULL)
 			return -ENODEV;
-	} else {
+	} else
+#endif
+	{
 		err = snd_config_update_ref(&top);
 		if (err < 0)
 			return err;
diff --git a/src/seq/seq.c b/src/seq/seq.c
index f051426f..3330e770 100644
--- a/src/seq/seq.c
+++ b/src/seq/seq.c
@@ -1054,11 +1054,14 @@ int snd_seq_open(snd_seq_t **seqp, const char *name,
 	int err;
 
 	assert(seqp && name);
+#if BUILD_UCM
 	if (_snd_is_ucm_device(name)) {
 		name = uc_mgr_alibcfg_by_device(&top, name);
 		if (name == NULL)
 			return -ENODEV;
-	} else {
+	} else
+#endif
+	{
 		err = snd_config_update_ref(&top);
 		if (err < 0)
 			return err;
diff --git a/src/timer/timer.c b/src/timer/timer.c
index 6fc710b9..52400058 100644
--- a/src/timer/timer.c
+++ b/src/timer/timer.c
@@ -205,11 +205,14 @@ int snd_timer_open(snd_timer_t **timer, const char *name, int mode)
 	int err;
 
 	assert(timer && name);
+#ifdef BUILD_UCM
 	if (_snd_is_ucm_device(name)) {
 		name = uc_mgr_alibcfg_by_device(&top, name);
 		if (name == NULL)
 			return -ENODEV;
-	} else {
+	} else
+#endif
+	{
 		err = snd_config_update_ref(&top);
 		if (err < 0)
 			return err;
