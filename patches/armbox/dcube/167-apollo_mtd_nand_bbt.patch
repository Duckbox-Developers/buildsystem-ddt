diff -Naurp linux-2.6.34_orig/drivers/mtd/nand/nand_bbt.c linux-2.6.34/drivers/mtd/nand/nand_bbt.c
--- linux-2.6.34_orig/drivers/mtd/nand/nand_bbt.c	2011-07-05 17:03:37.728389000 +0530
+++ linux-2.6.34/drivers/mtd/nand/nand_bbt.c	2011-07-05 18:02:15.851672000 +0530
@@ -707,6 +707,11 @@ static int write_bbt(struct mtd_info *mt
 	size_t retlen, len = 0;
 	loff_t to;
 	struct mtd_oob_ops ops;
+   int erz_cnt, erz_pgfl[td->maxblocks];
+
+   for(i=0; i<td->maxblocks; i++) {
+      erz_pgfl[i]= -1;
+   }
 
 	ops.ooblen = mtd->oobsize;
 	ops.ooboffs = 0;
@@ -742,6 +747,7 @@ static int write_bbt(struct mtd_info *mt
 			goto write;
 		}
 
+      find_free_block:
 		/* Automatic placement of the bad block table */
 		/* Search direction top -> down ? */
 		if (td->options & NAND_BBT_LASTBLOCK) {
@@ -764,8 +770,15 @@ static int write_bbt(struct mtd_info *mt
 			page = block <<
 				(this->bbt_erase_shift - this->page_shift);
 			/* Check, if the block is used by the mirror table */
-			if (!md || md->pages[chip] != page)
-				goto write;
+         /* Trident - Handle bad blocks within blocks reserved for bbt */
+         if ((!md || md->pages[chip] != page) && td->pages[chip] != page) {
+            for (erz_cnt =0; erz_cnt < td->maxblocks; erz_cnt++) {
+               if (erz_pgfl[erz_cnt] == page)
+                  break;
+            }
+            if (erz_cnt == td->maxblocks)
+               goto write;
+         }
 		}
 		printk(KERN_ERR "No space left to write bad block table\n");
 		return -ENOSPC;
@@ -875,8 +888,15 @@ static int write_bbt(struct mtd_info *mt
 		einfo.addr = to;
 		einfo.len = 1 << this->bbt_erase_shift;
 		res = nand_erase_nand(mtd, &einfo, 1);
-		if (res < 0)
-			goto outerr;
+      if (res < 0) {
+         /* Trident - Handle bad blocks within blocks reserved for bbt */
+         for (erz_cnt =0; erz_cnt < td->maxblocks; erz_cnt++) {
+            if(erz_pgfl[erz_cnt] < 0)
+               break;
+         }
+         erz_pgfl[erz_cnt] = page;
+         goto find_free_block;
+      }
 
 		res = scan_write_bbt(mtd, to, len, buf,
 				td->options & NAND_BBT_NO_OOB ? NULL :
diff -Naurp linux-2.6.34_orig/drivers/mtd/nand/nx_nand/nx_nand.c linux-2.6.34/drivers/mtd/nand/nx_nand/nx_nand.c
--- linux-2.6.34_orig/drivers/mtd/nand/nx_nand/nx_nand.c	2011-07-05 17:03:37.880393000 +0530
+++ linux-2.6.34/drivers/mtd/nand/nx_nand/nx_nand.c	2011-07-05 17:00:54.353601000 +0530
@@ -2356,10 +2356,15 @@ static int nx_nand_probe(struct platform
 #endif
 #endif
 
-   if(nand_scan_tail(mtd)) {
-      printk(KERN_ERR "nx_nand: NAND scan tail \r\n");
-      ret = -ENXIO;
-      goto out_free1;
+   ret = nand_scan_tail(mtd);
+   if(ret) {
+      if(ret == -ENOSPC) {
+         printk(KERN_ERR "nx_nand: No space to write BBT \n");
+      } else {
+         printk(KERN_ERR "nx_nand: NAND scan tail \r\n");
+         ret = -ENXIO;
+         goto out_free1;
+      }
    }
 
    mtd->repartition = nx_nand_repartition;
