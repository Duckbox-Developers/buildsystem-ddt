diff -Naurp linux-2.6.34_org/arch/arm/common/gic.c linux-2.6.34/arch/arm/common/gic.c
--- linux-2.6.34_org/arch/arm/common/gic.c	2011-10-10 11:33:47.775312000 +0530
+++ linux-2.6.34/arch/arm/common/gic.c	2011-10-10 11:56:17.127129000 +0530
@@ -265,15 +265,16 @@ void __init gic_dist_init(unsigned int g
 		writel(cpumask, base + GIC_DIST_TARGET + i * 4 / 4);
 
 	/*
-	 * Set priority on all interrupts.
+	 * Set priority on all global interrupts.
 	 */
-	for (i = 0; i < max_irq; i += 4)
+	for (i = 32; i < max_irq; i += 4)
 		writel(0xa0a0a0a0, base + GIC_DIST_PRI + i * 4 / 4);
 
 	/*
-	 * Disable all interrupts.
+	 * Disable all interrupts. Leave the PPI and SGIs alone
+	 * as these enables are banked registers.
 	 */
-	for (i = 0; i < max_irq; i += 32)
+	for (i = 32; i < max_irq; i += 32)
 		writel(0xffffffff, base + GIC_DIST_ENABLE_CLEAR + i * 4 / 32);
 
 	/*
@@ -291,11 +292,30 @@ void __init gic_dist_init(unsigned int g
 
 void __cpuinit gic_cpu_init(unsigned int gic_nr, void __iomem *base)
 {
+	void __iomem *dist_base;
+	int i;
+	
 	if (gic_nr >= MAX_GIC_NR)
 		BUG();
-
+	
+	dist_base = gic_data[gic_nr].dist_base;
+	BUG_ON(!dist_base);
+	
 	gic_data[gic_nr].cpu_base = base;
 
+	/*
+	 * Deal with the banked PPI and SGI interrupts - disable all
+	 * PPI interrupts, ensure all SGI interrupts are enabled.
+	 */
+	writel(0xffff0000, dist_base + GIC_DIST_ENABLE_CLEAR);
+	writel(0x0000ffff, dist_base + GIC_DIST_ENABLE_SET);
+
+	/*
+	 * Set priority on PPI and SGI interrupts
+	 */
+	for (i = 0; i < 32; i += 4)
+		writel(0xa0a0a0a0, dist_base + GIC_DIST_PRI + i * 4 / 4);
+
 	writel(0xf0, base + GIC_CPU_PRIMASK);
 	writel(1, base + GIC_CPU_CTRL);
 }
diff -Naurp linux-2.6.34_org/arch/arm/Kconfig linux-2.6.34/arch/arm/Kconfig
--- linux-2.6.34_org/arch/arm/Kconfig	2011-10-10 11:33:51.282991000 +0530
+++ linux-2.6.34/arch/arm/Kconfig	2011-10-10 11:29:18.707551000 +0530
@@ -747,6 +747,15 @@ config ARCH_KRONOS
 	help
 	  Support for Trident's Kronos platform based on a Cortex-A9.
 
+config ARCH_KROME
+   bool "Trident Krome Platform"
+   select GENERIC_TIME
+   select GENERIC_CLOCKEVENTS
+   select HAVE_CLK
+   select SOC_PNX8492
+   help
+     Support for Trident's Krome platform based on a Cortex-A9 MPCore.
+
 config ARCH_U8500
 	bool "ST-Ericsson U8500 Series"
 	select CPU_V7
@@ -923,6 +932,8 @@ source "arch/arm/mach-apollo/Kconfig"
 
 source "arch/arm/mach-kronos/Kconfig"
 
+source "arch/arm/mach-krome/Kconfig"
+
 # Definitions to make life easier
 config ARCH_ACORN
 	bool
@@ -1172,7 +1183,7 @@ config ISA_DMA_API
 	bool
 
 config PCI
-	bool "PCI support" if ARCH_INTEGRATOR_AP || ARCH_VERSATILE_PB || ARCH_IXP4XX || ARCH_KS8695 || MACH_ARMCORE || ARCH_APOLLO || ARCH_KRONOS
+	bool "PCI support" if ARCH_INTEGRATOR_AP || ARCH_VERSATILE_PB || ARCH_IXP4XX || ARCH_KS8695 || MACH_ARMCORE || ARCH_APOLLO || ARCH_KRONOS || ARCH_KROME
 	help
 	  Find out whether you have a PCI motherboard. PCI is the name of a
 	  bus system, i.e. the way the CPU talks to the other stuff inside
@@ -1211,10 +1222,10 @@ source "kernel/time/Kconfig"
 config SMP
 	bool "Symmetric Multi-Processing (EXPERIMENTAL)"
 	depends on EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP ||\
-		 MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP)
+		 MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP || MACH_KROME_A9MP)
 	depends on GENERIC_CLOCKEVENTS
 	select USE_GENERIC_SMP_HELPERS
-	select HAVE_ARM_SCU if (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP)
+	select HAVE_ARM_SCU if (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP|| MACH_KROME_A9MP)
 	help
 	  This enables support for systems with more than one CPU. If you have
 	  a system with only one CPU, like most personal computers, say N. If
@@ -1283,9 +1294,9 @@ config HOTPLUG_CPU
 config LOCAL_TIMERS
 	bool "Use local timer interrupts"
 	depends on SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || \
-		REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP)
+		REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP|| MACH_KROME_A9MP)
 	default y
-	select HAVE_ARM_TWD if (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP)
+	select HAVE_ARM_TWD if (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500 || MACH_APOLLO_A9MP || MACH_KRONOS_A9MP|| MACH_KROME_A9MP)
 	help
 	  Enable support for local timers on SMP platforms, rather then the
 	  legacy IPI broadcast method.  Local timers allows the system
diff -Naurp linux-2.6.34_org/arch/arm/kernel/head.S linux-2.6.34/arch/arm/kernel/head.S
--- linux-2.6.34_org/arch/arm/kernel/head.S	2011-10-10 11:33:50.045153000 +0530
+++ linux-2.6.34/arch/arm/kernel/head.S	2011-10-10 14:49:09.070125000 +0530
@@ -29,6 +29,9 @@
 #define KERNEL_RAM_VADDR	(PAGE_OFFSET + TEXT_OFFSET)
 #define KERNEL_RAM_PADDR	(PHYS_OFFSET + TEXT_OFFSET)
 
+#if defined(CONFIG_ARCH_KROME) && defined(CONFIG_SMP)
+.extern krome_secondary_startup
+#endif
 
 /*
  * swapper_pg_dir is the virtual address of the initial page table.
@@ -77,13 +80,21 @@
 	__HEAD
 ENTRY(stext)
 #if defined(CONFIG_ARCH_KRONOS) && defined(CONFIG_EXECUTE_WITHOUT_UBOOT)
-	nop					@ HACK IFO KRONOS EMU
+	nop						@ HACK IFO KRONOS EMU
 	mov	r1, #0xFA			@ MACH_TYPE_KRONOS = 3066(10)
-	add	r1, #0xB00			@		   = 0xBFA(16)
+	add	r1, #0xB00			@		   		   = 0xBFA(16)
 	mov	r2, #0x00			@ ATAG LIST SETUP  = 0x2000
 	add	r2, #0x2000			@                  = 0x2000
-	nop					@ END OF HACK, NORMALY DONE IN UBOOT
+	nop						@ END OF HACK, NORMALY DONE IN UBOOT
+#elif defined(CONFIG_ARCH_KROME) && defined(CONFIG_EXECUTE_WITHOUT_UBOOT) 
+	nop             		@ HACK IFO KROME EMU
+   	mov r1, #0xAC         	@ MACH_TYPE_KROME = 3500(10)
+   	add r1, #0xD00        	@        		  = 0xDAC(16)
+  	mov r2, #0x00         	@ ATAG LIST SETUP = 0x2000
+   	add r2, #0x2000       	@                 = 0x2000
+   	nop               		@ END OF HACK, NORMALY DONE IN UBOOT
 #endif
+
 	setmode	PSR_F_BIT | PSR_I_BIT | SVC_MODE, r9 @ ensure svc mode
 						@ and irqs disabled
 	mrc	p15, 0, r9, c0, c0		@ get processor id
@@ -93,6 +104,29 @@ ENTRY(stext)
 	bl	__lookup_machine_type		@ r5=machinfo
 	movs	r8, r5				@ invalid machine (r5=0)?
 	beq	__error_a			@ yes, error 'a'
+	
+#if defined(CONFIG_ARCH_KROME) && defined(CONFIG_SMP)
+	mrc  p15, 0, r6, c0, c0, 5 		@ read cpuid
+	and  r6, r6, #0x3				@ mask cpuid[1:0]
+	cmp  r6, #0x0
+	beq  mp_primary
+
+	/*
+	 * For secondary Cpu's wait until the pen is released 
+	 * Write 0 to scratch pad reg20
+	 */
+	ldr r6, =0xE068C050		@ scratch pad reg20
+	mov r7, #0x0
+	str r7, [r6]
+mp_sec_holding_pen:
+	ldr r7, [r6]
+	ldr r5, =0xDECADEAF
+	cmp r7, r5
+	bne mp_sec_holding_pen
+	b krome_secondary_startup
+
+mp_primary:
+#endif
 	bl	__vet_atags
 	bl	__create_page_tables
 
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/ethernet.c linux-2.6.34/arch/arm/mach-krome/ethernet.c
--- linux-2.6.34_org/arch/arm/mach-krome/ethernet.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/ethernet.c	2011-10-10 11:29:18.747543000 +0530
@@ -0,0 +1,203 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2009 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/platform_device.h>
+#include <linux/init.h>
+#include <asm/io.h>
+#include <mach/gmac_eth_drv.h>
+#include <asm/setup.h>
+
+#ifdef CONFIG_USING_APOLLO_SOC_GMAC0
+static gmac_platform_data_t gmac0_platform_data =
+{
+	0,
+	GMAC0_CLK_CSR_VAL,
+	GMAC0_MAX_SPEED,
+	{0x00,0x06,0x37,0xFF,0xFF,0x01},
+};
+
+static struct resource gmac0_resources[] = {
+	{
+		.start		= GMAC0_BASE,
+		.end		= GMAC0_BASE + SZ_16K - 1,
+		.flags		= IORESOURCE_MEM,
+	},
+	{
+		.start		= IRQ_GMAC0,
+		.end		= IRQ_GMAC0,
+		.flags		= IORESOURCE_IRQ,
+	},
+	{
+		.start		= IRQ_GMAC0_POWER,
+		.end		= IRQ_GMAC0_POWER,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device gmac0_device = {
+	.name		= "LIPP_6300ETH",
+	.id		= 0,
+	.dev.platform_data	= &gmac0_platform_data,
+	.num_resources	= ARRAY_SIZE(gmac0_resources),
+	.resource	= gmac0_resources,
+};
+#endif
+
+#ifdef CONFIG_USING_APOLLO_SOC_GMAC1
+static gmac_platform_data_t gmac1_platform_data =
+{
+	0,
+	GMAC1_CLK_CSR_VAL,
+	GMAC1_MAX_SPEED,
+	{0x00,0x06,0x37,0xFF,0xFF,0x02},
+};
+
+static struct resource gmac1_resources[] = {
+	{
+		.start		= GMAC1_BASE,
+		.end		= GMAC1_BASE + SZ_16K - 1,
+		.flags		= IORESOURCE_MEM,
+	},
+	{
+		.start		= IRQ_GMAC1,
+		.end		= IRQ_GMAC1,
+		.flags		= IORESOURCE_IRQ,
+	},
+	{
+		.start		= IRQ_GMAC1_POWER,
+		.end		= IRQ_GMAC1_POWER,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device gmac1_device = {
+	.name		= "LIPP_6300ETH",
+	.id		= 1,
+	.dev.platform_data	= &gmac1_platform_data,
+	.num_resources	= ARRAY_SIZE(gmac1_resources),
+	.resource	= gmac1_resources,
+};
+#endif
+
+static int __init apollo_ethernet_init(void)
+{
+    unsigned int regVal;
+    int err = 0;
+
+#ifdef CONFIG_USING_APOLLO_SOC_GMAC0
+    /* Determine if GMAC0 is accessible by checking clock reg */
+    regVal = readl(APOLLO_CLK_GMAC0_AHBCLK);
+    if ( regVal != 0 )
+    {
+        /* See if its physical GMAC0 or GMAC1*/
+        /* Only GMAC0 has Internal PHY */
+        if (gmac0_resources[0].start == GMAC0_BASE)
+        {
+            /* Read the Global GMAC0 Control Register */
+            regVal = readl(GMAC0_CTRL_GLOBAL_REG);
+            /* Find out if Internal/External PHY bit is set by microloader */
+            gmac0_platform_data.isExternal = (regVal & 0x2000) >> 13;
+        }
+        else
+        {
+            /* GMAC1 has only External PHY */    
+            gmac0_platform_data.isExternal = 1;
+        }
+
+        /* Register GMAC0 */
+        if (platform_device_register(&gmac0_device))
+        {
+            err--;
+        }
+    }
+#endif
+
+#ifdef CONFIG_USING_APOLLO_SOC_GMAC1
+    /* Determine if GMAC1 is accessible by checking clock reg */
+    regVal = readl(APOLLO_CLK_GMAC1_AHBCLK);
+    if ( regVal != 0 )
+    {
+        /* See if its physical GMAC0 or GMAC1*/
+        /* Only GMAC0 has Internal PHY */
+        if (gmac1_resources[0].start == GMAC0_BASE)
+        {
+            /* Read the Global GMAC0 Control Register */
+            regVal = readl(GMAC0_CTRL_GLOBAL_REG);
+            /* Find out if Internal/External PHY bit is set by microloader */
+            gmac1_platform_data.isExternal = (regVal & 0x2000) >> 13;
+        }
+        else
+        {
+            /* GMAC1 has only External PHY */
+            gmac1_platform_data.isExternal = 1;
+        }
+
+        /* Register the GMAC1 */
+        if (platform_device_register(&gmac1_device))
+        {
+            err--;
+        }
+    }
+#endif
+    return err;
+}
+
+arch_initcall(apollo_ethernet_init);
+
+/* Mac address from TAG List */
+unsigned char stb_mac_address[2][6];
+EXPORT_SYMBOL(stb_mac_address);
+
+/* Reading MAC address from ATAG list */
+static int __init parse_tag_mac_address(const struct tag *tag)
+{
+  int i;
+  static int unitNum=0;
+
+  printk("EMAC address found in ATAG list ...\n");
+  for (i=0; i <6; i++) {
+         stb_mac_address[unitNum][i]=(u8)(tag->u.mac.mac_addr[unitNum][i]);
+  }
+  printk(" Mac 0 address bytes = %02x:%02x:%02x:%02x:%02x:%02x\n",stb_mac_address[unitNum][0], stb_mac_address[unitNum][1], stb_mac_address[unitNum][2],
+                                                   stb_mac_address[unitNum][3], stb_mac_address[unitNum][4], stb_mac_address[unitNum][5]);
+
+  if(unitNum==0)
+      unitNum=1;
+
+#ifdef CONFIG_USING_APOLLO_SOC_GMAC1
+  for (i=0; i <6; i++) {
+            stb_mac_address[unitNum][i]=(u8)(tag->u.mac.mac_addr[0][i]);
+          
+            if(i==5)
+                stb_mac_address[unitNum][i]=stb_mac_address[unitNum][i]+1;
+  }
+  printk(" Mac 1 address bytes = %02x:%02x:%02x:%02x:%02x:%02x\n",stb_mac_address[unitNum][0], stb_mac_address[unitNum][1], stb_mac_address[unitNum][2],
+                                                   stb_mac_address[unitNum][3], stb_mac_address[unitNum][4], stb_mac_address[unitNum][5]);  
+#endif
+
+  return 0;
+}
+__tagtable(ATAG_MAC, parse_tag_mac_address);
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/gcs.c linux-2.6.34/arch/arm/mach-krome/gcs.c
--- linux-2.6.34_org/arch/arm/mach-krome/gcs.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/gcs.c	2011-10-10 11:29:18.756544000 +0530
@@ -0,0 +1,145 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/physmap.h>
+#include <mach/nor.h>
+#include <mach/gcs.h>
+#include <linux/io.h>
+
+ 
+static struct resource apollo_gcs_resources[] = {
+    {
+        .start      = APOLLO_GCS_CFG_BASE,
+        .end        = (APOLLO_GCS_CFG_BASE + APOLLO_GCS_CFG_LEN - 1),
+        .flags      = IORESOURCE_MEM,
+    },
+        
+};
+
+
+/* Do we need a GCS device ?
+static uint64_t apollo_gcs_dma_mask = ~(uint32_t)0;
+static struct platform_device apollo_gcs_device = {
+    .name       = "nx_gcs",
+    .id     = -1,
+    .num_resources  = ARRAY_SIZE(apollo_gcs_resources),
+    .resource   = apollo_gcs_resources,
+    .dev = {
+        .dma_mask = &apollo_gcs_dma_mask,
+        .coherent_dma_mask = 0xFFFFFFFF,
+    },
+};
+
+We could aggregate all the GCS peripherals here -
+static struct platform_device *apollo_gcs_platform_devs[] __initdata = {
+   &apollo_gcs_device,
+    &apollo_ip2016_device,
+   &apollo_sfc_device,
+};
+*/
+
+static int __init apollo_gcs_init(void)
+{
+    void __iomem *gcs_base=NULL;
+    
+    /**
+     * FIXME: This configuration must come from bootloader
+     */
+   gcs_base = (void*)apollo_gcs_resources[0].start;
+
+   #if 0
+   apollo_configure_gcs(base, gcs_base);
+   #endif
+
+   if (PCI_HOST_MODE_ENABLED)
+   {
+      writel(0x1, gcs_base + 0x0);   /* GCS PCI mode  */
+      writel(0x0, gcs_base + 0x4);   /* PCI host mode */
+      
+      writel(0x2, gcs_base + 0x8);
+      writel(0x01, gcs_base + 0x64); /* setup to SFC GCS Clock Mux */
+      
+      writel(0x4, gcs_base + 0x70); /* Enable NAND back-off for PCI requests */
+   }
+   else
+   {
+      writel(0x2, gcs_base + 0x008);
+      writel(0x01, gcs_base + 0x064); /* setup to SFC GCS Clock Mux */
+   }
+   /*return platform_add_devices(apollo_gcs_platform_devs, ARRAY_SIZE(apollo_gcs_platform_devs));*/
+   return 0;
+
+}
+
+#if 0 /* Revisit if we need to Reset the GCS @ kernel startup */
+static int __init apollo_configure_gcs( void __iomem *gcs_base)
+{
+    u32 rst_val, boot_sel;
+    /* Reset GCS */
+    rst_val = readl((unsigned long *)(0xe06e6010));
+    rst_val |= 0x200;
+    writel(rst_val, (unsigned long *)(0xe06e6010));
+    rst_val &= ~0x00000200;
+    writel(rst_val, (unsigned long *)(0xe06e6010));
+   
+
+    /* let burst-cfg register be default values */
+    /* default values for always_clk_cfg */
+    /* ebi_cfg - default values */
+
+    /* setup GCS_CONFIG for DCSN accesses */
+    writel(0x00, gcs_base + 0x000);              /* setup to ISA mode */
+    writel(0x01, gcs_base + 0x064);              /* setup to SFC GCS Clock Mux */
+    writel(APOLLO_NOR_BASE, gcs_base + 0x00C);   /* base address */
+    writel(0x00000000, gcs_base + 0x024);        /* remap address */
+    writel(0x03, gcs_base + 0x008);              /* remap enable, byte enable */
+
+    /* lets keep default addresses... */
+    /* dcsn-mmio accesses at 0x0000, and for DMA, the addresses shall be
+     * starting from 0xC0000000
+     */
+
+    /* 
+     * ahb_dscn_nor_aperture - same as default. though the chip addresses only
+     * 8 MBytes
+     */
+    /* Configure chip select Routing */
+    boot_sel = readl((unsigned long *)0xE06E6030);
+    if(boot_sel == 0xFFFFFFFD){
+        writel(0x00000000, gcs_base + 0x050); /* nor_cs_route  - IO_CS0 on SoC is connected to NOR flash */
+        writel(0x00000002, gcs_base + 0x054); /* nand_cs_route - IO_CS2 on SoC is connected to NAND flash */
+    }
+    else if(boot_sel == 0xFFFFFFDB){
+        writel(0x00000000, gcs_base + 0x058); /* sfc_cs_route  - IO_CS0 on SoC is connected to SFC flash */
+        writel(0x00000002, gcs_base + 0x050); /* nor_cs_route  - IO_CS2 on SoC is connected to NOR flash */
+    }
+    else {
+        writel(0x00000000, gcs_base + 0x054); /* nand_cs_route - IO_CS0 on SoC is connected to NAND flash */
+        writel(0x00000002, gcs_base + 0x058); /* sfc_cs_route  - IO_CS2 on SoC is connected to SFC flash */
+    }
+    
+    /* 
+     * Here yet we do not know who is going to setup GCS_CONFIG to select
+     * different chip-select at the SoC side. This is done here just for a
+     * temporarily
+     */
+
+    /*
+     * 
+     * The NOR flash is mapped at 0xC0000000 till +256MB for accessing with
+     * MMIO (using DCSN). It is mapped at 0x00000000 till +256MB for accessing
+     * with DMA. These are the default values as we understand.
+     * The NOR flash is connected to CS0 of the SoC and also CS0 of the IP_2016
+     * controller
+     */
+     return 0;
+}
+#endif
+arch_initcall(apollo_gcs_init);
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/gcs_dmac.c linux-2.6.34/arch/arm/mach-krome/gcs_dmac.c
--- linux-2.6.34_org/arch/arm/mach-krome/gcs_dmac.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/gcs_dmac.c	2011-10-10 11:29:18.766540000 +0530
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <mach/gcs_dmac.h>
+#include <mach/irqs.h>
+
+static struct resource apollo_gcs_dmac_resources[] = {
+	{
+		.start		= APOLLO_GCS_DMAC_BASE,
+		.end		= (APOLLO_GCS_DMAC_BASE + APOLLO_GCS_DMAC_LEN - 1),
+		.flags		= IORESOURCE_MEM,
+	},
+	{
+		.start		= IRQ_GCS_DMA,
+		.end		= IRQ_GCS_DMA,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static uint64_t apollo_gcs_dma_mask = ~(uint32_t)0;
+static struct platform_device apollo_gcs_dmac_device = {
+	.name		= "gcs_dma",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(apollo_gcs_dmac_resources),
+	.resource	= apollo_gcs_dmac_resources,
+	.dev = {
+		.dma_mask = &apollo_gcs_dma_mask,
+		.coherent_dma_mask = 0xFFFFFFFFU,
+	},
+};
+
+static int __init apollo_gcs_dmac_init(void)
+{
+	return platform_device_register(&apollo_gcs_dmac_device);
+}
+arch_initcall(apollo_gcs_dmac_init);
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/globaltimer.c linux-2.6.34/arch/arm/mach-krome/globaltimer.c
--- linux-2.6.34_org/arch/arm/mach-krome/globaltimer.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/globaltimer.c	2011-10-10 18:01:34.646325000 +0530
@@ -0,0 +1,280 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2009 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <linux/interrupt.h>
+#include <linux/platform_device.h>
+#include <linux/sysdev.h>
+#include <linux/clocksource.h>
+#include <linux/clockchips.h>
+#include <linux/io.h>
+#include <linux/time.h>
+
+#include <asm/io.h>
+#include <asm/irq.h>
+#include <asm/system.h>
+
+#include <asm/mach/time.h>
+
+#include <mach/core.h>
+#include <mach/hardware.h>
+#include <mach/globaltimer.h>
+
+#include <mach/pnx8492.h>
+
+#undef DEBUG_GLOBAL_TIMERS
+
+static unsigned long global_timer_vaddr  = 0;
+static unsigned long global_timer_irqnbr = 0;
+unsigned long global_timer_freq          = 0;
+
+static void timer_set_mode(enum clock_event_mode mode,
+				struct clock_event_device *clk)
+{
+	unsigned long ctrl = 0;
+#ifdef DEBUG_GLOBAL_TIMERS
+    printk("GT: timer_set_mode = %d\n", mode);
+#endif
+
+	ctrl = readl(global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+	switch(mode) {
+	case CLOCK_EVT_MODE_PERIODIC:
+		ctrl |= (GLOBAL_TIMER_CTRL_IRQ_ENA |
+                 GLOBAL_TIMER_CTRL_COMP_ENA |
+                 GLOBAL_TIMER_CTRL_TIMER_ENA |
+		         GLOBAL_TIMER_CTRL_AUTO_INC);
+		break;
+	case CLOCK_EVT_MODE_ONESHOT:
+		/* period set, and timer enabled in 'next_event' hook */
+        writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+        writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+        writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_HIGH);
+        writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_LOW);
+		ctrl = 0x0;
+		break;
+	case CLOCK_EVT_MODE_UNUSED:
+	case CLOCK_EVT_MODE_SHUTDOWN:
+        ctrl &= ~GLOBAL_TIMER_CTRL_IRQ_ENA;
+        break;
+
+    case CLOCK_EVT_MODE_RESUME:
+	ctrl |= GLOBAL_TIMER_CTRL_IRQ_ENA;
+        break;
+
+    default:
+	printk("Unknown timer event = %d\n", mode);
+        ctrl = 0x00;
+        break;
+	}
+    
+	writel(ctrl, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+}
+
+static int timer_set_next_event(unsigned long evt,
+				struct clock_event_device *dev)
+{
+	unsigned long ctrl;
+
+#ifdef DEBUG_GLOBAL_TIMERS
+    printk("GT:timer_set_next_event %lx\n", evt);
+#endif
+
+	/* The comparator needs to be disabled as race conditions
+	 * exist: we need to update the comparator value in two
+	 * steps as it is a 64 bit value */
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+	writel(evt, global_timer_vaddr + GLOBAL_TIMER_AUTO_INCREMENT);
+	writel(evt, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_LOW);
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_HIGH);
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+    ctrl = (GLOBAL_TIMER_CTRL_COMP_ENA |
+            GLOBAL_TIMER_CTRL_TIMER_ENA |
+            GLOBAL_TIMER_CTRL_IRQ_ENA);
+
+	/* Enable comparator + interrupt again */
+	writel(ctrl, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+
+	return 0;
+}
+
+static struct clock_event_device timer0_clockevent = {
+	.name			= "global_timer_evt",
+	.features		= CLOCK_EVT_FEAT_PERIODIC,
+	.set_mode		= timer_set_mode,
+	.set_next_event	= timer_set_next_event,
+	.rating			= 300,
+	.cpumask		= cpu_all_mask,
+};
+
+static void __init global_clockevents_init(unsigned int timer_irq)
+{
+	timer0_clockevent.irq = timer_irq;
+
+    clockevents_calc_mult_shift(&timer0_clockevent, global_timer_freq, 4);
+
+#ifdef DEBUG_GLOBAL_TIMERS
+    printk("GT: timer0_clockevent->mult = 0x%x, timer0_clockevent->shift = 0x%x\n", 
+                (unsigned int)timer0_clockevent.mult, timer0_clockevent.shift);
+#endif
+
+	timer0_clockevent.max_delta_ns = clockevent_delta2ns(0xffffffff, &timer0_clockevent);
+	timer0_clockevent.min_delta_ns = clockevent_delta2ns(0xf, &timer0_clockevent);
+
+	clockevents_register_device(&timer0_clockevent);
+}
+
+/*
+ * IRQ handler for the timer
+ */
+static irqreturn_t global_timer_interrupt_handler(int irq, void *dev_id)
+{
+	struct clock_event_device *evt = &timer0_clockevent;
+	
+	/* clear the interrupt */
+	writel(GLOBAL_TIMER_STAT_EVENT, (global_timer_vaddr + GLOBAL_TIMER_STATUS));
+
+	evt->event_handler(evt);
+
+	return IRQ_HANDLED;
+}
+
+static struct irqaction global_timer_irq = {
+	.name		= "Cortex A9 Global Timer",
+	.flags		= IRQF_DISABLED | IRQF_TIMER | IRQF_IRQPOLL,
+	.handler	= global_timer_interrupt_handler,
+};
+
+static cycle_t global_get_cycles(struct clocksource *cs)
+{
+	uint32_t upper, lower;
+
+	/* The upper 32 bits might wrap around when reading the lower 32 bits,
+	 * so we continue reading until we are sure that the upper 32 bits
+	 * stayed the same while reading the lower 32 bits */
+	do {
+		upper = readl(global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+		lower = readl(global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+	} while (upper != readl(global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH));
+
+#ifdef DEBUG_GLOBAL_TIMERS
+//    printk("GT:global_get_cycles\n");
+#endif
+	return (((uint64_t)upper << 32) + lower);
+}
+
+static struct clocksource clocksource_global = {
+	.name	= "global_timer_src",
+	.rating = 300,
+	.read	= global_get_cycles,
+	.mask	= CLOCKSOURCE_MASK(64),
+	.flags	= CLOCK_SOURCE_IS_CONTINUOUS,
+};
+
+static void __init global_clocksource_init(void)
+{
+	unsigned long ctrl = 0;
+	unsigned long count = (global_timer_freq / HZ);
+
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+	writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_HIGH);
+	writel(count, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_LOW);
+	writel(count, global_timer_vaddr + GLOBAL_TIMER_AUTO_INCREMENT);
+	ctrl = (GLOBAL_TIMER_CTRL_IRQ_ENA   | GLOBAL_TIMER_CTRL_COMP_ENA |
+	        GLOBAL_TIMER_CTRL_TIMER_ENA | GLOBAL_TIMER_CTRL_AUTO_INC);
+	writel(ctrl, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+
+	clocksource_calc_mult_shift(&clocksource_global, global_timer_freq, 4);
+
+#ifdef DEBUG_GLOBAL_TIMERS
+	printk("GT: clocksource_global->mult = 0x%x, clocksource_global->shift = 0x%x\n", 
+                        clocksource_global.mult, clocksource_global.shift);
+#endif
+
+	clocksource_register(&clocksource_global);
+}
+
+void __init global_timer_init(void)
+{
+
+#ifdef CONFIG_LOCAL_TIMERS
+    twd_base = __io_address(APOLLO_CORTEX_A9_PRIV_TIMER_BASE);
+	BUG_ON(!twd_base);
+#endif
+	setup_irq(global_timer_irqnbr, &global_timer_irq);
+
+	global_clocksource_init();
+
+	global_clockevents_init(global_timer_irqnbr);
+}
+
+void __init apollo_global_timer_init(unsigned long vaddr, unsigned long irq, unsigned long freq)
+{
+	global_timer_vaddr  = vaddr;
+	global_timer_irqnbr = irq;
+	global_timer_freq   = freq;
+  
+	global_timer_init();
+}
+#if 0
+static struct apollo_pm_timer_save pm_timer_save;
+void apollo_pm_timer_save(void)
+{
+    /*saving all the timer registers*/
+    pm_timer_save.low      =  readl(global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+    pm_timer_save.high     =  readl(global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+    pm_timer_save.control  =  readl(global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+    pm_timer_save.status   =  readl(global_timer_vaddr + GLOBAL_TIMER_STATUS);
+    pm_timer_save.cmp_low  =  readl(global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_LOW);
+    pm_timer_save.cmp_high =  readl(global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_HIGH);
+    pm_timer_save.auto_inc =  readl(global_timer_vaddr + GLOBAL_TIMER_CTRL_AUTO_INC);
+
+    writel(0x0, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+
+    return;
+}
+#endif
+
+void apollo_pm_timer_restore(void)
+{
+   unsigned long ctrl = 0;
+   unsigned long count = (global_timer_freq / HZ) + 1;
+
+   writel(0x0, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+
+   writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_HIGH);
+   writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COUNT_LOW);
+   writel(0x0, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_HIGH);
+   writel(count, global_timer_vaddr + GLOBAL_TIMER_COMPARATOR_LOW);
+   writel(count, global_timer_vaddr + GLOBAL_TIMER_AUTO_INCREMENT);
+   ctrl |=  (GLOBAL_TIMER_CTRL_COMP_ENA |
+             GLOBAL_TIMER_CTRL_TIMER_ENA | GLOBAL_TIMER_CTRL_AUTO_INC);
+   writel(ctrl, global_timer_vaddr + GLOBAL_TIMER_CONTROL);
+
+   return;
+}
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/gpio.c linux-2.6.34/arch/arm/mach-krome/gpio.c
--- linux-2.6.34_org/arch/arm/mach-krome/gpio.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/gpio.c	2011-10-10 11:29:18.788542000 +0530
@@ -0,0 +1,98 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: ??
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+ 
+#include <linux/platform_device.h>
+#include <linux/init.h>
+#include <mach/irqs.h>
+#include <mach/gpio.h>
+
+/**
+ * GPIO0 (Left): Resources and device data structure
+ **/
+static struct resource gpio0_resources[] = {
+	{
+		.start	= GPIO0_BASE,
+		.end	= GPIO0_BASE + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= GPIO0_IRQ,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct apollo_gpio_platform_data gpio0_platform_data = {
+	.nr_gpio	= GPIO0_MAX_NR,
+	.irq_base	= GPIO0_IRQ_BASE,
+	.first_pin	= GPIO0_START_PIN,
+};
+
+static struct platform_device gpio0_device = {
+	.name			= "gpio_apollo",
+	.id			= 0,
+	.dev.platform_data	= &gpio0_platform_data,
+	.num_resources		= ARRAY_SIZE(gpio0_resources),
+	.resource		= gpio0_resources,
+};
+
+/**
+ * GPIO1 (Right): Resources and device data structure
+ **/
+static struct resource gpio1_resources[] = {
+	{
+		.start = GPIO1_BASE,
+		.end   = GPIO1_BASE + SZ_4K - 1,
+		.flags = IORESOURCE_MEM,
+	},
+	{
+		.start = GPIO1_IRQ,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct apollo_gpio_platform_data gpio1_platform_data = {
+	.nr_gpio = GPIO1_MAX_NR,
+	.irq_base = GPIO1_IRQ_BASE,
+	.first_pin = GPIO1_START_PIN,
+};
+
+static struct platform_device gpio1_device = {
+	.name			= "gpio_apollo",
+	.id			= 1,
+	.dev.platform_data	= &gpio1_platform_data,
+	.num_resources		= ARRAY_SIZE(gpio1_resources),
+	.resource		= gpio1_resources,
+};
+
+static struct platform_device *gpio_devs[] __initdata = {
+	&gpio0_device,
+	&gpio1_device,
+};
+
+static int __init apollo_gpio_init(void)
+{
+	return platform_add_devices(gpio_devs, ARRAY_SIZE(gpio_devs));
+}
+arch_initcall(apollo_gpio_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/headsmp.S linux-2.6.34/arch/arm/mach-krome/headsmp.S
--- linux-2.6.34_org/arch/arm/mach-krome/headsmp.S	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/headsmp.S	2011-10-10 17:50:18.310083000 +0530
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/linkage.h>
+#include <linux/init.h>
+
+	__INIT
+
+/*
+ * Krome specific entry point for secondary CPUs.  This provides
+ * a "holding pen" into which all secondary cores are held until we're
+ * ready for them to initialise.
+ */
+ENTRY(krome_secondary_startup)
+	ldr   r0, =0xE068C050
+	mov   r6, #2
+	str	r6, [r0]
+	dmb
+	mov   r6, #4	@ Primary core keeps waiting till 
+	str	r6, [r0]    @ this value is greater than 2
+	dmb
+
+	mrc	p15, 0, r0, c0, c0, 5
+	and	r0, r0, #15
+	adr	r4, 1f
+	ldmia	r4, {r5, r6}
+	sub	r4, r4, r5
+	add	r6, r6, r4
+pen:	ldr	r7, [r6]
+	cmp	r7, r0
+	bne	pen
+
+	/*
+	 * we've been released from the holding pen: secondary_stack
+	 * should now contain the SVC stack for this core
+	 */
+	b	secondary_startup
+
+1:	.long	.
+	.long	pen_release
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/hotplug.c linux-2.6.34/arch/arm/mach-krome/hotplug.c
--- linux-2.6.34_org/arch/arm/mach-krome/hotplug.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/hotplug.c	2011-10-10 11:29:18.799544000 +0530
@@ -0,0 +1,132 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ *  linux/arch/arm/mach-apollo/hotplug.c
+ *
+ *  Copyright (C) 2002 ARM Ltd.
+ *  All Rights Reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#include <linux/kernel.h>
+#include <linux/errno.h>
+#include <linux/smp.h>
+#include <linux/completion.h>
+
+#include <asm/cacheflush.h>
+
+extern volatile int pen_release;
+
+static DECLARE_COMPLETION(cpu_killed);
+static inline void cpu_enter_lowpower(void)
+{
+	unsigned int v;
+	flush_cache_all();
+	asm volatile(
+	"	mcr	p15, 0, %1, c7, c5, 0\n"
+	"	mcr	p15, 0, %1, c7, c10, 4\n"
+	"	mrc	p15, 0, %0, c1, c0, 1\n"
+	"	bic	%0, %0, #0x20\n"
+	"	mcr	p15, 0, %0, c1, c0, 1\n"
+	"	mrc	p15, 0, %0, c1, c0, 0\n"
+	"	bic	%0, %0, #0x04\n"
+	"	mcr	p15, 0, %0, c1, c0, 0\n"
+	  : "=&r" (v)
+	  : "r" (0)
+	  : "cc");
+}
+
+static inline void cpu_leave_lowpower(void)
+{
+	unsigned int v;
+
+	asm volatile(	"mrc	p15, 0, %0, c1, c0, 0\n"
+	"	orr	%0, %0, #0x04\n"
+	"	mcr	p15, 0, %0, c1, c0, 0\n"
+	"	mrc	p15, 0, %0, c1, c0, 1\n"
+	"	orr	%0, %0, #0x20\n"
+	"	mcr	p15, 0, %0, c1, c0, 1\n"
+	  : "=&r" (v)
+	  :
+	  : "cc");
+}
+
+static inline void platform_do_lowpower(unsigned int cpu)
+{
+	/*
+	 * there is no power-control hardware on this platform, so all
+	 * we can do is put the core into WFI; this is safe as the calling
+	 * code will have already disabled interrupts
+	 */
+	for (;;) {
+		/*
+		 * here's the WFI
+		 */
+		asm(".word	0xe320f003\n"
+		    :
+		    :
+		    : "memory", "cc");
+
+		if (pen_release == cpu) {
+			/*
+			 * OK, proper wakeup, we're done
+			 */
+			break;
+		}
+
+		/*
+		 * getting here, means that we have come out of WFI without
+		 * having been woken up - this shouldn't happen
+		 *
+		 * The trouble is, letting people know about this is not really
+		 * possible, since we are currently running incoherently, and
+		 * therefore cannot safely call printk() or anything else
+		 */
+#ifdef DEBUG
+		printk("CPU%u: spurious wakeup call\n", cpu);
+#endif
+	}
+}
+
+int platform_cpu_kill(unsigned int cpu)
+{
+	return wait_for_completion_timeout(&cpu_killed, 5000);
+}
+
+/*
+ * platform-specific code to shutdown a CPU
+ *
+ * Called with IRQs disabled
+ */
+void platform_cpu_die(unsigned int cpu)
+{
+#ifdef DEBUG
+	unsigned int this_cpu = hard_smp_processor_id();
+	if (cpu != this_cpu) {
+		printk(KERN_CRIT "Eek! platform_cpu_die running on %u, should be %u\n",
+			   this_cpu, cpu);
+		BUG();
+	}
+#endif
+	printk(KERN_NOTICE "CPU%u: shutdown\n", cpu);
+	complete(&cpu_killed);
+	cpu_enter_lowpower();
+	platform_do_lowpower(cpu);
+	cpu_leave_lowpower();
+}
+
+int mach_cpu_disable(unsigned int cpu)
+{
+	/*
+	 * we don't allow CPU 0 to be shutdown (it is still too special
+	 * e.g. clock tick interrupts)
+	 */
+	return cpu == 0 ? -EPERM : 0;
+}
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/apollo_logo.h linux-2.6.34/arch/arm/mach-krome/include/mach/apollo_logo.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/apollo_logo.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/apollo_logo.h	2011-10-10 11:29:18.822542000 +0530
@@ -0,0 +1,1369 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd.
+ *
+ * All prior copyright rights in this work and the accompanying software
+ * products transferred to Trident Microsystems (Far East) Ltd. by written
+ * agreement.  All rights reserved.
+ *
+ *
+ *   name:          splash_logo.c
+ *   version:
+ *   date_modified: Jun 17, 2010
+ *   derived_by:    ddouglass
+ */
+
+#ifndef APOLLO_LOGO_H
+#define APOLLO_LOGO_H
+
+static unsigned int __initdata logo_width = 214;
+static unsigned int __initdata logo_height = 100;
+
+/*  Use this macro to extract the pixel data.  */
+
+#define HEADER_PIXEL(data,pixel) {\
+pixel[0] = (((data[0] - 33) << 2) | ((data[1] - 33) >> 4)); \
+pixel[1] = ((((data[1] - 33) & 0xF) << 4) | ((data[2] - 33) >> 2)); \
+pixel[2] = ((((data[2] - 33) & 0x3) << 6) | ((data[3] - 33))); \
+data += 4; \
+}
+static char __initdata *header_data =
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`````````P\\````_`````````````````````````P\\_"
+	"`````````P\\_`````````````````````P\\_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````P\\_`P\\_```_`````PX_"
+	"_N(G_N<J`@4Y`P\\_`````````P\\_`P\\_`````@\\^RO8IN^\\B^PL\\`P\\_````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````P\\_`P\\^```_`PT^_NDK]J(%^\\<8`@8Y`P\\_`````````@X^`P\\_`P``UOLM"
+	"FM`5H^09^@L\\`P\\_````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P`_`P`_`P`_`P\\_``\\_``\\_`P\\__>@J\\W7N\\%[@^L$6````````"
+	"`P\\_`P\\_`````@\\_ZP4U;LP#@]4,WOXP`P\\_`````P\\_````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````P`_`@\\^``````\\_``\\_`P``_^XN"
+	"\\X/UZ1V_](CX_NXM`````````P\\_`@X^````\\0<XA-<.)JOGD-H1`0\\^`P``````"
+	"`@X^````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````@\\^`@\\_`P```@(X]IP!Z2.`Z\"\"]^<48`PX^`````P\\_`P\\_````]0@ZI.09"
+	"+J[J:,D!T_HL`````P\\_`@X^`````P\\_````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````P`^`@`_`P``^K\\5[4+1YA\"O[UO?_N`N````"
+	"`P\\_`PX_``\\`````N>XB1+?S*JSHON`C```````_`P\\_`@X_````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"``````````````````````````````````````````````\\_``X^`P\\_`@\\`__<S"
+	"\\6?EZ!>X[$+/^;D0`00Y`P`_`P\\^``\\_`@\\_W?XP9\\?`$*#>=<\\%Y`,U`````P\\^"
+	"`P\\_`P\\````_````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_`P\\_`P\\_`````@,Y^*0&Z2B^[#O(^;4/`@<[```_`P\\_``\\_``\\_]PHZ?-(("
+	"&J3B.K/OU/HL_`X^```_`@\\_`P\\_````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````P\\_`P\\_`````P\\__>,G[4C4YQ\"S\\6_I__TU`P``"
+	"```_`@X_````_`T^KNH=+*KG)*;DEMX4^PP\\`````P`_`@`^`P`_``\\``P`_````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````P\\_`````P\\_`P\\_`````/8R"
+	"]8_[Z!V\\[4'2^;L3`PX_`@`_`@\\^```_````X?`Q3[WW!);42KGTWO\\Q`@\\_`P\\_"
+	"`PX_`````P`_`@`^````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````````````P\\_"
+	"`````P\\_`P\\_`````PT^^;P2ZS/'Z!6X]9/]__HT``\\_`@\\^`@X^````\\0<XE]\\5"
+	"#YW<$Z#>A]@._`X^`````P\\_`P\\_`````P`_`P`_````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````P\\_`P\\_`````P\\__-@B\\&?CYQ\"OZB3!^;<1`@T^"
+	"`P`_`PX^`P\\_````O_$E,K#L\")O::<D!U?LM`````P\\_`P\\_``````\\`````````"
+	"`P`_````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````P\\^`````PX^_^\\M"
+	"\\WKOZAZ\\ZB.`\\W[R_>$G`@X^```_`P\\_````W?\\P<<L#!934&:/AJ^@=`0\\^````"
+	"`P\\_`P\\_````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````P`_`````````P`_````"
+	"```````````_`P```@D\\]IP!ZS'%YQ\"O[D74_=DC`@D[`@T^`P\\_````````F-`5"
+	"(ZCE$9S:<,T%W_\\Q```````^```_`````P\\_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P`_`@`^`````````P\\_`@X^`P\\_`P\\__>DK[D[9YA\"NYQNX\\G+L`?\\W"
+	"``\\``P```P\\``0X^T_HL4+SW!)C71KCSRO8H_PX]```_`P\\^`P\\_```````_````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````P`_`P`_`P`_`P`_`P\\_`P\\_`````/TU"
+	"]IT\"Z2;!Y1\"K[#O-^+4/`@<[`````P\\_```_]0DY>-$($IW;&Y_=B=D/]0DZ````"
+	"`P\\_`P\\_`P\\_```_````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````P`_````````"
+	"`@\\^`@`_`P`_``\\``P``_-HB[4/3YA\"RYQ.V\\G3M`00Y`@```P``````^`P\\P?(D"
+	"+JWI!)#0-K#LP/$D_0T\\`````@X^`P\\````_```_````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````P\\_`@\\^`@\\^`P\\_````_^`N](OXZ!BXYQ&P[D[8^;\\5"
+	"`````P\\_`P\\_````Y@(T9LH!#9K8#I[;=M$(\\`@Y`P\\_`P\\_```````_`P\\`````"
+	"```_````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````````````````````````````````````_`````P\\``@X^`@\\_```_`PT^"
+	"^+$-[#;+YQ\"PZ1FZ]9#\\`/TU`P\\_```^`P\\__`X^N>XB(:?D!);43KSVPO,F`@\\_"
+	"`P\\_`@X^``````\\_``````````\\_````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```_`P\\_`@\\``@\\_`PT^_-PD\\&7DYA\"OYQ&S[4C5^\\H:`P\\_`P\\_`P`^`P\\_W_\\Q"
+	"=\\`&!9?5!)?5?M,+]@DZ`P\\_`P\\_`P\\_`````P```P\\_``\\_````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````P````\\_``\\_`@```@\\_`0$W\\X+TZ22^YA\"MZ!BY]IX#"
+	"__DT`P\\_`P\\_`P\\__`X^JN@<*:OG!)74!)C7@]8,^0H[`P\\_`P```P\\_`P\\^`P\\_"
+	"`P\\_``\\_````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````P\\_`PX^`P```@<["
+	"^+@1[3S-YQ\"MYQ6X[U#:_-PD`P`_`P`_`P\\_````S?<K6\\+[!Y?4!Y?5-K'ML.D="
+	"``\\_`````P```@LP`@HL`PTZ``\\_``````\\_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````````````````````````````````````````````````````````_```^"
+	"```_`P\\``P\\``````P``_><I\\%O?Z!>WYQ\"N[#C-^K0/`@(X``````\\```\\`\\@<X"
+	"=L`'%Z+@!)+0#IK8@]8,X`$R`````P\\^`@8=`?GN`O\\$`PX^``\\`````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P`_`P`_`P`_`P\\_`P\\_`P\\___PU]Z,%ZA^\\YQ\"PZ!:Z\\6CG"
+	"`?\\V`````P\\_`P\\_^`P]M>P@,*WI!)'0!IC6*ZWHR/8H``\\_`````PLQ`?#.`.BP"
+	"`OGQ`P````````````\\_````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````P```````P`_`P`^`P\\^````"
+	"^]$?[DW7Z!.UYQ\"PZS7*]IP\"`P<[`P\\``P\\_````[P<W9\\G`%)_;!)33(ZGEAM@."
+	"[`<X`````PX]`@(/`=I``.6J`P$+`P````\\_``\\_````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\_`P\\^`P```/@T]9']Z!FYYQ\"TYQ\"O\\6+C_N0G`PT^````````]PHZ"
+	"KND<(ZGE!)32'*/A=L\\'[04V`P\\_`P```@@G`>[(`=-D`NJ]`P<A`P````\\_``\\_"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````P\\_`P\\^````^L07[E#8YA*PZ!.W[#K-"
+	"]Z0%`@4Z`P\\_````````T?DL3[[W\"IO8!([.'J3@AM@.`@X_`````@\\``?W``MN\""
+	"`=-H`?3@`PTW`P\\_``````````\\_````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````P\\``@X``P\\_```_"
+	"`PP^](KXZ!R[YA\"QZR;\"]I'\\_NHK`@X^`P```P\\_^0L[F-\\4#I[;!);5!YC5.K'L"
+	"FM`6_@T]`````P@D`NW&`=)B`MV,`O`&`@```P\\_```_```_````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\_`@X_`P\\_`PT^_-\\E[E3;YA\"LYQ:V[U/;_>$F`````P\\_`````@\\_"
+	"O>`D3;KU!)32!)?6.[3OBMD/T?HL_`X``````OCN`MN#`M1F`N['`P@E`@```P\\_"
+	"``\\_```_````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P```````P\\_`````P```P\\_`````08[](OYZBK\"YA\"MZRK$"
+	"^*H)`/TV`P\\_`P```@X_\\@8W<LT$\"IS:!);5#I[<F-X4\\`@Y`0\\_`P\\^``8@`>:N"
+	"`-!7`=EZ`OX\"`PXZ`@```P\\^``\\_```````_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````P```P```P\\_`P\\_````"
+	"`@D\\^\\\\=[4+1YQ\"SYQ\"T[3K/^LH;`@@[`P\\_````_PT]G^(7,*WI!)+1!)C7(*GF"
+	"ON`D`````P\\``PPS`?#0`=AT`=9N`>['`PDI`@\\``P`_`P\\^```_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`P\\_````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````P\\_`P\\_````````````````````````"
+	"`````````````````P\\_`P\\_````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P````\\_`@```@```@``````_N8I\\FWIZ1JZYA\"QYQ\"W[4#1_-(?`@D\\``\\``@X^"
+	"U_PN1[KT!IK9!)33$)[<;<P#WO\\Q`````PX[`@(-`-V)`=!6`>*9`@05`@X\\`@``"
+	"`@\\^`P\\_````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````P\\_`@X^````````````````"
+	"`````````````````````````P\\_`````````P\\_`P\\_`````````P\\_````````"
+	"`````````````````````````````````````````````````````````P\\_`@X^"
+	"`````````````````````````````````````````P\\_`P\\_````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````P\\_`````@X^`@\\_``\\_`0$X^*H)ZB\"^Z!\"TYA\"Q"
+	"YQ:Y[E7<_>(G`PT^````[04VAM<.%*'>!)32!YO9/++MRO8H_@T^`````@HL`O'/"
+	"`=-B`=-A`N[(`PX[``````\\_`````P\\_`@X^^P<X^04U^04U^04U^04U^04U^04U"
+	"^04U^04U^04U^04U]`4U]`4U]`0T]`0T]`0T]`0T^04U^04U^04U^04U]`0U]`0T"
+	"]`0T]`0T]`0T]`0T]`0T]`0U]`4U^04U^04U^04U^04U^04U^04U^04U_@HZ`P\\_"
+	"`P\\_`````P\\_`````````````````````````````````P\\_`````P\\_`@X^````"
+	"`````@X^`P\\_````````````````````````````````````````````````````"
+	"`````````````P\\_`````````0T]^`@X]`0T^04U^`@X_@HZ_@HZ_@HZ_@HZ`0T]"
+	"`P\\_````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````P\\_`P\\_`P\\_"
+	"`P\\__-,?\\%W?YQ\"RZ!\"UYA\"NZB_$]9G``@4Y`````@\\_Q_0H+J[K!IG7!)/2(J?C"
+	"B-@-]@DY`````P\\_`P$/`M^/`=%=`>*<`OX\"`P\\]`````````````P\\_]`0TS=H+"
+	"N\\?YNL?YNL;XN<7WN<7WN<7WN,7WN,7WM\\3WM\\3VM\\/VM\\3UM\\/UM\\+TML+TN,3V"
+	"N\\CZN\\CZO,C[O,CZN<7XML+UM<'TML/UML/UML+UML/UML/UM\\3VM\\/WN,7WN<;X"
+	"NL?YN\\?YN<;XO\\O]WNL<`0T]`P\\_````````````````````````````````````"
+	"`````````P\\_`P\\_`P\\_`````````P\\_`P\\_`````P\\_`P\\_````````````````"
+	"`````````````````````````````````````````````P\\_]@(RU>(3O<G[P,W^"
+	"R]@(T]\\0U.$2TM\\/W.D9\\?XN````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````@\\_````````````]Z<'ZB?#YQ\"TY1\"QYA\"S[U[@_N,G`PP^````"
+	"YP(TA=8-#IO:!)C7!)73,J_JKNH>^`P\\`P\\_`@<C`>[(`=)A`MN!`?CL`@X[`P`_"
+	"```````_`````0T]Y/$BC9G,9W2G97*E8&R@8&R?8&V@8&ZA8&ZA86ZA8W\"C97*E"
+	":'2G:G>J;7FL<'RO<GZR<7ZP;7JM;'FL;'FL;'BL;GNN=8*U=(&T<7ZQ<'VP<'VP"
+	";7JM;'FL:G>J9G.F8G\"C8&ZA8W\"B:76H9W2G=H.UN<;X_`P\\`````P\\`````````"
+	"`````````````````````P\\_`````````@X^`P\\_````````````````````````"
+	"`@X^`P\\_````````````````````````````````````````````````````````"
+	"`````P\\_\\O\\OR-4&G*C:>X>Z<7^Q=(&T=8*U<'VOD9W0TM\\0````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````P````\\_`P```P\\__-@B\\&3DZ!&TYQ\"V"
+	"YQ6V[4W7^+(.`@D\\``\\_````M.P@.K/N!I;6!)?5!)C65+_YXP$R`@\\_``\\_`_OY"
+	"`MN#`=!7`>J[`P8?`P```P\\_``\\_``X`````_@H[U>(3=(&S3%F-6669<7VP@8_!"
+	"A9+%A9/%B9;(CIO,DI_1EZ/6FZC:H:W?I+'CK+CJJ;7ID)S/7FN>5F.65&\"46F>:"
+	">H>ZKKKLM\\3VKKKMJ[CJJ[CKI[/FHZ_BGZS>F:78D9[0?XR_9W*F4EZ23UR09W2G"
+	"ML/U`````````````````````````````````````````````P\\_`@X^`````P\\_"
+	"^04UU^05Q]4%VN<8_@DZ``\\`````````````````````````````````````````"
+	"`````````````````````P\\_`````P\\_^P<WZ?8ET=X/G*G;:G>J4V\"35F.64%V0"
+	"@8V`SML,````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````````````````````````````````````````_````````````````````"
+	"`P\\_`/\\V\\W[SZB*`YA\"OZ!.X[3_0]ZL)`/XV`P\\_`P\\_ZP0U=,X%!IO8!)C6!)74"
+	"'*7BA]@.`````P```P8@`NJZ`M%=`=AX`?OX`PTY`P```P\\^``\\_``\\`````^P@X"
+	"R=8'<7ZQ:'6HEZ/5Q=($V><7W>H;W>L<X>X?Y_,CZ_@G[?HK\\?XN]@(R^04U_`P\\"
+	"]@$SPL[`:G>J76J=66:99G.GI+'C^@8U````_`T\\_@LZ_PL[^@8W]`0T]0$Q\\/TM"
+	"Z?<FU^46K[SN>(6X6F::=(&TQ-$\"`````````````P\\_````````````````````"
+	"`````````P\\_`P\\_````_0DYS=D+CIK,<7ZQDI_1W^P=_PL[````````````````"
+	"`````````````````````````````````````````````````P\\_`P\\_````````"
+	"````V.46B)3'6&687FN>66:9D9[0VN<8````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`````````````````P\\_````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````^```_`P\\_`@X^`P\\_`@D\\^\\P;[3O.YQ\"PZ!\"RZ1BY\\W[S_^LL`````P\\_"
+	"_@T]H>08-*_K!)/3!)G7!I?64;[WP?(F`````PPV`O'0`M=O`=-@`>FX`@<F`@``"
+	"`P\\_`P`^```_``\\`````]P0SM\\3V<7ZQG*C:ZO<H````````````````````````"
+	"````````````````````````]0$QN,;W9W2G7&F<6&69:G:JL+WO^04U``````\\`"
+	"````````````````````````````````^04UN\\CZ9W.F>H:YR]@)`````P\\_`@X^"
+	"`````````````````````````````````````````P\\_[OLJC9K-76F>3EN.86ZA"
+	"LK_Q]0$Q````````````````````````````````````````````````````````"
+	"`````P\\_`````````P\\_`````0T]W.D:C9K,6F>:7VR@6VB;FZC9XN`@````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````P\\_`````````````````@X^`P\\_````````````"
+	"`@X^`P\\_````````````````````````````````````````````````````````"
+	"```````````````````````````````_```_`P\\_`P\\_```_`?\\V\\X/TZ2*]YQ\"Q"
+	"Z!\"TZ!BW\\W[Q_NLL`````@X^X?`Q4[_Y\")K:!)?7!)C7$)_=C=H0]PH\\`PXZ`OW`"
+	"`MV)`LU,`=EZ`?GR`@PV`@```@\\^`P\\^```_````````\\/TMH*W?BI;)R]@)````"
+	"`P\\_`P\\_````````````````````````````````````````[_PLJ[CJ9'&D76J="
+	"66::;WROO,G[^P<W`````````````````````````````````P\\_`P\\_````ZO<G"
+	"AY/&B)3'SML,`````P\\_`P\\_````````````````````````````````````````"
+	"_0DYS]P,<'RO66:966688W\"CHJ_A[_PL````````````````````````````````"
+	"````````````````````````````````````````````````_`P\\T-T.A9+$66:9"
+	"7VR?7FN=IK/DZO@H````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````P\\_`P\\_`P\\_"
+	"`````P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_````````````````````````````````"
+	"```````````````````````````````````````````````````_`P\\````_```_"
+	"``\\_`P``_>(G[D/2Z!*WYA\"SYA\"QZ1R^^*`,`0$W````]PDZA]@.'Z7C!)74!)G7"
+	"\")K94K[WQ_4G`P\\_`PPR`^['`=5H`M!7`>.?`@08`@X]`@\\_`@X^`P\\^```_`P``"
+	"````\\?XNK+CJN,3WZ?8F`````P\\_`@X^`````````````````````````P\\_````"
+	"````````Z?<FGZS>86ZA76J=6F>:=(&TQ]4&^`@X````````````````````````"
+	"`````````P\\_`@X^````]0$QGZO>F*37TM\\/`````````````P\\_````````````"
+	"````````````````````````]`0TO\\S]9W.G6V>:7&B<86ZAHJ_@[OPL````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````_PL[Q-$#?8J]66:97VR?8&V@L+SN\\O\\O````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P\\_`@X^`P\\_`````````P\\_[?HK\\_`Q_PL[````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\``````P\\_`@X]`````/DS]I`$Z2\"]Z!\"TZ!\"TZ1N[[UK?_><I````"
+	"`@\\_R/0H-+#M!9G8!)C7!)C6#)[:E-X3[`<Y`P\\_`@06`>&4`=!8`==S`^[+``LQ"
+	"``\\``````````P```P`_``\\^````^@8WV>86Y_0D^`@X`````````````P\\_````"
+	"`````````````````````@X^`P\\_````Y?(BE:+38&V@7&J=6VB;>H:YU.(2_@L["
+	"`````````````````````````````````P\\_`@X^````^@8WR]@(Q=(#YO,C````"
+	"````````````````````````````````````````````````^P@WS-H);GNN5&*6"
+	"56*5;'FLOLO\\]`0T````````````````````````````````````````````````"
+	"`````````````````````P\\_`@X^`P\\__@H[N\\?Y=X.V6F>:7VV@8W\"CN<7X^@8V"
+	"`P\\_````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````P\\_````````_@DY[OLKSML,KKKM"
+	"W>H;_0DY````````````````````````````````````````````````````````"
+	"```````````````````````````````````_`P\\``P\\_`P\\_````^\\D9[4C5YQ2U"
+	"YQ\"SZ!2X[D[7^L(5`@8[````WO\\P<<T%\"IO9!)C5!)G7!);5%Z/@OO$D`P```PHK"
+	"`?+7`=5L`<]3`N&7`OS^`PX]``````\\_`````P```P`_```_`P\\_`P\\_`@X^`P\\_"
+	"`P\\_`P\\_`P\\_`````````````````````````````````P\\_`P\\_````X.T=BI?)"
+	"7VR?76J=7&F<@(R_W^P=_`P\\`````````````````````````````````P\\_`P\\_"
+	"`````@X^_0DY_0DY_`P\\````````````````````````````````````````````"
+	"`````````@X^Z_@HDI[08W\"C9W.FEZ37Z?8G`@X^````````````````````````"
+	"`````````````````````````````````````````````P\\_`P\\_`P\\__@HZLK[Q"
+	"<GZQ66>:7VV@9W2GPL_`_`P\\`P\\_````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````````````P\\_"
+	"`@X^]`0TU>(2I;+C=8*U;'FLT-T._`P\\````````````````````````````````"
+	"`````````````````````````````````````````````````````````````@X^"
+	"`P\\_`P\\___,O\\X/SZ!\"TYA\"UYQ\"PZR_&]I7]`@P]`P\\_`0X^I^8:'J?C!)G7!)K8"
+	"!);4!Y?50+;RU/PN``````$*`=V,`=!9`M1J`O#-`@LS`P\\^``````X^`P``````"
+	"`````````@X^`P\\_`````````````@X^`P\\_````````````````````````````"
+	"`P\\_````````````V>86?XN^8&V@7&F<7VR?AY3'Y_0E`0T]````````````````"
+	"`````````````````````P\\_`````P\\_`@X^`@X^`@X^`````````P\\_````````"
+	"`````````````````````P\\_````````````_PL[W.D:L;WOM\\/UYO,C_`P\\``\\_"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P\\`_0DYJ;7H;7JM6VB;7VR?;GNOR=<(`P\\_`P\\_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P\\_````````_@HZQM,#?8J]6&696&:9=H.VV^D9`P\\_````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`````````PX_^;$-[3_/YA\"OYQ\"UYA\"N[E3;^](?````"
+	"````S?<J7\\/]!Y?5!)K6!)K7%*#=3+CSI.49\\PD]``LL`?#1`=)@`=!5`=^.`?KV"
+	"`P\\^`P\\``P\\_``````\\_`````````P\\_`````````P\\_`````P\\_`````````P\\_"
+	"`````````````````````````````````P\\`````T=X/=(&S7VR?7&F<8W\"CD)W0"
+	"[OLK`PX^`````````````````````````````````P\\_`P\\_`P\\_`P\\_`````P\\_"
+	"`P\\_`P\\_`P\\_`````````````````````````````````````P\\_`P\\_`P\\_`P\\_"
+	"_@HZ\\?XN\\_`P`0T]`````P\\_`P\\_`P\\_````````````````````````````````"
+	"`````P\\_`P\\_`````````````````````P\\_````^04WH*S?:7:I6F>:8&V@>(6X"
+	"T=\\0`P\\_`P\\_`````````````````````````````````````````````P\\_`P\\_"
+	"`P\\_`````````````````````P\\_`P\\_````````````````````````````````"
+	"`P\\_`P\\_`````````````P\\_`P\\_`````````````````P\\_`P\\_````````````"
+	"`P\\_`P\\_`````````````````````````````````P\\_````^04UI[/D97*E4%Z1"
+	"76N=@H[!XN\\@`P\\_````````````````````````````````````````````````"
+	"```````````````````````````_`````P\\````_`````````PX_`/8R\\V_KZ16Y"
+	"YQ\"TZ!\"UZ1Z\\]8WZ`@,X``\\__`X_B-D/&Z7B!)73!)G6!IO:3[WWMNL@[P8X`@\\^"
+	"`_OV`M^2`<Y4`-)>`.S$`P8?`P\\_`P\\_`@X^````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"RM<):G>I8&V@7&F<9G.FFJ;9]@(R`P\\_`````````````````````````P\\_````"
+	"`P\\_`@X^`````````P\\_`P\\_`@X^`````````````P\\_````````````````````"
+	"`````P\\_`````````@X^`P\\_`````````````````P\\_`@X^````````````````"
+	"`````````````````P\\_`````````P\\_`@X^`````````````````````````P\\_"
+	"\\O\\PEJ/69G.F6VB;7VR?@H_\"V>87`P\\_`P\\_````````````````````````````"
+	"`P\\_`````````P\\_`P\\_`@X^`P\\_`````P\\_`````````````P\\_`@X^````````"
+	"`````P\\_`P\\_`````````````@X^`P\\_`````````````@X^`P\\_`````````P\\_"
+	"`````P\\_`@X^`````````````P\\_`@X^`````````````P\\_`````````````P\\_"
+	"````````]@(RFZ;997*E5F.69'&DC9G,Z?8F````````````````````````````"
+	"`````````P\\_`````````````````````````````````````P`````_```_`P\\`"
+	"`@X^`````@@\\^;L3[3_0YQ\"QZ!\"WZ!\"S[4#0^;T3`PX_`0X_V/TO3;SV!)33!)G7"
+	"!);6#)W<@M4,_`X_`````PHL`NN\\`M)@`=%<`-V(`OO]`@X]`P\\_```^```^`P\\`"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`PX^P<[_9'&C8&V@7&F<:W>KI+#B^@8W`````P\\_````"
+	"`````````P\\_`````````@X^`P\\_`````````````````P\\_`@X^`````P\\_`@X^"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_`@X^`````````````````````P\\_`````````````@X^````````````````"
+	"`````````````````````P\\_[OLLCIO-8F^B7&F<8&V@C)G+X.T>`P\\_`P\\_````"
+	"`````````````````P\\_`````````P\\_`P\\_`````````````````````````@X_"
+	"`@X^`````````````P\\_`P\\_`@X^`````````@X^`@X^`@X^`````````P\\_`P\\_"
+	"`@X^`````````````P\\_`````````````````````````````````````````P\\_"
+	"`@X^````````````````````````````]@(REJ+59G.F5F.69G.FFJ;9[_LL````"
+	"`````````````````````````````````````P\\_````````````````````````"
+	"`````````````P`_`P`_`P\\_`P\\_`````?\\W\\73NZ2\"^YQ\"SZ!&VYQ\"Q[U7;^\\P<"
+	"`PX_^PP\\CML0):GE!)33!)K8!)?6%:+?C=H/`P\\_``\\\\`OKV`MV*`<U,`=9O`?/;"
+	"`PHK`P```P\\^`P\\^```^````````````````````````````````````````````"
+	"`````````````````````````````````````````P\\_^04VM\\/U86ZB86ZA7&F<"
+	"<'VPK;OM_0DY`````````````````````````P\\_`P\\_`P\\_`P\\_`@X^_0DY^04U"
+	"_PL[`@X^`P\\_`````P\\_`P\\_`P\\_`0T]_0HY^`<W^P<W_PL[`P\\_`P\\_`0T]`0T^"
+	"`@X^`P\\_`P\\_`P\\_`P\\``P\\_`P\\_`P\\_`````````````````````````P\\_`P\\_"
+	"`````P\\_`P\\_`0T]^`@X]P,S\\?XN[OPL\\?XN]P,T_0DY_`T]Z_@HAY/&7FN>7&F<"
+	"86ZAEJ+5Y?(C`P\\_`P\\_`P\\_`````````````````````P\\_`P\\_`P\\_`P\\_````"
+	"`P\\__PL[^P<W]0$Q\\/TNZO<IY_0E[_PM^04U_`P]`````P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_^P<W[_TM^04U_`P\\`````P\\_`P\\_`P\\_`````P\\__@HZ^P<W]@(R"
+	"\\?XN\\?XO^04U_@L[`P\\^`P\\_`P\\_`P\\_`0T]_`P\\_PL[_`P\\_PL[`@X^\\/TNCYS-"
+	"9'&D5V27:G>JI;+D[OPL_`P\\_@HZ_@HZ_PL[_`P\\_PL[_PP\\_PL[_`P\\`@X^`P\\_"
+	"```````````````````````````````````_`P```P`_```^```_`PX__N,G[3_1"
+	"YQ\"SYQ\"TZ!\"UZ!.U]('T_^DK``\\`XO`R1[KT!YO:!)?6!)G7\"9W:8,7]R?8H````"
+	"``PU`^FY`]-G`]%:`>&6`@,4`P\\]`````P\\^`P\\^```^```````_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_\\/TNK+GL7VR?86ZA6FB;>(2WNL;X_PL[`````````P\\_`P\\_`````````@X^"
+	"`P\\_````````\\/XMO\\S^HJ_@V>86^`@X`````P\\_`````````0T]Y?(BP<[`K;KL"
+	"K;KLT-T-^P<V^P<WZ/4FZ?8F\\_`P]P(S]`,T^`@Y_PL[_PL\\`P\\_`````P\\_````"
+	"`````````P\\_`````P\\_`P\\_`````````@X^XNX?M\\/UEJ+4@8V`>8:Y@Y##F*37"
+	"NL?XW.D:W>D;@8[!7&F<76J=9'&DH*S?ZO<G`P\\_`P\\_`P\\_````````````````"
+	"`````@X^`@X^`P\\_````````\\_`PSML,K+GKCYO-@8Z`?(F\\?8J]@X_\"HJ[AVN<9"
+	"`````````````@X^`@X^`P\\_````````\\_`PML+TAI/%P,W_]0$Q`````P\\_`@X^"
+	"````````]`0TS=L+J+7HD)W0AI+%B97(GJO=R=<'\\_\\P````````_@HZ[/DJV^@9"
+	"UN,3U>$2U>$2UN,3PL[`?8J\\8W\"B7&B<:'6HCIO-O,G[Q]4%QM,$S-D)U.$1UN,4"
+	"UN,4UN,3UN,3W>H:]0$Q`P\\_`````````````````````````````````P``````"
+	"`P\\_`@\\^`P```?\\W^*L)Z23!YQ\"QZ!\"TZ!\"VZR_(^;X3``L^\\PLZGN$7'J3B!)?6"
+	"!)G7!IK7+Z[JL>L?^@P^``TU`?GS`=N$`<]6`=)B`N6C`P@H`````@\\_`P``````"
+	"`P\\````^````````````````````````````````````````````````````````"
+	"`````````````````````````@X^Z/4EHZ_A7&J=86ZA66::?XN^Q=(#_PL\\````"
+	"`P\\_`````P\\_`P\\_`@X^````````_`P\\WNL<I[3F=8.V<'ROQ]0%^04U````````"
+	"`P\\_Y?(CO,CZE*#3>(6Y;7JL:'6HC9K,R]@(Y/$BM\\/UH:W@HZ_AI;#CI[/FJ;7G"
+	"M<'TU.$3_@HZ`````````````P\\_`````````@X^`P\\_`````P\\_YO0DN,7WD)W/"
+	"?XR^=X2W<GVQ:'6H7FN>76J=<'VPCYS.GJK<<G^R7VR?76J=9G.FK+?I[OLK`P\\_"
+	"`````````````P\\_`````P\\_`@X^````````````Z?8GP,W^FZC;@H[!=(&T;'FL"
+	"8&V@5F.65&&46F>:9W2HD9W0S-D*_0DZ````````````````_`P\\W^L<J;7G<GZQ"
+	"6VF=LK[P\\O\\O````````````]`0TT-T-I+#AAY3&<GZR8F^C6F:;6F>;97*E?HN^"
+	"L;WO[/DJ`P\\_[/DJK;GL?XR^@H_\"@Y#\"AI+&B)3'@(V_:G>I8F^B8&V@97*E=(&T"
+	"@H_\"A)##@8[!@Y#\"A9'#@X_\"@8V`?HJ]?8F\\G:G<WNL<`P\\_````````````````"
+	"`````````````````P`_`````P\\_`@\\^`P``_^HL\\6KGZ!BYYQ\"SYQ\"SYQ6V[UG>"
+	"_N<J````T_HL3+SU\"YK8!)?7!)C6#IS::\\L\"Y@(T`````P8<`>.?`=)C`LY3`=AU"
+	"`>W'`PLP`P```P```P`````````````_````````````````````````````````"
+	"`````````````````````````````````````P\\_`````````@X^W^L=F*777&F<"
+	"86ZA66:9AI+%T-T._`P\\`````P\\_`P\\_`````P\\_`P\\_````\\?XNR]@(DI_29W2G"
+	"4V\"3:G>JRM<(^P<W````_0DYU>$2EZ/6:G:I5F.65F.75V274%V09'&DGJK;W^P<"
+	"PL[_F:77>86X8&V@8F^B7FN>=8&TL;WP^@8V`````````````````P\\_`P\\_`P\\_"
+	"````^`@XT]`1GZS?@8Z`B)3&H:W@L\\#RNL;XM,#RFJ;9<7^Q66686&279G.F9'&D"
+	"8F^B76J=9W2GML/T\\O\\O`P\\_`````````````````P\\_`P\\_`P\\_````^@8WU>,4"
+	"H:W@?XR_>X>ZB9;)FZC;J;;IH:[@A9+$9'&D76J=5F687&F<AI+$V.45_PL[````"
+	"````]0$RS]P-DY_29W.G4V\"48&V@OLK]]P,U````````\\O`PO,CZD)S/AI'%EZ/5"
+	"G:G<E:+5?8J^7FN>5V2856&5<7VQM,#S_@HZZ?8GHJ_A=(&S@(V_@Y#\"BI;)BI;)"
+	"?(B[8W\"C8&V@86ZA;WRODZ#2GJO=F:;9DZ#3CYS.AY/&@8V`>XBZ<G^Q;'FLEJ+4"
+	"WNH;`P\\_``````````````````````````````````\\``P`_`P`_``\\_````^\\D:"
+	"[#3*YQ&VYQ\"VYQ\"RZ2\"\\](;U`_8S]`\\]G^,8$*#=!)C6!)C6!)C6)JGEK^D>]PD["
+	"`P\\_`?S_`M=P`M!9`M-A`>2D`@(1`@X[`P\\```X```\\`````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_`P\\_`@X^U>(4CYO.7&F<8&V@6F>:CYO-V^@9`0T]`````````````@X^`P\\_"
+	"`P\\_ZO<HML+T=8&T6F>:66:97VR?>(:YV.47_`P\\_PL[U>(4AI+%86ZA66:976J="
+	"86ZA8W\"C7FN>9'\"CD9W/\\_\\P````Z/4FI+#B7FN>6VB;5&&4;WROM\\/T^P<W````"
+	"`P\\_`````P\\_`P\\_````````^@8VT-T-AY3&>(6WIK/EX^`@`P\\_````````````"
+	"]`0UP<W_@X_!6VB;7&F<8&V@86ZA76J=:G>KP,W_]P0S`P\\_`P\\_`````P\\_`@X^"
+	"`P\\_`````P\\_^@8WR=<(A9+$:WBKDY_2QM,$[/DJ_`P]`````0T]U>(3CYS.8F^B"
+	"7VR?6&688&VAG:G<\\O\\P`@X^[_PMP,S^?(B[7&F<6&6876J=:G:IR]@)_PL[````"
+	"]@(RM\\3V>H>ZBI;)S]P-^@8V`P\\_^04UQ=,#=(&T86Z@6VB;6VB;@(V`[?HJ^P<X"
+	"Y?(CV>87XN\\?Y/$A[OLJY?(CN,3W:G>K76J=7FN>A9+$X^\\?`@T]_PL\\]`0U\\?XO"
+	"Z?8GX>\\?VN@8S]P-QM,#V>86]@(R`P\\_````````````````````````````````"
+	"`````P\\_`P\\_`P```/@S]9C`Z!FXYA\"VYQ\"UZ!6Y[DW8_<\\=`PP^R/@J4[WX!)C5"
+	"!)G8!);5&*+@<<T&[P8X`````P<B`>[)`=)@`L]5`=R'`O7F`P\\^`@\\``P\\_``\\_"
+	"``\\_````````````````````````````````````````````````````````````"
+	"`````````````````````````P\\_`P\\_`@X^S=H+AI/&7&F<8&V@7&J=F*77Y_0D"
+	"`@X^`````````````P\\__0DYS-D)DY_1:G>J76J=76J=76N>8&V@@8V`YO,C`@X^"
+	"Q]0&@8[!A9+%N,3WN,7WC9G,8&R@8&V@76J=9G.EEZ36]P(T````^`@XPL[`:7:H"
+	"7VR?6&68>X>ZQ-$\"_0DX`````````P\\_`P\\_`P\\_````]P,SO\\S]=X2VC9O-R]H*"
+	"]P,S`0T]`````P\\_`P\\_`P\\_`P\\_^`@XQ=(#=H.V7FN>8&V@86ZA7FN><7VOR]@)"
+	"^P<W`P\\_`````P\\_`P\\_`P\\_`P\\_`P\\_]@(RK[OM>8:YA)'$QM0%[?HK^`@X`@X^"
+	"`````P\\_````^@8VQ]0&;7JM7FN>76J=7VR@@(V`XN\\?VN<7F:78:G:J7FR?7FR?"
+	"7VR?7VN>;WRNU>(2````]0$QK[SN<W^RH:S?X>X?_0DZ````````````YO0DF:77"
+	"9'&D76J=7&F<=H.UVN46_@HZ_`P]_PL[_`P\\_`P\\```_\\_`PN\\CZ9W2G7&F<7VR?"
+	"CIK,\\OXP`````````````P\\_`0T^_`P\\_PL[_0DY^P<W_@HZ`@X^`P\\_````````"
+	"`````````````````````````````P\\_`P\\_````_-4@\\&+CYQ6RYQ\"VYQ\"TZ!J["
+	"\\6+D`/@T_@``C=P2%*+?!)G6!)O9!)+1)ZGEGN,8_0P^`````OCP`=R&`M%;`L]2"
+	"`N2G`P(.`P```@\\``P\\^```^```_````````````````````````````````````"
+	"`````````````````````````````````````````````P\\_`````````0T]Q-$!"
+	"?(F\\7&B;86ZA76J=H:W?\\O\\O`@X^`````````````@X^\\_`PK;GKFJ;8FZC::7:I"
+	"8&V@76J=8W\"CC)C+\\O\\OSML+B9;)A9'%T]`0]@(R^`@XS-D*>86X6V>;5&&59W.G"
+	"H:W@^`@X````^P<XQ-$#:7:I8&V@6F>:@8[\"S]P-_@HZ`````````P\\_`P\\_````"
+	"]`0UO<G\\>H:YC)C+T-T._`P\\`````````P\\_`@X^`@X^`P\\_`````P\\_Z?8FHJ_A"
+	"8F^B7VR?8&V@7VR?=H.UU>,3_PL[`P\\_`````P\\_`P\\_````````\\/TMI;'C=X.V"
+	"D9[1U^05^P<W`````````````````````````P\\_X^`@>(6W7FN>7FJ=86VA>XB\\"
+	"VN<7O\\O]DY_2E*'4<GZQ8V^B7VR?8&V@>8:YXN`A]P,SM\\/U<G^RG*C:WNH;`P\\_"
+	"`````````P\\_````\\/TMK[OM:'6H7&F=76J==8*UTMX0^`@Y````````````````"
+	"````[OLKK;KL8W\"C6F>:8V^BE:'4^@8W`````P\\_````````````````````````"
+	"`````````````P\\_`````````````````````````````````P\\_`````````P\\_"
+	"^*<(ZS'(YQ&RZ!\"VYQ\"TZ!FZ\\V/E`_TWR?TM4+[X!9;4!)O8!)K8!YK73[SVR_<J"
+	"_P\\```DD`NNZ`M!;`=%=`-9O`/'3`0DJ`@\\``P`_`P`_`@\\``P``````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\_````_`P\\NL;Y=(\"S7&F<8&V@86V@JK;H^`@X`P\\_````````````"
+	"`@X^]`0TSML,UN,2S]P-<7ZQ7VR?6F>:9W2GDZ#2UN(3FZC:BI?)QM,%_`L\\````"
+	"````\\?XNJK;H:'6H4E^3=(\"SO,G[_`P\\````]0$RNL;X97.F7VR?6F>:AY3'V>86"
+	"_PL[`````@X^`P\\_````_@HZPL[`@(V`=8.US=H+_@HZ`````@X^`@X^`@X^````"
+	"`````P\\_`P\\_`P\\_^@8VQ=(#:G>J7VR?7FN>7VR@>X>ZW^P<`@X^`P\\_`P\\_`P\\_"
+	"````````\\?XNLK[P;7FMBI;)T]`1`````````````@X^`````P\\_`P\\_````````"
+	"Y_,D>H>Z7VR?66:98&ZAD)S.Y/$BW.D9S=H+T=\\0?HN]8F^B7&F<8W\"CA9'$U^05"
+	"O,?Z?HN]@8Z`V^@8`0T]`````@X^`P\\_````````\\O\\PM\\/U:G:J7&F<7FN>=X2V"
+	"T^$2_0@Y`````````P\\_`@X^````Y_0DGJO=8&V?66>:9W.FGZO=_PLZ````````"
+	"`````````````````````````````````P\\_````````````````````````````"
+	"`````````````````P\\___$O\\G/LYQ\"UYQ\"UYQ\"WYA\"SZR;!]WSQ^OLS>M<+&Z7A"
+	"!)74!)K8!)?5-+'KF=`5]`L\\`P\\\\`OGM`MZ*`LY1`=-B`>6F`?\\&`@\\]`@\\_`P`_"
+	"`P`_`P```P``````````````````````````````````````````````````````"
+	"`````````````````````````````````````P\\__@H[L;WO;7NM76J=7VR?9G.F"
+	"L[_R`PX^`P```````P\\_`P\\_`P\\_`@X^`@X^`P\\_U>(3;7JM7FN>7&F<:7>IC)G+"
+	"FJ?8DZ#2Q-(\"`P\\_`P\\_````````_PL[XN\\?G:G<?(F\\H:[@YO,C`@X^````[?HJ"
+	"K[OL8F^B7VR?6VB<CYO.X^`@`0T]`````P\\_`P\\_`0T]U^,4?HJ]:'2GL;[O_PL["
+	"`````P\\_`P\\_`P\\_`P\\_`````````P\\_`P\\_`P\\_`PX^V.45=H.U8&V@76J=86VA"
+	"@(R_Z/4E`````P\\_`P\\_`P\\_`P\\_^`@XP<W_;'BK>8:YSML,`````P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_````_PL[T-T.<G^R6VB;5F.7;GRON\\?Z^P<W````````Y/$B"
+	"=X2W7FN?76J=9W*EAY/&I;+C>86X<X\"SRM<(_PL\\`````P\\_`P\\_`P\\_````````"
+	"\\?XNL[_Q:7:I7&B<7FN>>H>YW.D:_PL[`````````P\\_`P\\_````X>X>DY_18&V@"
+	"6&68;7FLJK;H`@X^````````````````````````````````````````````````"
+	"`````````````````````````````````````````PP^^K`4[4K4YA\"OZ!\"VYQ\"U"
+	"YA\"R]5?=_M4@R_<I.+?P!)?5!)K7!)G6!YK8@=4,[08X`P\\_`P@H`>FS`=5I`M!8"
+	"`=1G`O#.`P@D`P\\_`@```P\\_`P`_```````_````````````````````````````"
+	"`````````````````````````````````````````````````````````````P\\_"
+	"^@<WJ+7F:'6H76J=7FN>;WRNO<CZ`````P\\_`````P\\_`````@X^`P\\_````^@8W"
+	"P]$\":'6H76N>7VV@9G*E<7ZP>(6WQM0#^`DY`````P\\_`P\\_`P\\_`````0T]]@(R"
+	"Z_@H\\O\\O`P\\_`P\\_````YO,CH[#B7VR@7FN>7FN>EZ/5[/DI`@X^`````````P\\_"
+	"[OLKD9W086V@CIO-[/HJ`@X^`````P\\_````````````````````````````````"
+	"````XN\\??8J]86ZA6VB;8W\"CB97)[OLL`````````P\\_`````@X^R]D(?(F\\97*E"
+	"O\\S^]P,S`````P\\_`P\\_`@X^`P\\_`@X^`P\\_`P\\_````YO,CEZ/58F^A4V&49G2E"
+	"GZS>\\O\\P`P\\_````_0DYS]P.<7ZQ7VN>8&R@9'&D;WRO9'&D<7ZQL+SM_PLZ````"
+	"`P\\_`@X^`````P\\_`P\\_````[/HJIK/E9W2G7&F<7FN>@(V_Z?8F`P\\_````````"
+	"````````````V^@8A9+$7VV@5F27<G^RML+S`````````P\\_````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`PP^^+0.ZS[,Y1\"GYQ\"NYQ\"PZ1^__X?X\\O(M>-8+%Z3?!)74!)K8!)?5&*3@J^@<"
+	"`````PTT`O7D`MI^`M%8`=)?`=5J`O#0``@D``\\_``\\_`P\\_`P`````_```_````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````P\\_]0$QGZO=8G\"B7FN>7&F<=X.VQ=,$````````````"
+	"`P\\_`P\\_````````````]/`QN<7W9'&D76J=8F^B8&V@:76HI;+DZO<H`````P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`````````````````P\\_`P\\_````WNL;EZ/676J=76J=8V^B"
+	"GJK=\\O\\O`P\\_`P\\_````]0$QL[_P97&E<W^RO<G[_`P\\`````P\\_`P\\_````````"
+	"`````````````````````P\\_````Y/$B?HN^86ZA66>:9G*EE:'4\\_\\P````````"
+	"`P\\_`P\\_X>X>CYS.86V@CYO-[/DJ`````P\\_`P\\_`P\\_`P\\_`P\\_````````_@HZ"
+	"U^05FJ?98V^A56&5:7:II[/EY_0D`@X^````````]`0SPL\\!;'FL7FJ>8FZB86ZA"
+	"7VR?8&Z@I++C[?LI`````````P\\_`````P\\_`P\\_`P\\_````Z/8FF:;897*D6VB;"
+	"86V@B)3'\\?XN`````P\\_````````````````TM`1>8:Y7VR?56*6>(2WP,S]`P\\_"
+	"`P\\_`P\\_````````````````````````````````````````````````````````"
+	"`````````````````````````PX^_=PC\\6_HZ2*\\ZBG![4K6^)3__-XEQ.`D+;#K"
+	"!9K8!)C6!)G7#)W;8L7_U?LM`````PDJ`>>L`M1F`=!9`=%;`M-@`O#/`P@E`P\\_"
+	"`P```````````P``````````````````````````````````````````````````"
+	"`````````````````````````````````````````````@X^[?LKE:+576J>7FN>"
+	"6F>:?XV_SMP-`````````````P\\_`````P\\_````````[_PLK[SN86VA76J=7VR?"
+	"8&V@?(F[W.D:`0T]`````@X^`P\\_`````````P\\_`````P\\_`````````P\\_`@X^"
+	"````UN,4C)G,7&F<76J=9G.FIK+D^@8V`````````@X^U.$2=X2W6&68FZ?9YO,D"
+	"`PX^`P\\_`@X^`P\\_`P\\_````````````````````````````````W^P=?(B[86ZA"
+	"6&68:'6HH*W?]@(S`````P\\_````^@8VJ;7H8W\"C;'BKQ]0%_@HZ`P\\_`@X^`P\\_"
+	"````````````_PL[W>L<L+WO?8J]6VF;7&B;@(R_ML+TZ/4F`P\\_````````````"
+	"\\O\\OML+T9W2G7FJ>8V^C76J=6VB:D)W/V^D9`````P\\_`````P\\_`````P\\_````"
+	"````````X_$ACIO-8W\"C6F>:97&DDY_2]@(S`````````````````P\\_`P\\_RM<("
+	"<7ZQ7VR>5F.7?XR_RM<(`P\\_`````````P\\_````````````````````````````"
+	"`````````````````````````````````````````P\\_`````P\\_`@<[^\\06](7W"
+	"](GY^KP3``(YX@`Z>M8*#YO9!)C6!)G8!)K8*:SHN.TA^@L]`````@,0`MV'`=-@"
+	"`]);`M)>`==U`?CL`@LR`P\\_```_``\\_````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````@X^Y?,CC9K-6F>:7FN>6F>:BI;(U^05`````P\\_`@X^`````P\\_````````"
+	"````ZO<GI;'D8&R@76J=6VB;9W2GG:G;^P<W`````P\\_`````````P\\_`P\\_````"
+	"`P\\_`````````P\\_````````````SML-@8[!6VB;7&F<:G>JKKKL`0T]````````"
+	"[/DII[/F66:99'*EP,W^`0T^`P\\_````````````````````````````````````"
+	"`````P\\_`@X^V.45=X.V8&V@5F.6:WBKJ[CI]`4U`````P\\__PL[UN,3>8:Y5F.7"
+	"C9K-\\?XN`@X^`````````````@\\^^@8VZ/4EQM,$E*'4:'6H66>::G>JE*#2RM<("
+	"^P<W`````````P\\_`@X^````[?HJJ;7H8W\"C76J=86ZA7VR?<X\"QS-@)_0DZ````"
+	"`P\\_`@X^`````P\\_````````````````W.H;@Y##86ZA66:9:7:IGZO=^@8W````"
+	"````````````````_PL[P<W^:WBJ7FN>6&68B)3'U>(3````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````P\\_`P\\_`P\\_`PH\\`@4Z`@4Z`PD\\````L.\\@*:WG!IC5!)K7!)?6#IS;5+_Y"
+	"Y@(T`````PDH`O+3`M1H`M!:`M)@`MM\\`>[)`@DH`@```P\\_``\\_```_````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````0T]VN<9AY/&66:97FN>7&F<DZ#2WNL;````"
+	"`P\\_`P\\_`````````P\\_`P\\_````Y/$AFZ?97VR?7FN?6&69<GZRO<G[_@HZ`P\\_"
+	"`@X^````````````````````````````````````````````````Q=,#=X2W7&F="
+	"6VB<;GNNML+T````````````S-D)>(6X6&68@8W!VN<8`````P\\_`P\\_````````"
+	"`````````````````````````````P\\__@HZS]P-<GZP8&V@5V27;WROM\\/U^@8V"
+	"````````\\/XNG*G:7VR?:G>JLK_Q`P\\_`P\\_`````0T]^@8VZ/8FPL[_D9W0:W>K"
+	"8W\"D>XB\\H:[AR]D)[_PL_PL[`P\\_`P\\_`P\\_`P\\_`@X^````Z/4EG*C;8F^B7FN>"
+	"76J=;'BLJK?I\\?XN`````P\\_`P\\_`P\\_`````````````````P\\_`P\\_U>(3>X>Z"
+	"86V@6&68;'FLJ;;G_PL[````````````````````]`0TML/T97*D7FN=66:9D)W/"
+	"W^P=`P\\_````````````````````````````````````````````````````````"
+	"`````````````````````````````P\\_`P\\_`````````````````P\\_X@$Q<,T#"
+	"!)C5!)G6!)O8!)?5$)W;6<+[Y`,T`P\\_`?\\$`M^-`M%?`L]6`=EY`N_*`@LO`@``"
+	"`@```P\\_``\\_````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````0T]SML,?XR^"
+	"6&687FN>76J=GJK=Y?(B`````````````P\\_`````@X^`P\\_````WNP<D9[07FN>"
+	"7FN>66:9@8Z`W.@:_`P\\`P\\_`@X^````````````````````````````````````"
+	"````````````O<G[;7JN7&J>6F>;=H*UO\\O]`````P\\_\\_`PJ+7G7&F<7FN?H[#B"
+	"ZO<G`````P\\_`P\\_`````````````````````````````````````P\\_^@8VQ=,#"
+	":WBJ7VR?6&27=8&TP<W`^`@X````_PL[T]`1<7VP56.6B97(U>(3`````````0T]"
+	"W^P=K[SN@H^`:WBJ=H.VEZ77P,S_XN\\A]0(R_0DY`@\\^`````````P\\_`@X^`@X^"
+	"`@X^````X^`@D)W/86ZA76J=76J=?(B\\U>(4_@HZ`````@X^`P\\_`````P\\_````"
+	"````````````_`P\\S=H+<G^S8&V@6&68<'VPL[_Q_`P\\`````````P\\_````````"
+	"\\?XOK+GK7VR?76J=6F>:F*77Z?8G`P\\_````````````````````````````````"
+	"`````````````````````````````````````````````````P\\_````````````"
+	"`````P\\_`````P\\_I.49,:_J!)33!)K7!)O9!)33&J+@BMD0\\@@Z`PPL`?#/`=-E"
+	"`=)>`=!6`=V(`OCM`@X[`@\\_`@\\^`PX^``\\_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_````````_`P\\Q-$!>(2W5V277FN>7FN>J;7G[/DI`````````````````P\\_"
+	"````````````U^06AI/%76J=7&F<8&V@EJ'4\\O\\P`@X_`````````P\\_````````"
+	"`````````````````````````````````@X^M+_R97&D7FJ=6F>:?8J]Q]0%````"
+	"`@X^U.$2B)3(4V\"4:'6IP<W_]P,S`````````````P\\_````````````````````"
+	"`````````````P\\_]0$RNL;Y97*E7FN>6F>:>X>ZS-D*_0DY````Z_@HI;+D7VR?"
+	"66::GZS>Y/$AZ?8FR=8'J+3FD)S.A9+%CIK-IK+DQ=(\"X>\\?]`0T````````````"
+	"`````P\\_`P\\_````````````````````W>H;A9+$8&V@76J=7VR?A)'$YO,D`0T^"
+	"`````````````P\\_````````````````````_@HYQ=(#:7:J7FR>6&68=H.VO<G["
+	"`0T]`P\\_`@X^````````````Z?<GHJ_A7&F<7FN>7FN>H:W?\\?XN`P\\_````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````````_`````````P\\_`P\\_`````P\\_Z00U8\\;_\"9O:!)C7!)O8!)C7$)_="
+	"5<#YS?@L_@\\``_W^`>&8`=!8`M-@`=!8`>\"1`?OW`0XZ`@\\_`@\\_`P\\^``\\_````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````P\\_`P\\__`P\\NL;W<G^R5V277FN>8F^BL[_P"
+	"\\O\\O````````````````````````````````T=X.?8J]76J=6F:9:W>JJK;H_0DY"
+	"`P\\_`````````````````````````````````````````````````P\\__@DYJK?I"
+	"7VR?7FN>66:9A)'#S]P-````_PL[LK[Q;WNO5V67=X2VUN05_`P\\````````````"
+	"`````````````````````````````````````P\\_[OLKK[KM8W\"C7VR?6F>;@(V`"
+	"U^05_PL[````T=\\0?8J\\7&F<76N>BYC*L+SOI[/ED)O/AY/'E:+3LK_PU.$3]@(R"
+	"`P\\_`````````P\\_`````P\\_`P\\_`P\\_`P\\_`````````````````P\\_U>(3>X>Z"
+	"8&V@7FN>8&V@B9;)[?HK```_````````````````````````````````````^04U"
+	"O,CZ8W\"C76J=6&:8?(F\\R-4&`0T]`````P\\_````````````X>\\?F:786F>:76J="
+	"9'&DJ;;G]`0S`P\\_````````````````````````````````````````````````"
+	"```````````````````````````````````````_```_````````````^0L[H.(7"
+	"+:WI!)74!)O:!)K8!);50K?SM>PA_@T]``\\``?'0`M9M`M%;`M)A`]!9`N*<`/\\%"
+	"`@X\\`@X_`@X^`P\\```````\\_````````````````````````````````````````"
+	"`````````````````````````````````````````````````P\\_````````_PL["
+	"KKON;GNN66:87VR?9G.FO,C[]`0T`````````````````````P\\_````````R=8'"
+	"=X.V7FN>66:9>(2VN\\?X_`P\\`````P\\_````````````````````````````````"
+	"`````````````P\\_\\O`PHJ[@76N>7FN>6&68C)C+V.45````]@(REJ/57FN>7VR?"
+	"B);(YO,D`````````````````````````````````````````````P\\_`P\\_`P\\_"
+	"Z/4EHZ_A86ZA7FN>7&F<AY3%X^`@`P\\^^`@XML+T9'&D7FN>7VV@:':I=(&TA)##"
+	"HJ_AS-H*\\_`P`````````````P\\_`@X^`P\\_`````P\\_`````````````````P\\_"
+	"`````````````@X^S-H*<G^R7VR?7FN>8F^BD)S/]P,T`````P\\_````````````"
+	"````````````````````\\O\\OL;[P7FN>7FJ=6668@Y#\"U.$2`0T]`````````@X^"
+	"`P\\_````VN<7D)S.66::76J=:WBJL\\#Q_0DY`P\\_````````````````````````"
+	"```````````````````````````````````````````````````````````````_"
+	"`P\\_`P\\_```_```_X`$R2;OU\")O9!)?5!)O:!)K8!9?68L;_XP$S`P\\``PHJ`.>M"
+	"`M%;`=%@`=)?`M)A`NBQ`@48`P\\]`P`_`@\\^`P\\_``\\`````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````_0DYI+#B:WBJ6F>97FN>;'FLQ]0$_@HZ````````````"
+	"```````````````_`@X_P<W`;GNN7VR?66:9@X_\"R-4&`0T]`````P\\_````````"
+	"`````````````````````````````````````P\\_Z?8FF*376VB;76J=6&68E*'3"
+	"X.X>````X>X?@Y##5F.697*EFJ?9\\/TM`````P\\_`P\\_````````````````````"
+	"`````````````P\\_`P\\_`P\\_XN\\?EZ/57FN>7&F=7FN?CYS-[/DI`P\\_YO,CG*C:"
+	"66:976J=:WBKE:+5Q=,$Y?(C]0$Q_0DY`P\\_`````P\\_`P\\_`P\\_`P\\_`P\\_````"
+	"`````````````P\\_`P\\_````````````````_@HZP]$\";7JM7VR?76J=97*EF:78"
+	"_0@Y````````````````````````````````````````Z_@HI[+E76J=7FJ=6F:9"
+	"B97(WNL;`0T]`````````P\\_`P\\_````T-X/A9/%66:97&F<<GVQO<C[`0T]`PX^"
+	"````````````````````````````````````````````````````````````````"
+	"```````````````````_`````P\\_`P\\^````\\`DYF=`5&Z/@!);4!)K9!)O9!)K8"
+	"!)?6;<L$[`<Z`P\\[`O\\\"`>\"2`=!6`M)@`=)@`>6F`?W``@XY`P\\_`@`_`@`^`P\\_"
+	"``\\`````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````^P<WF*779G.F6VB;7VR?"
+	"<7ZQT-T.`P\\_`````````````````````````P\\__PL[N,3V9W2G8&V@66B;CIO-"
+	"U>(3`@X^`````P\\_`````````````````````````````````````````````P\\_"
+	"W^P<CYS/6&697FJ>6VB:G:K<Z?8G_`P\\RM<'=X2W4V\"4:G>JJ+3F\\_`Q`````@X^"
+	"`P\\_`````````````````````````````````````````P\\_V^@9BY?*76N>7&F<"
+	"8F^CEZ36\\_`O`@X^SML+A9'#5F.66V>:BY?*S]P,_0DY`@X^````````````````"
+	"`@X^`@X^`````````````````````````````P\\_`P\\_````````````````]`4U"
+	"NL?X9W2F7VR?6V>::G>JI+#C_`P\\````````````````````````````````````"
+	"````Y/$BG*G;6VB;7FN>7&F<D)S/Y?,B`@X^`````P\\_````````````Q]4%?(J\\"
+	"66:97&F<>(6XQ=($`@X^`@\\_````````````````````````````````````````"
+	"`````````````````````````````````````````P\\_```````_`P\\_````S?@J"
+	"1KKT!YG7!);5!)O:!)K8!)?5(ZGEE]\\4^`P^`PTX`_/;`=I]`M!7`=)@`M1C`_#."
+	"``DG`````P\\^`@\\^`@`^`P`_`````P\\_````````````````````````````````"
+	"`````````````````````````````````````````````````````````````P\\_"
+	"````]0$QCIO.8W\"C6VB;8&V@>8:YV><7`````````````````````````````P\\_"
+	"^04TK[OM86V@8&V@6VB;EZ36X.T=`@X^`````````P\\_````````````````````"
+	"`````````P\\_`````````P\\_U>,3B);'6&6876N>76J=IK+E\\O\\P^`@XML+S;GNN"
+	"4V\"3;7JNL;[P]@(R`````````````````````````````````````````````P\\_"
+	"`````P\\_T]`1@(V`7FN>6VB;:'6HH*W@^@8V_`P\\N,3U<7ZP6&277&>;H:[@ZO<G"
+	"`````````````@X^`````P\\_`````````P\\_`````````````````P\\_`````P\\_"
+	"`P\\_````````````````\\?XOL+WO86Z@7FN>6F:9;WNNKKOM`0T]`````````P\\_"
+	"`````````````P\\_````````````WNL;DY_26F>:76J=8&R@F*37[?LK`@X^````"
+	"````````````````OLO\\=(&T6F>:7&F<@Y##S=L,`P\\_`````````P\\_````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````P\\_`P\\_````\\0<XE=X3$I[<!)G7!)O8!)O9!)K8\"IK8:\\H!U/LM`P\\``PLO"
+	"`NBU`M5L`=%;`M)@`M1F`^[+``<B`P```P\\^`P\\_`P`_`P`_`P`_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````ZO<HAY3'86ZA6VB;86ZAA9'#X.T=````````"
+	"`````````````````````P\\_\\?XMIK/D7FJ>7VR?76F<H*S>Z/4E`@X^````````"
+	"`````````````````````````````````````P\\_`P\\_`@X^R]D)@8[!66:97FR?"
+	"7VR?L+SN_0@X^04VIK+D:7:I5&&4<'VPML+U]P,T````````````````````````"
+	"`````````````````````````P\\_`P\\_RM<(=8*V7FN>7&F<;'FLJK;I_@HZ_PL["
+	"I;'C97*D6V>;7VN>J;;HZ_DI`P\\_`````````P\\_````````````````````````"
+	"`````````````````P\\_`P\\_`P\\__@HZ]P,S]P,S```_[/DIIK/F7FN>7VR?6&68"
+	"<W^RM\\/V`0T^`P\\_`P\\_`````````````````````P\\_`P\\_````U^04BI7(66:9"
+	"7&F<8V^BH*S?]P,T`@X^`````````````P\\_````M,'S;'FL6VB<7&F=CIO.U^04"
+	"`P\\_`P\\_`P\\_````````````````````````````````````````````````````"
+	"```````````````_```_`P\\``````P\\_`P\\_````P/(E3KSV\");4!)K8!)S:!)K8"
+	"!9K8*ZWIK^D>^@L]`P`^`P,2`MZ.`M%@`=)>`=)>`M1G`N[(`P8?`@```P`_```_"
+	"`````P`_`P`_````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````0T]W^P=@([!8&V@"
+	"6VB<86ZBDI[0YO(C`````P\\_`P\\_`````````````````@X^Y_0EG:K<7&F<86ZA"
+	"86V?J+3F[OLK`P\\_`````````````````````````````````````````````@X^"
+	"`P\\_`@X^P<W`>H>Z66:97FN>86Z@N,7W`0T]]`0TG*G;9W2G56*5<'VPM\\/V]P,T"
+	"`````````````````````````````````````````````````P\\_`P\\_P<[_:WBK"
+	"7VR?6VB;<'VPL\\#R_`P\\]0$QEJ/68&V@76J=86VAL+SN[_PM`P\\_````````````"
+	"`````````````````````````````````P\\_`````P\\_`P\\_`P\\_YO,CP<W^R=8&"
+	"_@HZZ/4EG*G<7&F=7VR?5F27>(.VP<W^`@X^`P\\_`@X^````````````````````"
+	"`P\\_`P\\_````T-T.@(R_6V>:7&F<9W2FJ;;G_@HZ`@X^`````````P\\_`````@X_"
+	"JK;H9'&D76J=76J=F:;9W^L=`P\\_`P\\_`P\\_````````````````````````````"
+	"```````````````````````````````````````_```_```_`P\\_`P\\_````_`X^"
+	"C-H0%J/@!)?5!)K8!)S:!)?5#)S:7,/\\VOTO`````PLP`?CI`=AS`=!9`M%:`=%:"
+	"`=V(`?CM`@LP```````````_`P`_`````````P`_````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````_@HZUN,4>8:Y7VR?7&B<8V^CG:G<ZO<G`````P\\_`P\\_````````````"
+	"`````0T^W>H:E*#366:98&V@8W\"CK[ON]@(R`P\\_````````````````````````"
+	"`````````````````P\\_`````````@X^N,3V=(\"S6&687FN>:7:JPL[``@X^]`0T"
+	"FZ?:9W.F56*5;WVPML+U]P,S`````P\\_`P\\_````````````````````````````"
+	"`````````P\\__`P\\N,7V8W\"C8&V@6VB;=X2VO,G[`0T]Z?8FCIO.76J=7FN>86ZA"
+	"L;WP\\/TM`P\\_`````````````````````````````````````````````````P\\_"
+	"`P\\_`P\\_````R]@)E:'3Q=(#_PL[X>X>E*#36VB;7FN?5V28?8J]RM<(`@X^````"
+	"`````P\\_`````````````P\\_````````````Q]0%=X.V7&F<7&F<;7JML[_Q_`P\\"
+	"`P\\_````````````````^P<WGZO>7VR?7FN>7&F<H*S>Y/$B`P\\_`````````P\\_"
+	"```````````````````````````````````````````````````````````_````"
+	"```_```^`@X_`P\\_`@\\_V/TO6L'\\!);5!)K7!)O9!)S9!)?5$Z#>B=@/[P8W````"
+	"`PLP`?;E`=5I`LQ+`M%=`=N!`?'4`08?`@X^````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````^@8WRM<(<X\"R7FN>7&F<97*EJK;I[OLL"
+	"`````````````P\\_`````````````0T]U.$1BYC*6&688&V@97*EM<'S^P<W`P\\_"
+	"```````````````````````````````````````````````````_`0T^K;GL;WNN"
+	"66:97VR?<7^RR=8'`@X_]P,TFJ;:9W.F56.6;GJML+SN]@(R`````@X^`P\\_````"
+	"`````````````````````````````````P\\_]`0TKKOL7VR@8&V@6F>:?HN^QM0%"
+	"`P\\_WNL<AY3'6VB;7FN>7VR?J[CI[?HJ`P\\_`````````P\\_````````````````"
+	"`````````````````````@X^`P\\_````]`0TK[ONBY?*Y/$B````V.45BY?)6F>:"
+	"7FN>666:A9'%U.$2`@X^`````````````````````````````````P\\_````OLK\\"
+	";GNN76J=6VB;=8*UO<G[`0T^``````\\``P`_`````@X^[_PLEZ357&F<7VR?7FN="
+	"I;'DY_0E`P\\_````````````````````````````````````````````````````"
+	"`````````````````````P\\````_```_```]```__`X^G.$6+:WI!)33!)O8!)S8"
+	"!)O8!);3&Z;BL>H>]`H[``````TX`_`(`N.@`=M``N*?`O/;`@8?`@\\^`@````X^"
+	"``\\_````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````]P,TO\\O]"
+	";GNN76J=7&F<:7:IM\\/U\\_`P`````````````````P\\_`@X^````_`P\\R]@)@H_\""
+	"5V278&V@9G.FNL?X_`P\\`P\\_````````````````````````````````````````"
+	"`````P\\_````^P<XH[#B:G>J6VB;7VR?>X>ZT-T.`P\\_]P,SFJ;:9G.G5F.6:G>J"
+	"I+#C\\O\\P`````````````````````````````````````````````````P\\_[?HJ"
+	"I+#B76J=8&V@6F>:A9+%T-X/`@T^U^44@H_!6F>:7VR?76J=H*S>YO,C`P\\_`P\\_"
+	"`@X^````````````````````````````````````````````````````T=X/G*C;"
+	"I[/F_0DY````SML+@8[!66:97VN?6F::C9G,W>H;`P\\_````````````````````"
+	"`````````````````P\\_ML+T:'6H7VR?6F>:?HN]QM,$`@X^`````P`_``\\`````"
+	"`0T]Y/$@CYS.7&F<7VR?8&V@J[CJ[/DI`P\\_````````````````````````````"
+	"`````````````````````````````````````````````````P\\_`P\\_```^```_"
+	"\\0<X6\\+\\\"IW:!)?5!)O9!)O9!)K7!)C5,K#KUOLM`@\\^```_`P\\_`PTX`@,1`OX#"
+	"`P4<`PTX`@\\^`P`_`P\\_`P\\_`P\\_````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````\\_`PL[_R:WBK7&F<76J=;WNNP\\_`]P,S````````````````"
+	"`P\\_`P\\_````_`P\\P,W_>XF\\6&687VR?:'6HO\\S]`````P\\_````````````````"
+	"````````````````````````````````````]@(SF:;997*E7&F<7VR?@Y##V.46"
+	"````]P,SGJO=9W6H5F279G.FE*'3[OLK````````````````````````````````"
+	"```````````````````_XN\\@F:;86VB<8&V@66:9C9K,V><8`@X^U.(2@(V_66:9"
+	"7VR?6VB;DI[0W>H;`P\\_`P\\_`P\\_`````````````````````````````````P\\_"
+	"`P\\_````````^@<WHJ[AG*C;V^@9`0T]````QM,#>8:X6F>;7VR?6F>:DY_2Y_0D"
+	"`P\\_`````````````````````````````````P\\_^P<WK;GK9'*E7VR?66:9AY/%"
+	"S]P-`PX_`````P\\_````````_PL[V.45AY/&6F>:8&V@8F^ALK[P\\/PM`P\\_````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\_`P\\^```_]`L[L^P@+*SI!);4!)K8!)O9!)K9!);6(*;C?-(*\\P@Y"
+	"`P\\_`P`^`@\\^`@\\_`0X[`PXZ`PX\\`P\\``@\\_`P`^`P\\^`@```P``````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````P\\_`P\\_````[_PMJ+3G:'6H7&F=76J==(\"S"
+	"T=X.^`@X````````````````````````````_PL[ML/V=(&T66:97FN>:WBKQ=($"
+	"`````P\\_`````````````````````````````````````````````````P\\_\\/TM"
+	"CYS/86ZA76J=7VR@C9K,W>L;````^04UI[3F:7:I5V2786ZA@H_!XN\\?`P\\_````"
+	"`````````````````````````````````````````P\\_V.46CYS/6F>:8&V@6F>:"
+	"E:+4X_$A`0T]U>(3@8[!6VB;8&V@76J>?8F]S]P,`P\\_`````P\\_````````````"
+	"`````````````````P\\_`P\\_`@X^````^04VO<K[D)S/O\\O]```_````````O<GZ"
+	"<7VP7&F<7VR?76J=F:;9[OHL`P\\_`````````````````````````````````@X^"
+	"\\/TNHZ_B86ZA7VR?66:9D)S/U^05`P\\_``````\\`````````_@HZRM<(?XR^66:9"
+	"8&V@8W&DM\\3W\\_`Q`P\\_````````````````````````````````````````````"
+	"```````````````````````````_`P\\````_```_````YP(T:\\L!%*#=!);5!)S9"
+	"!)O9!)K8!)740+;RP/$E_0T]`P`_`@`]`@X^`@`_`P```@```@```@\\_`PX^``X^"
+	"`@`^``\\`````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````P\\_`@X^````"
+	"Z_@IFZC:97*E7&F<7VN?>X>YW.H9_`P[````````````````````````````_0HZ"
+	"J[CJ;7JM6V>:7FN><G^QRM@)````````````````````````````````````````"
+	"`````````````````0T^Y_0EAY/&7FN>76J=86ZAEZ/7X^`@````^@8WML+T;GNO"
+	"66:97FN><'ROS=L+_0DY`````````````P\\_`````````````````P\\_````````"
+	"````S]P,AI/%66>:7VR?7&F<GZO=Z_DI`@X^X.T=B9;(7&F<8&ZA7VR?;'BKNL;X"
+	"_`P\\`P\\_`````````P\\_`````````````````````@X^`P\\_````_`P\\U>(2AY3&"
+	"KKKMZ_@I````````````M,#R:'6H7FN>7FN>8F^BHZ_B]0$Q`P\\_````````````"
+	"`````````````````````@T^Y_0EFJ?976J>8&V@6VB;F:77W^P<`P\\_``\\`````"
+	"````````^`@XOLK\\>8:Y6F>:86ZA97*EOLK\\^04U`P\\_`P\\_`````````P\\_````"
+	"`````````````````````````````````````````````````P\\````_```_````"
+	"`@X^Q?(F+*[H!)G7!)G7!)S9!)O9!)K8!)C66L+\\Z@,T`P\\_`P\\_`PX^`P\\^`P`_"
+	"`P```P`_`P`^`P\\_`P\\_`@\\_`P\\_```^```_````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P\\_`P\\_````YO,CCYS.8W\"B6VB;86ZA@X_!Y?,B`PX^````````"
+	"`````````````P\\_````^P<WHJ[@9W2G7&F<7FN>>(6YS]P-`````````P\\_````"
+	"`````P\\_````````````````````````````````_PL[W.D:@(R_7&F<7FN>9'\"D"
+	"HJ[AZ/4F````_0DYR=4&=H.V6F>;76J=8V^BJKCI[_PL`````P\\_`P\\_````````"
+	"`````````````````P\\_`P\\_````QM0$?HN]6F>97VR?76J=IK/E]/`P````\\?XN"
+	"EZ/68&V@8&V@8&Z@7VR?HJ_A[OLK`P\\_`````P\\_```````````````_`````@X^"
+	"`P\\_`````@X_U^05F*77DZ#2W.H:`````P\\_```````_J[CJ86^B7FR?7FN>9W.F"
+	"J[;I^P<W`P\\_`P\\````_`````````P\\_`````````````0T]W^P=DI[16VB;8&V@"
+	"76J=H*S>Y?(B`P\\_`````P\\_`@X^````^P<WLK[Q<W^R6F>:8&V@9W.FQ-$!_0DY"
+	"`P\\_`````P\\_`P\\_````````````````````````````````````````````````"
+	"`````````````@X^`P\\_````[04VD-L0\"IS:!)?5!)O9!)O:!)O9!)C6%*+??=(*"
+	"^PH\\`````````````P`````_```_```````````````````````_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"```````````````````````````````````````````````_X.T=A9'$8FZA6VB;"
+	"8W\"CC)C*Z_@H`P\\_`````````````````````````@X^]P(RF:;99'&D76J=76N>"
+	"?XN^U.$2`````````````@X^`@X^````````````````````````````````````"
+	"^`@XT-T.>H>Z7&F<7FN>9G*FKKKM[OLK````_`P\\W>L<@H_\"7&F<76J=7FN>@8V`"
+	"U>,3`````````P\\_`@X^`P\\_`````````P\\_`@X^`P\\_`````@X^M<+U<X\"S6VB;"
+	"7FN>7FN>L+SN_@DY``\\__PL\\J[?J:7:I7FN>8FZA6F>;B)7(TMX0`P\\_`````P\\_"
+	"`````````P\\``@X``@X^````````_`P\\WNL<GJK=?(F[U.(2_0DY`````P\\_````"
+	"_0DZI+#C76J=8&V@76N>;'BKL[_Q_`P\\`````````P\\``@X^`P\\_````````````"
+	"````_`P\\U>(3BY?*6F>:8&V@7FN?I[/DZ_@H`P\\_`````P\\_`P\\_````^04UI;+D"
+	";'JL6F>:8&V@:'6HS-D*`@X^`````P\\_`P\\_`P\\_````````````````````````"
+	"`````````````````````````````````````P\\_`P\\_````T?DK6,#Z!9C6!)C6"
+	"!)S:!)K9!)G7!9332KKTO.`D`````P\\_`P\\_```````````_```_````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````P\\_W.D:?XN^86V@6F>:9G.FEJ/5]/`Q`````P\\_````````````````````"
+	"`@X^[?HJDY_086V@7&F<7&J=A9'$V>87`````P\\_`P\\_`P\\_`P\\_````````````"
+	"````````````````````````^04VP\\`!<X\"S6F>:7VR?:'6HO<G[]@(Q`````P\\^"
+	"]0$REJ/58F^A76J=8&V@86ZBI[3F[/HJ`P\\_`P\\_`P\\_`````P\\_`P\\_`P\\_`P\\_"
+	"`````0T]X>T>CYO-86Z@7VR?7VR?8W\"BO,CZ`````````@X^R-4&?XR^66:986ZA"
+	"7&F<:WBLJK;J`0T]`````P\\_`````````P\\``P\\``P\\_`````0T]W.L:CYS.?(F\\"
+	"O<G\\^P<W`````P\\_`````P\\_\\O\\NG*C:76J=8&V@76J=<G^ROLK]`````@X^`P\\_"
+	"`P\\_`P\\_`P\\_`````P\\_`P\\_````_PL[RM<(A)#\"6VB;8&V@8&V?L+WN\\_`P````"
+	"`P\\_`P\\_`P\\_````]0(RFJ?::'6H6VB;8&V@:W>JU^04`````0T\\`@X^`P\\_`P\\_"
+	"`````````````````````````````````````````````````````````P\\_````"
+	"`P\\_````J^@<(JCE!)C7!)K7!)S:!)S:!)O9!IK8<<T$WO\\P`````P\\_`P\\_````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`P\\_`````P\\_V>46=H.V8&R?66:9:WBKIK/E^`@Y````"
+	"`P\\_`````````````````````0T]Y?(CBI?*7FN>7&F<7&F<E*#2V^@8\\?XNV><7"
+	"_@HZ`````````````````````````````````P\\_`P\\_````]@(SML/U;GJM6F>:"
+	"8&R@;WNNR=8'VN<8S]P,VN<7_@HZN<7W<X\"S6&688F^B76F=<G^QK;KL]@$Q````"
+	"`P\\_`````@X^`P\\_`P\\_`````P\\_W.D;CIO-9W.F7VN>86ZA7VN>;7JMOLO]Z_DI"
+	"T=\\.^P<WZO<GGZO=6F>:8&V@8&V@7&F<?XR_U>,2_`P\\`P\\_`````P\\_`P\\_`P\\_"
+	"````_@HZT=X/@H_!>8:XL;[O]`0T`P\\_`P\\_`@X^`````0T]Y_0EE*'36VB<86ZA"
+	"76J=?(F\\NL;YWNL<O\\O\\[/DH```_`````````````P\\_`@X^````_@HZP,S^?(B["
+	"6F>:8F^B8W\"CL+WNT-T-P<W_X^`@_0DY`````P\\_[OPLD)W/97*E76J=86ZA<'VP"
+	"M\\/VO\\O^NL;X\\O\\P`@X^````````````````````````````````````````````"
+	"`````````````````P\\_`````P\\`W_\\Q<<T$\")K7!)K8!)O9!)K8!9S:%Z3A1+GS"
+	"KND=]`HZ`````P`_`@`^``\\`````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````P\\_`````````@X^`P\\_`````0T]R]@):G:I"
+	"7VN>6668;7JMKKKL`0T]`P\\_`@X^`````````````P\\_````_`P\\W>H;A)'#6VB;"
+	"7FN>7FN>@X_!HJ[@KKKLN\\GZ^@8V`````````````````````````````````P\\_"
+	"`@X^````\\O`PJ;;H:7:I6F>:8F^B:G:IDZ#2DY_2GZO>T-T-`0T]XN\\@DZ'366::"
+	"8&VA8&V@7&F;=H.UL+[OX>X>_0DY````````````````\\_`PRM<(DY_3=(&T97&D"
+	"86V@8FZA8&V@:G>JC)K-H[#BJK;I\\?\\O`P\\_Q-(\";WRO6VB;8&V@7&F<97*DDI_1"
+	"V.46^`@X````````````_0DZZ/4FOLK\\@X_#<'VPJ[CI[OLK`````P\\_`P\\_````"
+	"`P\\__`P\\WNL<CIK-6F>:86ZA7VR?;GNNAY3'FZC9J+3EZ?8F```````_````````"
+	"````````````_0DYM,#R=(\"S6V>;8F^B8G\"C@H_\"C)G*DI[0V.46^`@X`````@X^"
+	"Y_0DAI/%86Z@7FN>86ZA97*D?(B\\BYC+KKKM]0$R`P\\_````````````````````"
+	"`````````````````````````````````````````P\\_`P\\_`@\\_H^09-K#L!973"
+	"!)O9!)O9!)K8!)O9(:CE?M,)WO\\P``\\_`@`_`P`_`P`_````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````````````P\\_````"
+	"`P\\_`P\\_````[?HKJ[?I8&R?7FN>6VB;:G>JGZS?]`,T`````P\\_`````P\\_`P\\_"
+	"````````_PL[U.$2?HJ]6F>:7VR?7&J=9G.F=(\"SE:'4S-D*_0DY````````````"
+	"`````````````````````P\\_`P\\_````[_TMG*G=9W2G6VB;8&V@76J=8&V@>(2W"
+	"K;GLZ?8F`@X^`@X^P,W^<X\"S6VB;7VR?7FN>7&F<:G>JF*78R-8&Y/$B[/HJZ?<G"
+	"V>86K[ON@Y##=H.WG:K=?(B[86ZA8&ZA7FN>76J=9W2GAY3&O,C\\]P,S````Z/8F"
+	"H*W?8&V?6VB;7VR?76N>8F^BD9W/P]$!X>\\?Y_0EW^T>R-8&FZC:;WNO9W2HK;CK"
+	"\\/TM`````P\\_`P\\_`P\\_````````_PL\\UN,4AY3'6F>:86ZA7FN>7&F=:G>ID9[/"
+	"S]P,^04U````````````````````````````^`<WJ;;H;7JM7&B<7VR?7&J=7VV@"
+	"=X2WJK?HZO<H`0T]````_`P\\X.T=?(F\\76N>7FR?76J=7VR?<7ZPH:[@WNH;`0T]"
+	"`````P\\_`````````````````````````````````````````````P\\_````````"
+	"`````P\\__@T]=M$'$J'>!)?6!)O9!)S9!)O9!)C6#)O9;LL\"V_TP`P\\``P\\^`P\\_"
+	"``````\\`````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````P\\_`P\\_`0T]_@L[^P<XP,S`>8:Y7&F<8&V@7VR?7VR?>H:Z"
+	"R]@)]P,S_PL[`0T]`P\\_`P\\_````````_@HZRM<(>8:Y6&687&F<6FB;<7^RKKOM"
+	"Y_0E`P\\_`P\\_`P\\_`P\\_````````````````````````````````````[/DID)S."
+	"9'&D66:97&F<9'&DD)S/T-T/^P<W````````````[?HJK;KL8W\"B6F>:7VR?8&V@"
+	"76N>6VF<;GJMAI+%DZ#2C)G+<GZQ7VR??XR`QM0%V>86B)7'6F>;76J=6VB;9W2G"
+	"G:C;W.D:`P\\_`````````0T]WNL:A9+#7VR?6F>:8&R?7FN>76J=:WBK?8J]A9/%"
+	">XBZ9'*E6668<G^RN,7W]`0U`````P\\_`P\\_`P\\_````````````_@HZS=H*@8Z`"
+	"66:97VR?6FB:=(&SKKOLZ_@H`P\\_`````P\\_`P\\_`P\\_`````````P\\_````^04U"
+	"GJO<9W2G6F>:6VF<8W&DD9W/SML,_0HZ`P\\_````````_PL[U^04=(&T66>:6FB;"
+	"86V@@Y##R=<(]P0T`````P\\_`P\\_`P\\_````````````````````````````````"
+	"`````````````````P\\_`P\\_`P\\_`@X^ZP0U5+_X!)?6!)G8!)O9!)S:!)C7!)/1"
+	"#9W:HN08\\`DY`P```@\\_`P\\_``\\`````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````P\\_`P``^04UV>87LK_PF*37<G^R"
+	"5F.65V276&685V2856*666::<7ZRD9W1M\\+UW^L<`0T]`````P\\_````_0DYO<G["
+	"<'VP4%V07VV@B9?*R=<'\\?XO`@X]`````P\\_`P\\_`P\\_````````````````````"
+	"````````````````YO,D?XN^6&6756*6=(\"SK[OMYO,D_@HZ`````P\\_`P\\_`P\\_"
+	"`@X_Z/4EI[/E;'FL5V275V276FB;6F>:66:966685F*65&&58V^BE*#3TM`0^@8V"
+	"WNL<@H_!4%Z166:9=X2WML+UY_0E_`P\\`P\\_`P\\_`P\\_````_@DYUN,4C)G,7VR?"
+	"56*56&685F.656.65&*54V\"445Z16F>:B)3(R-4']P,S`````P\\_`P\\_`P\\_`P\\_"
+	"````````````_0DYP<W_=H.V3UR07FN?B);(RM<(]@(R`PX_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`````````````P\\_\\_`PCIO-66:95F.6<'VOKKKLXN\\@_0HZ`````````P\\_"
+	"````^P<WQ]0%:'6H3EN.9W2HFJ78W.D:^P<W`````P\\_`P\\_`P\\_`P\\_````````"
+	"`````````````````````````````````````````@X^`@X^`P\\__PT^KNH=,J[I"
+	"!)72!)K8!)O8!)G7$J#=-K'L<LX%X/`R`P\\_`P\\_`@`^`P\\_``\\`````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_\\`$QQ-(\"BI7)>8:Y<X\"S<GZQ=H.V=H.V=H*V=8*U<W^S<7ZQ=8&TF*36T-X."
+	"_`P\\````````````_0DYM\\/U;'BK:'6HH:[@VN@8^`@Y`````````P\\_`@X^````"
+	"`````P\\_````````````````````````````````Z/0EB)7':WBKC9G,Q,`\"[_LL"
+	"`P\\_`````````@X^`@X^`@X^`````0T]Z?8FO,CZCYS.<'VP8F^B7FR?76F=8&V@"
+	";7JMB97(ML+TX>X>`0T]`0T]V>87?XN^8&VAC)G+R-4&\\O\\O`P\\_`````P\\_`@X^"
+	"`@X^````````_PHZV.86JK;HA9+$<GZR:G:I9G.F9W6H<'VQA9+%K+GKV.46^P<X"
+	"`P\\``P\\_`@X^````````````````````````^`DYOLO]>H>Y:G>KG*G=UN04^`@X"
+	"`````````P\\_`P\\_`````````````P\\_`````````@X^[_PLB97'9G.FB9;)PL[_"
+	"[?HJ`@X^`````````````P\\_````^@8WRM<(=H*U>86XKKOMY?(B`0T]````````"
+	"`P\\_`P\\_`````````P\\_`````````````````````````````````````````P\\_"
+	"````````````Z`4V8\\;_$Z#<!)?4!)O9!)O8!)31**GE@]<,XO`Q`@`_```_`@\\]"
+	"``X^``\\_``````\\`````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````P\\_````^08VV><7LK[PL;[PN<7WO<GZO,CZO,CZO,CZ"
+	"O,C[O,C[N<7XL+SNP,W^X^`@`0T]`````P\\_````_@L[S=L+F:;8JK?IZ?8F````"
+	"`````````@X^`P\\_`````P\\_`````````````````````````P\\_````````````"
+	"\\O`PN\\?YK[SNU^05`@X^`````````@X^`P\\_`````````````@X^`P\\_````_@HZ"
+	"VN<8M,'RFZC9D9[1E*'3H:[ANL?YW.D9_`P\\`````````0T]X^`AI[/FHJ[@U.(3"
+	"`P\\_`````````@X^`P\\_`````````@X^`P\\_````````\\O\\OT-T.ML+UJK;IJ+3F"
+	"K[SMOLO\\U>,3^04T`````````P\\^`P\\_`````P\\_````````````````````_PL["
+	"UN,4K+GJL;[OY/(A`````````P\\_`P\\_`````````P\\_````````````````````"
+	"`@X^]@$QL;WOJ+3FT]`1`0T]`````````@X^`P\\_`P\\_````````_PL[X^`AL[_Q"
+	"Q=(#\\O\\O`````````````@X^`P\\_`````P\\_````````````````````````````"
+	"`````````````````````````P\\_````]PDZM>P@)JKF!)G7!)K9!)O:!)O8!)+0"
+	"0K/OL.L?_PT^`````@\\^`@\\^``X^``\\_````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````````````````````````P\\_`P\\_`0T]_@HZ"
+	"_@H[_PL[_PL[_PL[_PL[_PL[_PL[_PL[_PL[_@HZ_PL[`@X^`P\\_`P\\_````````"
+	"`@X^^@8V\\/TM]`0T`P\\_`P\\_`P\\_`````P\\_`P\\_````````````````````````"
+	"`````````````P\\_`P\\_`````@X^_@HZ_@HZ`0T]`````P\\_`P\\_`P\\_`P\\_````"
+	"`````````P\\_`P\\_`P\\_`P\\_`0T]_@HZ]P,R[?HJ[OPL^@8W_PL[`0T]`P\\_````"
+	"`````P\\__@HZ\\_`P^04T`0T]`````````P\\_`P\\_`P\\_`````````P\\_`P\\_`P\\_"
+	"`````P\\_`0T\\_PL[_0DY_0DY_@HZ_PL\\`0T]`P\\_`P\\_`P\\_`P\\_`P\\_````````"
+	"`````````````P\\_`````P\\__PLZ^`@X_0DY`@X^`P```P\\_`````P\\_`P\\_````"
+	"`````````````````````````@X^`0T]^@8V_0DY`0T]`````P\\_`P\\_`P\\_`P\\_"
+	"`````P\\_`P\\_`P\\_`0T]_@HZ_`P\\`P\\_`P\\_`P\\_`````P\\_`P\\_````````````"
+	"````````````````````````````````````````````````````]0DZP?(E:LD\""
+	"$IS:!)?6!)S:!)O9!)O9'J;C>=$(VOTO`0X_`P\\^`@\\_`@\\_``\\_``\\_``\\_````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````P\\_````````````````````````````````````````````````````"
+	"`````````P\\_`P\\_`````P\\_`P\\_`@X^`@X^`P\\_`````P\\_`P\\_````````````"
+	"`````````````````````````````````````P\\_`P\\_`P\\_````````````````"
+	"`P\\_`P\\_`P\\_`````````````````````````P\\_`P\\_`````P\\_`````P\\_`@X^"
+	"`@X^`P\\_`P\\_`P\\_`P\\_`````P\\_`P\\_`P\\_`@X^`P\\_`P\\_`P\\_`````P\\_````"
+	"`````````````````P\\_`P\\_`````````P\\_`P\\_`````````````P\\_`P\\_````"
+	"`P\\_`@X^`P\\_`````````````````````````````@X^`PX^``\\_`````````P\\_"
+	"`P\\_`@X^`````````````````````````````````P\\_`P\\_`P\\_`P\\_`P\\_````"
+	"`P\\_`````P\\_`P\\_`````````````P\\_`P\\_`P\\_`P\\_`````````P\\_`P\\_`P\\_"
+	"````````````````````````````````````````````````````````````````"
+	"````````````W?XPB-@.,Z_K\"9G8!)G7!)O9!)G7\")W:;<P#S/<I_0P]`P\\_```^"
+	"`@X_`@\\```````\\_``X^````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````````````````````P\\_`````P\\_````````````````````````"
+	"`````````````````````````````P\\_`````````P\\_`@X^````````````````"
+	"`P\\_`````````P\\_`````````````````````````````````````````P\\_````"
+	"`````@X^`P\\_`````````````@X^`P\\_`````P\\_`````````````````P\\_````"
+	"`````P\\_`@X^`````````````````````````P\\_`@X^`````@X^`P\\_````````"
+	"`````P\\_`P\\_`````````P\\_`````````````````````````````````@X^`P\\_"
+	"`````````````@X^`P\\_````````````````````````````````````````````"
+	"`@X^`P\\_`````````````@X^`P\\_`````P\\_````````````````````````````"
+	"`P\\_`@X^`````````````````P\\_`````````````P\\_`````````````````@X^"
+	"`P\\_`````````P\\_`````````P\\_````````````````````````````````````"
+	"````````````````````````````````````Q_0G7L3]%:/@!)G8!)K8!)O9!)C6"
+	"\"IW:E=T2\\P@X`````P\\_`P\\``P\\``P\\_`@```P\\_``\\_````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`P\\_`P\\_`````````````````P\\_`P\\_````````````````````````````````"
+	"`````````````````````````````P\\_`P\\_`````````````P\\_`P\\_````````"
+	"`````````````````````````````P\\_`P\\_`````````````````````````P\\_"
+	"`P\\_`````P\\_`P\\_`````````````P\\_`P\\_````````````````````````````"
+	"`````````````````P\\_`P\\_`````````````P\\_`P\\_````````````````````"
+	"`````````````````````````P\\_`P\\_`````````````P\\_`P\\_````````````"
+	"`````````````````````````P\\_`P\\_`````````````````P\\_````````````"
+	"`````````````````````P\\_`P\\_`````````P\\_````````````````````````"
+	"````````````````````````````````````````````````````````````M>P@"
+	"0;;Q\"9W;!)K8!)K8!)K8!)C7%:'>G=`4\\P@X```````_```^`P\\``P`````_````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"`````````````P\\_````F^$6(*?D!)K8!)K9!)K9!)C7\")K9.K+NSO@J`P\\_```_"
+	"```^```_````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````Z@0U=L`&!YG7!)C7!)K8!)S9"
+	"!)G8!9G8+:WIQ/,G`P\\_```_```^```_````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"H>,82[GS!)/2!)C7!)K8!)S8!)C7\"IK9/;7PR_8I`P\\_```_```^```_````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````3;SV(Z?C!)74!)K9!)O8!)S9!)?5$I[;8L;_X@$R"
+	"`````P\\^`P\\^```_````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````%:3A\"IW;!)G7!)O9"
+	"!)O9!)O9!);4%)S;<,T$Y@(T`````P\\^`P\\_`````P\\_````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````\"IW<!9K9!)G7!)K7!);4!)/2!([-!I/22KKUVOTO```````_`P\\_`P\\_"
+	"`P\\^`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_````````/[7Q':;B!)G6#J#<):GE0K7P3+CS5[WX"
+	"C]H1Z@0U`````@X``@X_`P\\_`````P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_````````E]\\4<<T$"
+	"4[[W8,7^?=,*H>08L.L?M^XBW/XP^`P]`````PX_`P\\_`P\\_```_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_`P\\_"
+	"`P\\_`P\\_````````_@T]^`P]^PP\\^`P\\_0T]_PT^_`X^_`X^`@\\_`P\\_``````\\`"
+	"``\\``````P\\`````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````````````````````````````````````"
+	"````````````````````````````````";
+
+#endif // APOLLO_LOGO_H
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/board.h linux-2.6.34/arch/arm/mach-krome/include/mach/board.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/board.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/board.h	2011-10-10 11:29:18.958463000 +0530
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_BOARD_H
+#define __ARCH_MACH_BOARD_H
+
+#include <mach/pnx8492.h>
+
+/*
+ * Board tile identification (KROME_SYS_PROCID)
+ */
+#define KROME_PROC_MASK			0xFF000000
+#define KROME_PROC_UNUSED		0x00000000
+#define KROME_PROC_A9UP			0x02000000
+#define KROME_PROC_A9MP1		0x04000000
+#define KROME_PROC_A9MP2		0x06000000
+#define KROME_PROC_A9MP4		0x0C000000
+
+
+#define check_krome_proc(proc_type)								\
+	((readl(__io_address(KROME_SYS_PROCID)) & KROME_PROC_MASK)	\
+	 == proc_type)
+
+#ifdef CONFIG_MACH_KROME_1SI_A9UP
+#define core_tile_a9up()	1
+#else
+#define core_tile_a9up()	0
+#endif
+
+#ifdef CONFIG_MACH_KROME_1SI_A9MP1
+#define core_tile_a9mp1()	1
+#else
+#define core_tile_a9mp1()	0
+#endif
+
+#ifdef CONFIG_KROME_MP2
+#define core_tile_a9mp2()	check_krome_proc(KROME_PROC_A9MP2)
+#else
+#define core_tile_a9mp2()	0
+#endif
+
+#ifdef CONFIG_KROME_MP4
+#define core_tile_a9mp4()	check_krome_proc(KROME_PROC_A9MP4)
+#else
+#define core_tile_a9mp4()	0
+#endif
+
+#define machine_is_krome_up() (machine_is_krome() && core_tile_a9up())
+#define machine_is_krome_mp() (machine_is_krome() && \
+								(core_tile_a9mp1() || core_tile_a9mp2() || core_tile_a9mp4()))
+
+#endif	/* __ARCH_MACH_BOARD_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/cm.h linux-2.6.34/arch/arm/mach-krome/include/mach/cm.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/cm.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/cm.h	2011-10-10 11:29:18.972462000 +0530
@@ -0,0 +1,80 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/* Copyright (c) 2007 NXP B.V.
+ *
+ * BRIEF MODULE DESCRIPTION
+ *   Clock module specific definitions
+ *
+ * Author: source@mvista.com
+ *
+ *  This program is free software; you can distribute it and/or modify it
+ *  under the terms of the GNU General Public License (Version 2) as
+ *  published by the Free Software Foundation.
+ *
+ *  This program is distributed in the hope it will be useful, but WITHOUT
+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ *  for more details.
+ *
+ *  You should have received a copy of the GNU General Public License along
+ *  with this program; if not, write to the Free Software Foundation, Inc.,
+ *  59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
+ */
+
+#ifndef __PNX8XXX_CM_H
+#define __PNX8XXX_CM_H
+
+#ifdef CONFIG_SOC_PNX85500
+#include <glb.h>
+#else
+#include <mach/pnx8492.h>
+#endif
+
+/* PNX8XXX clock registers */
+
+/* Allocated PLL sources: provided by hardware */
+#define ARM_PLL_NR_M0		81	/* !! value to be checked !! */
+#define MIPS_PLL_NR_M0		81
+#define TM_PLL_NR_M0		92
+#define MEM_PLL_NR_M0		78
+
+/* Allocated PLL sources: provided by hardware */
+#define ARM_PLL_NR_M1		103	/* !! value to be checked !! */
+#define MIPS_PLL_NR_M1		103
+#define TM_PLL_NR_M1		105
+#define MEM_PLL_NR_M1		100
+
+/* Defaults when clock source is illegal */
+#define ARM_CLOCK_DEFAULT	525000000	/* !! value to be checked !! */
+#define MIPS_CLOCK_DEFAULT	525000000
+
+#define PNX8XXX_CLK_USB_30_CTL_0  (PNX8XXX_CLOCK_BASE+0x0D0)
+#define PNX8XXX_CLK_USB_30_CTL_1  (PNX8XXX_CLOCK_BASE+0x0D8)
+
+#define PNX8XXX_CLK_USB_AHB_CTL_0  (PNX8XXX_CLOCK_BASE+0x0D4)
+#define PNX8XXX_CLK_USB_AHB_CTL_1  (PNX8XXX_CLOCK_BASE+0x0DC)
+
+#define SET_CLOCK(clockreg,state)	{		\
+	uint32_t i;					\
+	i = __raw_readl(clockreg) & ~1;			\
+	__raw_writel(i | state, clockreg);		\
+}
+
+#define SET_CLOCKSRC(clockreg,src)	{		\
+	uint32_t i;					\
+	i = __raw_readl(clockreg) & ~6;			\
+	__raw_writel(i | (src << 1), clockreg);		\
+}
+
+#define USB_AHB_SRC_XTAL	0x00
+#define USB_AHB_SRC_PLL		0x01
+
+#define ENABLE_CLOCK(clockreg)	SET_CLOCK(clockreg,1)
+#define DISABLE_CLOCK(clockreg)	SET_CLOCK(clockreg,0)
+
+#endif /* __PNX8XXX_CM_H */
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/core.h linux-2.6.34/arch/arm/mach-krome/include/mach/core.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/core.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/core.h	2011-10-10 11:29:18.977462000 +0530
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_CORE_H
+#define __ARCH_MACH_CORE_H
+
+#include <asm/system.h>
+
+struct machine_desc;
+struct tag;
+struct meminfo;
+
+extern void __init	apollo_map_io(void);
+extern void __init	apollo_init_irq(void);
+extern struct sys_timer	apollo_timer;
+#ifdef CONFIG_LOCAL_TIMERS
+extern void __iomem	*twd_base;
+#endif
+extern void __init	apollo_init(void);
+
+extern void __init      apollo_fixup(struct machine_desc *pmach,
+				struct tag *ptag,
+				char **pptr,
+				struct meminfo *pmem);
+
+extern void __iomem *gic_cpu_base_addr;
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/dma.h linux-2.6.34/arch/arm/mach-krome/include/mach/dma.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/dma.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/dma.h	2011-10-10 11:29:18.980459000 +0530
@@ -0,0 +1,31 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ARCH_MACH_DMA_H
+#define __ARCH_MACH_DMA_H
+
+#define MAX_DMA_ADDRESS		0Xffffffff
+#define MAX_DMA_CHANNELS	0
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/entry-macro.S linux-2.6.34/arch/arm/mach-krome/include/mach/entry-macro.S
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/entry-macro.S	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/entry-macro.S	2011-10-10 18:04:20.581964000 +0530
@@ -0,0 +1,102 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+
+#include <mach/hardware.h>
+#include <asm/hardware/gic.h>
+
+		.macro	disable_fiq
+		.endm
+
+		.macro  get_irqnr_preamble, base, tmp
+		ldr	\base, =gic_cpu_base_addr
+		ldr	\base, [\base]
+		.endm
+
+		.macro  arch_ret_to_user, tmp1, tmp2
+		.endm
+
+		/*
+		 * The interrupt numbering scheme is defined in the
+		 * interrupt controller spec.  To wit:
+		 *
+		 * Interrupts 0-15 are IPI
+		 * 16-26 are reserved
+		 * 27-31 are local.  We allow 30 to be used for the watchdog,
+		 * 27 to be used for System timer
+		 * 32-1020 are global
+		 * 1021-1022 are reserved
+		 * 1023 is "spurious" (no interrupt)
+		 *
+		 * For now, we ignore all IPI and Local Interrupts so only return an interrupt if its
+		 * 27,28 or between 30 and 1020.  The test_for_ipi routine below will pick up on IPIs.
+		 * The test_for_ltirq below will pick up the Local Timer interrupts.
+		 *
+		 * A simple read from the controller will tell us the number of the highest
+                 * priority enabled interrupt.  We then just need to check whether it is in the
+		 * valid range for an IRQ.
+		 */
+
+		.macro  get_irqnr_and_base, irqnr, irqstat, base, tmp
+
+		ldr     \irqstat, [\base, #GIC_CPU_INTACK] /* bits 12-10 = src CPU, 9-0 = int # */
+
+		ldr	\tmp, =1021
+
+		bic     \irqnr, \irqstat, #0x1c00
+		
+       	cmp     \irqnr, #29     /* Check for Local Timer Interrupt */
+       	cmpne   \irqnr, #16	/* Check for IPI Interrupts */
+		cmpcc	\irqnr, \irqnr
+		cmpne	\irqnr, \tmp
+		cmpcs	\irqnr, \irqnr
+
+		.endm
+
+		/* We assume that irqstat (the raw value of the IRQ acknowledge
+		 * register) is preserved from the macro above.
+		 * If there is an IPI, we immediately signal end of interrupt on the
+		 * controller, since this requires the original irqstat value which
+		 * we won't easily be able to recreate later.
+		 */
+
+		.macro test_for_ipi, irqnr, irqstat, base, tmp
+		bic	\irqnr, \irqstat, #0x1c00
+		cmp	\irqnr, #16
+		strcc	\irqstat, [\base, #GIC_CPU_EOI]
+		cmpcs	\irqnr, \irqnr
+		.endm
+
+		/* As above, this assumes that irqstat and base are preserved.. */
+
+		.macro test_for_ltirq, irqnr, irqstat, base, tmp
+		bic	\irqnr, \irqstat, #0x1c00
+		mov 	\tmp, #0
+		cmp	\irqnr, #29
+		moveq	\tmp, #1
+		streq	\irqstat, [\base, #GIC_CPU_EOI]
+		cmp	\tmp, #0
+		.endm
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/gcs_dmac.h linux-2.6.34/arch/arm/mach-krome/include/mach/gcs_dmac.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/gcs_dmac.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/gcs_dmac.h	2011-10-10 11:29:18.985460000 +0530
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for DMAC IP_1902.
+ *
+ * Copyright (C) 2009 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 0.0.1      Sundar A        09-09-2009   Created for APOLLO
+ */
+/** 
+ * FIXME: This must be removed soon after integrating with DMA_ENGINE
+ **/
+#ifndef __GCS_DMAC_H__
+#define __GCS_DMAC_H__
+
+#include <asm/sizes.h>
+#include <mach/pnx8492.h>
+
+#define   	APOLLO_GCS_DMAC_BASE	(ARM_A9_HOST_MMIO_BASE + 0x34000)
+#define		APOLLO_GCS_DMAC_LEN	SZ_4K
+
+#endif /* __MACH_DMAC_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/gcs.h linux-2.6.34/arch/arm/mach-krome/include/mach/gcs.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/gcs.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/gcs.h	2011-10-10 11:29:18.988459000 +0530
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for EFMC IP_2070.
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 1.0.0		Sundarapandian A		20090720		Updated for APOLLO
+ */
+#ifndef _GCS_H_
+#define _GCS_H_
+
+/* #include <mach/platform.h> */
+#include <mach/irqs.h>
+
+#define APOLLO_GCS_CFG_BASE_PHYS         (ARM_A9_HOST_MMIO_BASE + 0x36000)
+#define APOLLO_GCS_CFG_BASE              (APOLLO_GCS_CFG_BASE_PHYS)  
+#define APOLLO_GCS_CFG_LEN               (0x1000)
+
+/* GCS Mode Register */
+#define APOLLO_GCS_MODE_REG              (APOLLO_GCS_CFG_BASE + 0x0)
+#define APOLLO_GCS_MODE_PCI_ISA_MODE                        (1UL<<0)
+
+/* GCS Clock Mux Register */
+#define APOLLO_GCS_CLOCK_MUX            (APOLLO_GCS_CFG_BASE + 0x64)
+#define APOLLO_GCS_CLOCK_MUX_EN                             (1UL<<0)
+
+#endif /* _GCS_H_ */
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/globaltimer.h linux-2.6.34/arch/arm/mach-krome/include/mach/globaltimer.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/globaltimer.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/globaltimer.h	2011-10-10 11:29:18.991459000 +0530
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2009 (C) NXP BV, All Rights Reserved
+ * Author:	Frank Dols <frank.dols@nxp.com>
+ *		Mischa Jonker <mischa.jonker@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ASM_ARCH_GLOBALTIMER_H
+#define __ASM_ARCH_GLOBALTIMER_H
+
+#define GLOBAL_TIMER_COUNT_LOW		0x00
+#define GLOBAL_TIMER_COUNT_HIGH		0x04
+#define GLOBAL_TIMER_CONTROL		0x08
+#define GLOBAL_TIMER_STATUS		0x0C
+#define GLOBAL_TIMER_COMPARATOR_LOW	0x10
+#define GLOBAL_TIMER_COMPARATOR_HIGH	0x14
+#define GLOBAL_TIMER_AUTO_INCREMENT	0x18
+
+#define GLOBAL_TIMER_CTRL_AUTO_INC	0x08
+#define GLOBAL_TIMER_CTRL_IRQ_ENA	0x04
+#define GLOBAL_TIMER_CTRL_COMP_ENA	0x02
+#define GLOBAL_TIMER_CTRL_TIMER_ENA	0x01
+
+#define GLOBAL_TIMER_STAT_EVENT		0x01
+
+struct apollo_pm_timer_save {
+    u32     low;
+    u32     high;
+    u32     control;
+    u32     status; /*no need to restore....*/
+    u32     cmp_low;
+    u32     cmp_high;
+    u32     auto_inc;
+};
+extern void apollo_pm_timer_save(void);
+extern void apollo_pm_timer_restore(void);
+extern void apollo_core_intc_init(unsigned long vaddr);
+
+extern void apollo_global_timer_init(unsigned long vaddr,
+					unsigned long irq,
+					unsigned long freq);
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/gmac_eth_drv.h linux-2.6.34/arch/arm/mach-krome/include/mach/gmac_eth_drv.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/gmac_eth_drv.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/gmac_eth_drv.h	2011-10-10 11:29:18.994459000 +0530
@@ -0,0 +1,71 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: ??
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_GMAC_ETH_DRV_H__
+#define __ARCH_MACH_GMAC_ETH_DRV_H__
+
+
+#include <mach/pnx8492.h>
+#include <mach/irqs.h>
+
+/* Information, which can vary between two ethernet IPs */
+typedef struct gmac_platform_data
+{
+	__u32 isExternal;
+	__u32 clk_csr_val;
+	__u32 max_speed;
+	__u8 mac_addr[6];
+
+}gmac_platform_data_t,*pgmac_platform_data_t;
+
+/* Internal/External PHY */
+#define GMAC0_BASE	(ARM_A9_HOST_MMIO_BASE + 0x7C000U)
+#define IRQ_GMAC0		IRQ_ETHR_MAC_0
+#define IRQ_GMAC0_POWER		IRQ_ETHR_PWR_0
+#define GMAC0_CLK_CSR_VAL (0x1U)
+#define GMAC0_CTRL_GLOBAL_REG (ARM_A9_HOST_MMIO_BASE + 0xBB300U)
+
+#ifdef CONFIG_GMAC0_MODE_RGMII
+#define GMAC0_MAX_SPEED (1000U)
+#else
+#define GMAC0_MAX_SPEED (100U)
+#endif
+
+/* External PHY  */
+#define GMAC1_BASE	(ARM_A9_HOST_MMIO_BASE + 0xA4000U)
+#define IRQ_GMAC1		IRQ_ETHR_MAC_1
+#define IRQ_GMAC1_POWER		IRQ_ETHR_PWR_1
+#define GMAC1_CLK_CSR_VAL (0x1U)
+#define GMAC1_CTRL_GLOBAL_REG (ARM_A9_HOST_MMIO_BASE + 0xBB304U)
+
+#ifdef CONFIG_GMAC1_MODE_RGMII
+#define GMAC1_MAX_SPEED (1000U)
+#else
+#define GMAC1_MAX_SPEED (100U)
+#endif
+
+#endif /* __ARCH_MACH_GMAC_ETH_DRV_H__ */
+
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/gpio.h linux-2.6.34/arch/arm/mach-krome/include/mach/gpio.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/gpio.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/gpio.h	2011-10-10 11:29:18.997459000 +0530
@@ -0,0 +1,178 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: ??
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_APOLLO_GPIO_H
+#define __ARCH_MACH_APOLLO_GPIO_H
+
+
+#include <mach/pnx8492.h>
+/* #include <mach/irqs.h> TODO: irqs.h file includes gpio.h file */
+#include <asm-generic/gpio.h>
+
+#if 1
+/**
+ * FIXME: 
+ * Interrupt numbers in irqs.h is still invaild and
+ * so we go on with our own declaration.
+ **/
+#define IRQ_GPIO_L 32 /* Left GPIO */
+#define IRQ_GPIO_R 102 /* Right GPIO */
+#endif
+
+/**
+ * GPIO-0: Left GPIO configuration
+ **/
+#define GPIO0_IRQ       IRQ_GPIO_L
+#define GPIO0_MAX_NR    74
+#define GPIO0_BASE      (ARM_A9_HOST_MMIO_BASE + 0x0AB000)
+#define GPIO0_IRQ_BASE  IRQ_MAX_NBR
+#define GPIO0_START_PIN 0
+
+/**
+ * GPIO-1: Right GPIO configuration
+ **/
+#define GPIO1_IRQ IRQ_GPIO_R
+#define GPIO1_MAX_NR    20 
+#define GPIO1_BASE      (ARM_A9_HOST_MMIO_BASE + 0x069000)
+#define GPIO1_IRQ_BASE  (GPIO0_IRQ_BASE + GPIO0_MAX_NR)
+#define GPIO1_START_PIN GPIO0_MAX_NR
+
+/**
+ * Platform data structure
+ **/
+struct apollo_gpio_platform_data {
+	int first_pin;
+	int nr_gpio;
+	int irq_base;
+};
+
+#define gpio_get_value	__gpio_get_value
+#define gpio_set_value	__gpio_set_value
+#define gpio_cansleep	__gpio_cansleep
+#define gpio_to_irq 	__gpio_to_irq
+
+/**
+ * GPIO <--> PIO mapping in Kronos SoC
+ **/
+#define PIO003      (GPIO0_START_PIN + 0)
+#define PIO004      (GPIO0_START_PIN + 1)
+#define PIO008      (GPIO0_START_PIN + 2)
+#define PIO009      (GPIO0_START_PIN + 3)
+#define PIO010      (GPIO0_START_PIN + 4)
+#define PIO011      (GPIO0_START_PIN + 5)
+#define PIO012      (GPIO0_START_PIN + 6)
+#define PIO013      (GPIO0_START_PIN + 7)
+#define PIO014      (GPIO0_START_PIN + 8)
+#define PIO015      (GPIO0_START_PIN + 9)
+#define PIO016      (GPIO0_START_PIN + 10)
+#define PIO017      (GPIO0_START_PIN + 11)
+#define PIO018      (GPIO0_START_PIN + 12)
+#define PIO024      (GPIO0_START_PIN + 13)
+#define PIO027      (GPIO0_START_PIN + 14)
+#define PIO040      (GPIO0_START_PIN + 15)
+#define PIO041      (GPIO0_START_PIN + 16)
+#define PIO042      (GPIO0_START_PIN + 17)
+#define PIO043      (GPIO0_START_PIN + 18)
+#define PIO053      (GPIO0_START_PIN + 19)
+#define PIO054      (GPIO0_START_PIN + 20)
+#define PIO055      (GPIO0_START_PIN + 21)
+#define PIO056      (GPIO0_START_PIN + 22)
+#define PIO057      (GPIO0_START_PIN + 23)
+#define PIO068      (GPIO0_START_PIN + 24)
+#define PIO069      (GPIO0_START_PIN + 25)
+#define PIO071      (GPIO0_START_PIN + 26)
+#define PIO072      (GPIO0_START_PIN + 27)
+#define PIO073      (GPIO0_START_PIN + 28)
+#define PIO074      (GPIO0_START_PIN + 29)
+#define PIO075      (GPIO0_START_PIN + 30)
+#define PIO082      (GPIO0_START_PIN + 31)
+#define PIO083      (GPIO0_START_PIN + 32)
+#define PIO084      (GPIO0_START_PIN + 33)
+#define PIO085      (GPIO0_START_PIN + 34)
+#define PIO086      (GPIO0_START_PIN + 35)
+#define PIO087      (GPIO0_START_PIN + 36)
+#define PIO088      (GPIO0_START_PIN + 37)
+#define PIO089      (GPIO0_START_PIN + 38)
+#define PIO090      (GPIO0_START_PIN + 39)
+#define PIO091      (GPIO0_START_PIN + 40)
+#define PIO092      (GPIO0_START_PIN + 41)
+#define PIO093      (GPIO0_START_PIN + 42)
+#define PIO103      (GPIO0_START_PIN + 43)
+#define PIO118      (GPIO0_START_PIN + 44)
+#define PIO119      (GPIO0_START_PIN + 45)
+#define PIO120      (GPIO0_START_PIN + 46)
+#define PIO121      (GPIO0_START_PIN + 47)
+#define PIO122      (GPIO0_START_PIN + 48)
+#define PIO128      (GPIO0_START_PIN + 49)
+#define PIO129      (GPIO0_START_PIN + 50)
+#define PIO130      (GPIO0_START_PIN + 51)
+#define PIO146      (GPIO0_START_PIN + 52)
+#define PIO162      (GPIO0_START_PIN + 53)
+#define PIO164      (GPIO0_START_PIN + 54)
+#define PIO165      (GPIO0_START_PIN + 55)
+#define PIO169      (GPIO0_START_PIN + 56)
+#define PIO172      (GPIO0_START_PIN + 57)
+#define PIO173      (GPIO0_START_PIN + 58)
+#define PIO174      (GPIO0_START_PIN + 59)
+#define PIO175      (GPIO0_START_PIN + 60)
+#define PIO176      (GPIO0_START_PIN + 61)
+#define PIO177      (GPIO0_START_PIN + 62)
+#define PIO178      (GPIO0_START_PIN + 63)
+#define PIO179      (GPIO0_START_PIN + 64)
+#define PIO180      (GPIO0_START_PIN + 65)
+#define PIO182      (GPIO0_START_PIN + 66)
+#define PIO183      (GPIO0_START_PIN + 67)
+#define PIO184      (GPIO0_START_PIN + 68)
+#define PIO185      (GPIO0_START_PIN + 69)
+#define PIO186      (GPIO0_START_PIN + 70)
+#define PIO187      (GPIO0_START_PIN + 71)
+#define PIO188      (GPIO0_START_PIN + 72)
+#define PIO189      (GPIO0_START_PIN + 73)
+
+/**
+ * PIOs in GPIO right
+ **/
+#define PIO005      (GPIO1_START_PIN + 0)
+#define PIO006      (GPIO1_START_PIN + 1)
+#define PIO007      (GPIO1_START_PIN + 2)
+#define PIO039      (GPIO1_START_PIN + 3)
+#define PIO044      (GPIO1_START_PIN + 4)
+#define PIO045      (GPIO1_START_PIN + 5)
+#define PIO062      (GPIO1_START_PIN + 6)
+#define PIO063      (GPIO1_START_PIN + 7)
+#define PIO064      (GPIO1_START_PIN + 8)
+#define PIO065      (GPIO1_START_PIN + 9)
+#define PIO070      (GPIO1_START_PIN + 10)
+#define PIO077      (GPIO1_START_PIN + 11)
+#define PIO170      (GPIO1_START_PIN + 12)
+#define PIO171      (GPIO1_START_PIN + 13)
+#define PIO193      (GPIO1_START_PIN + 14)
+#define PIO194      (GPIO1_START_PIN + 15)
+#define PIO195      (GPIO1_START_PIN + 16)
+#define PIO196      (GPIO1_START_PIN + 17)
+#define PIO197      (GPIO1_START_PIN + 18)
+#define PIO198      (GPIO1_START_PIN + 19)
+
+#endif /* __ARCH_MACH_APOLLO_GPIO_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/hardware.h linux-2.6.34/arch/arm/mach-krome/include/mach/hardware.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/hardware.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/hardware.h	2011-10-10 11:29:18.999464000 +0530
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ASM_ARCH_HARDWARE_H
+#define __ASM_ARCH_HARDWARE_H
+
+#include <asm/sizes.h>
+#include <mach/pnx8492.h>
+
+/*
+ * PCI space virtual addresses
+ */
+#define APOLLO_PCI_VIRT_BASE		(void __iomem *)APOLLO_PCI_CORE_BASE
+#define APOLLO_PCI_CFG_VIRT_BASE	(void __iomem *)APOLLO_PCI_CORE_BASE
+
+/* guesswork !! required for: drivers/pci/setup-res.c */
+#define PCIBIOS_MIN_IO			0x44000000
+#define PCIBIOS_MIN_MEM			0x50000000
+
+#define pcibios_assign_all_busses()	1
+
+/* macro to get at IO space when running virtually */
+
+#define IO_OFFSET	0xE0100000
+#define IO_BASE		0xE0100000	/* VA of Peripheral space */
+#define IO_SIZE		0x0B000000	/* More than Enough */
+#define IO_START	0xE0100000	/* Base address Peripheral space */
+
+#ifdef CONFIG_MMU
+#define IO_ADDRESS(x)	(((x) - IO_OFFSET) + IO_BASE)
+#define __IOMEM(x)	((void __iomem*)(((x) - IO_OFFSET) + IO_BASE))
+#else
+#define IO_ADDRESS(x)	(x)
+#define __IOMEM(x)	(x)
+#endif
+#define __io_address(n)	__io(IO_ADDRESS(n))
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/io.h linux-2.6.34/arch/arm/mach-krome/include/mach/io.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/io.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/io.h	2011-10-10 11:29:19.002464000 +0530
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ASM_ARM_ARCH_IO_H
+#define __ASM_ARM_ARCH_IO_H
+
+#include <asm/cacheflush.h>
+
+#define IO_SPACE_LIMIT 0xffffffff
+
+#define __io(a)		__typesafe_io(a)
+#define __mem_pci(a)	(a)
+
+/* DMA operations */
+inline static void dma_cache_inv(unsigned long start, unsigned long size)
+{
+        void *_start = (void*) start;
+	dmac_map_area(_start,size,2); //DMA_FROM_DEVICE); Due to recursive includes, linux/dma-mapping.h is not visible
+}
+
+inline static void dma_cache_wback(unsigned long start, unsigned long size)
+{
+        void *_start = (void*) start;
+	dmac_unmap_area(_start,size,1); //DMA_TO_DEVICE);
+}
+
+inline static void dma_cache_wback_inv(unsigned long start, unsigned long size)
+{
+        void *_start = (void*) start;
+        void *_end = (void*) (start + size);
+	dmac_flush_range(_start,_end);
+}
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/irqs.h linux-2.6.34/arch/arm/mach-krome/include/mach/irqs.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/irqs.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/irqs.h	2011-10-10 11:29:19.006461000 +0530
@@ -0,0 +1,347 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ASM_ARCH_IRQS_H
+#define __ASM_ARCH_IRQS_H
+
+//#include <mach/pnx8492.h>
+#include <mach/gpio.h> /* TODO: Added to get the proper GPIO related defines */
+
+/* ------------------------------------------------------------------------
+ *  Interrupts - bit assignment (primary)
+ *	Cortex A9 interrupt distributor can handle 224 interrupts.
+ *	permitted values are 0, 32, 64, 96, 128, 160, 192, 224.
+ *
+ *  REMARK: for the real assignment, see bottom of file -> IRQ_...
+ *
+ * ------------------------------------------------------------------------
+ */
+
+/* ------------------------------------------------------------------------
+ * Cortex A9 internal interrupts are not going via the Distributor
+ * ------------------------------------------------------------------------
+ */
+#define INT_SGI_ID00		0   /* Cortex A9 SW generated IRQ id-0 */
+#define INT_SGI_ID01		1   /* Cortex A9 SW generated IRQ id-1 */
+#define INT_SGI_ID02		2   /* Cortex A9 SW generated IRQ id-2 */
+#define INT_SGI_ID03		3   /* Cortex A9 SW generated IRQ id-3 */
+#define INT_SGI_ID04		4   /* Cortex A9 SW generated IRQ id-4 */
+#define INT_SGI_ID05		5   /* Cortex A9 SW generated IRQ id-5 */
+#define INT_SGI_ID06		6   /* Cortex A9 SW generated IRQ id-6 */
+#define INT_SGI_ID07		7   /* Cortex A9 SW generated IRQ id-7 */
+#define INT_SGI_ID08		8   /* Cortex A9 SW generated IRQ id-8 */
+#define INT_SGI_ID09		9   /* Cortex A9 SW generated IRQ id-9 */
+#define INT_SGI_ID10		10  /* Cortex A9 SW generated IRQ id-10 */
+#define INT_SGI_ID11		11  /* Cortex A9 SW generated IRQ id-11 */
+#define INT_SGI_ID12		12  /* Cortex A9 SW generated IRQ id-12 */
+#define INT_SGI_ID13		13  /* Cortex A9 SW generated IRQ id-13 */
+#define INT_SGI_ID14		14  /* Cortex A9 SW generated IRQ id-14 */
+#define INT_SGI_ID15		15  /* Cortex A9 SW generated IRQ id-15 */
+#define INT_SOURCE16		16  /* reserved by by ARM */
+#define INT_SOURCE17		17  /* reserved by by ARM */
+#define INT_SOURCE18		18  /* reserved by by ARM */
+#define INT_SOURCE19		19  /* reserved by by ARM */
+#define INT_SOURCE20		20  /* reserved by by ARM */
+#define INT_SOURCE21		21  /* reserved by by ARM */
+#define INT_SOURCE22		22  /* reserved by by ARM */
+#define INT_SOURCE23		23  /* reserved by by ARM */
+#define INT_SOURCE24		24  /* reserved by by ARM */
+#define INT_SOURCE25		25  /* reserved by by ARM */
+#define INT_SOURCE26		26  /* reserved by by ARM */
+#define INT_A9_GLOB_TIMER	27  /* Cortex A9 global timer        */
+#define INT_A9_LEGACY_FIQ	28  /* Cortex A9 nFIQ in legacy mode */
+#define INT_A9_PRIV_TIMER	29  /* Cortex A9 privat timer        */
+#define INT_A9_WDG_TIMER	30  /* Cortex A9 watchdog timer      */
+#define INT_A9_LEGACY_IRQ	31  /* Cortex A9 nIRQ in legacy mode */
+/*
+ * Interrupt  0 - 31 is internal Cortex A9 (local per core),
+ *           32 - 223 are external interrupts (via Distributor).
+ */
+#define IRQ_DISTR_OFFSET	32  /* IRQ offset to non internal irq's */
+
+#define P_IN_BEGIN_OF_LIST	0   /* GIC IRQ-PIN starts from here */
+#define P_IN_GPIO_LEFT		0   /* gpio_out_gic_l */
+#define P_IN_IPC_CORTEXM3	1   /* intrpt_ipc0 = intrpt_cortexm3 */
+#define P_IN_IPC_CORTEXA9	2   /* intrpt_ipc1 = intrpt_cortexa9 */
+#define P_IN_IPC_ARM926		3   /* intrpt_ipc2 = intrpt_arm926 */
+#define P_IN_IPC_TM_VDSP	4   /* intrpt_ipc3 = intrpt_tm_vdsp */
+#define P_IN_IPC_TM_ADSP	5   /* intrpt_ipc4 = intrpt_tm_adsp */
+#define P_IN_CGU_CLOCK		6   /* intrpt_clock (CGU) */
+#define P_IN_SATA		7   /* intrpt_sata */
+#define P_IN_ETHR_MAC0		8   /* intrpt_ethernet_mac_0 */
+#define P_IN_ETHR_PWR0		9   /* intrpt_ethernet_pwr_0 */
+#define P_IN_NS			10  /* intrpt_ns */
+#define P_IN_PT0		11  /* pt0_irq (Pulse Timer) */
+#define P_IN_PT1		12  /* pt1_irq */
+#define P_IN_CEC		13  /* cec_int_n */
+#define P_IN_UART_A0            14  /* uart_intreq_a0 */
+#define P_IN_UART_A1            15  /* uart_intreq_a2 */
+#define P_IN_UART_A2            16  /* uart intreq_a1 */
+#define P_IN_UART_A3            17  /* uart intreq_a3 */
+#define P_IN_SPI_COMB		18  /* intrpt_spi_combined */
+#define P_IN_SPI_DMAC		19  /* intrpt_spi_dmacintr */
+#define P_IN_SM0		20  /* sm0_irq (SMartcard) */
+#define P_IN_SM1		21  /* sm1_irq */
+#define P_IN_IR_IO		22  /* ir_req (Irin/out) */
+#define P_IN_I2C2		23  /* intrpt_iic2 */
+#define P_IN_I2C3		24  /* intrpt_iic3 */
+#define P_IN_I2C4		25  /* intrpt_iic4 */
+#define P_IN_RTC0		26  /* timer_irq[23:0]->[49:26] (timers/RTC) */
+/* ... gap in list ... */
+#define P_IN_SDCN		50  /* intrpt_sdcn */
+#define P_IN_TSA		51  /* tsa_irq */
+#define P_IN_MCX		52  /* mcx_irq */
+#define P_IN_TSP		53  /* tsp_irq */
+#define P_IN_TSR		54  /* tsr_irq */
+#define P_IN_TSX		55  /* tsx_irq */
+#define P_IN_VD0		56  /* vd0_irq */
+#define P_IN_VD1		57  /* vd1_irq */
+#define P_IN_VD2		58  /* vd2_irq */
+#define P_IN_VD3		59  /* vd3_irq */
+#define P_IN_CAM		60  /* cam_irq */
+#define P_IN_USB0		61  /* intrpt_usb0 */
+#define P_IN_USB1		62  /* intrpt_usb1 */
+#define P_IN_USB2		63  /* intrpt_usb2 */
+#define P_IN_DMA_MON0		64  /* intrpt_mtlmon0 (DMA monitor) */
+#define P_IN_DMA_MON1		65  /* intrpt_mtlmon1 */
+#define P_IN_DMA_MON2		66  /* intrpt_mtlmon2 */
+#define P_IN_DMA_MON3		67  /* intrpt_mtlmon3 */
+#define P_IN_DMA_NETW		68  /* intreq_h0 (DMA netw hub) */
+#define P_IN_DMA_HUB		69  /* intreq_h1 (DMA arb, con) */
+#define P_IN_GPIO_RIGHT		70  /* gpio_out_gic_r */
+#define P_IN_DRAW2D		71  /* intrpt_draw2d */
+#define P_IN_GPPM		72  /* intrpt_gppm (PCI + IO/Flash Cntl+SDIO)(GCS) */
+#define P_IN_PCI_DMA		73  /* intrpt_pci_dma */
+#define P_IN_PCI		74  /* intrpt_pci */
+#define P_IN_PCI_IN		75  /* pci_inta_in */
+#define P_IN_GCS_DMA		76  /* dmacintr */
+#define P_IN_TURING_CLK		77  /* ckl_irq	TURING + FUSE_CTRL */
+#define P_IN_CRYPTO		78  /* crypto_irq */
+#define P_IN_NEWT		79  /* newt_intreq */
+#define P_IN_SSP_HOST0		80  /* ssp_host_int[1:0] */
+#define P_IN_SSP_HOST1		81  /* */
+#define P_IN_M_CARD		82  /* o_cc_irq	(M-Card CCIF) */
+#define P_IN_ACP_DMA_1902	83  /* dmacintr	(DMAC_1902) */
+#define P_IN_THALIA		84  /* thalia_irq (IMG SGX531) */
+#define P_IN_APB0		85  /* vdec_apb_intr[2:0] = FMVD (malone, arm926 , Video Dsp , Video dsp gic) */
+#define P_IN_APB1		86  /* */
+#define P_IN_APB2		87  /* */
+#define P_IN_VPIPE0		88  /* irq_vpipe[6:0] vsd_vpipe (mbvp_s2k9+cpipe_s2k9 + CPIPE_S2V0 ) */
+#define P_IN_VPIPE1		89  /* */
+#define P_IN_VPIPE2		90  /* */
+#define P_IN_VPIPE3		91  /* */
+#define P_IN_VPIPE4		92  /* */
+#define P_IN_VPIPE5		93  /* */
+#define P_IN_VPIPE6		94  /* */
+#define P_IN_SPDO		95  /* intrpt_spdo */
+#define P_IN_IPC5		96  /* intrpt_ipc5 */
+#define P_IN_IPC6		97  /* intrpt_ipc6 */
+#define P_IN_IPC7		98  /* intrpt_ipc7 */
+#define P_IN_AO_HDMI		99  /* intrpt_ao_hdmi (AO to HDMI) */
+#define P_IN_AO_BTSC		100 /* intrpt_ao_btsc (AO to BTSC) */
+#define P_IN_AO			101 /* intrpt_ao (AO NS ADAC) */
+#define P_IN_DENC		102 /* denc_dcs_cp_irq */
+#define P_IN_ADCN		103 /* intrpt_adcn (Host ARM MMIO) */
+#define P_IN_AVDSN		104 /* intrpt_avdsn (A/V Control MMIO BUS) */
+#define P_IN_HDMITX		105 /* intrpt_hdmitx */
+#define P_IN_ETHR_MAC1		106 /* intrpt_ethernet_mac_1 (GMAC) */
+#define P_IN_ETHR_PWR1		107 /* intrpt_ethernet_pwr_1 */
+#define P_IN_VIP		108 /* intrpt_vip*/
+#define P_IN_IP_2017		109 /* intrpt_ip_2017_intr */
+#define P_IN_SFC		110 /* intrpt_sfc */
+#define P_IN_DMA_MON4		111 /* intrpt_mtlmon4 */
+#define P_IN_DMA_MON5		112 /* intrpt_mtlmon5 */
+#define P_IN_DMA_MON6		113 /* intrpt_mtlmon6 */
+#define P_IN_DMA_MON7		114 /* intrpt_mtlmon7 */
+#define P_IN_TYPHOON		115 /* typhoon_interrupt */
+#define P_IN_AI			116 /* intrpt_ai */
+#define P_IN_I2C5		117 /* intrpt_iic5 */
+#define P_IN_AUX_CTI_TRIG7	118 /* aux_ctitrigout2[7] (CS-GDS) */
+#define P_IN_AUX_CTI_TRIG6	119 /* aux_ctitrigout2[6] */
+#define P_IN_PWM1		120 /* PWM1 */
+#define P_IN_PWM2		121 /* PWM2 */
+#define P_IN_PWM3		122 /* PWM3 */
+#define P_IN_GMAC_PHY		123 /* intrpt_gmac_phy */
+#define P_IN_SD_CARD		124 /* intrpt_sdcard */
+#define P_IN_PMU		125 /* intrpt_pmuirq */
+#define P_IN_A3CRC		126 /* intrpt_a3crc_done */
+#define P_IN_127RESERVED	127 /* Reserved */
+#define P_IN_L2_CCR		128 /* l2ccintr (L2 cache only on the A9 IRQ(128)) */
+#define P_IN_COMM_RX		129 /* COMMRX */
+#define P_IN_COMM_TX		130 /* COMMTX */
+#define P_IN_A9_CTI		131 /* a9_ctiirq */
+#define P_IN_132RESERVED	132 /* Reserved [255:164]->[223-132] */
+/* ... gap in list ... */
+#define P_IN_223RESERVED	223 /* */
+#define P_IN_END_OF_LIST	224 /* END OF LIST (NOT USABLE IRQ-PIN)*/
+/* End of supported interrupts in Apollo */
+
+/* ------------------------------------------------------------------------
+ *
+ * DO THE REAL IRQ ASSIGNMENTS...
+ *
+ * ------------------------------------------------------------------------
+ */
+#define IRQ_LOWEST_NBR		INT_SGI_ID00
+/* Cortex A9 core internal interrupts */
+#define IRQ_A9_GLOB_TIMER	INT_A9_GLOB_TIMER
+#define IRQ_A9_PRIV_TIMER	INT_A9_PRIV_TIMER
+#define IRQ_A9WDTIM		INT_A9_WDG_TIMER
+/* Cortex A9 external core provided interrupts */
+#define IRQ_GPIO_LEFT		(P_IN_GPIO_LEFT		+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_CORTEXM3	(P_IN_IPC_CORTEXM3	+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_CORTEXA9	(P_IN_IPC_CORTEXA9	+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_ARM926		(P_IN_IPC_ARM926	+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_TM_VDSP		(P_IN_IPC_TM_VDSP	+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_TM_ADSP		(P_IN_IPC_TM_ADSP	+ IRQ_DISTR_OFFSET)
+#define IRQ_CGU_CLOCK		(P_IN_CGU_CLOCK		+ IRQ_DISTR_OFFSET)
+#define IRQ_SATA		(P_IN_SATA		+ IRQ_DISTR_OFFSET)
+#define IRQ_ETHR_MAC_0		(P_IN_ETHR_MAC0		+ IRQ_DISTR_OFFSET)
+#define IRQ_ETHR_PWR_0		(P_IN_ETHR_PWR0		+ IRQ_DISTR_OFFSET)
+#define IRQ_NS			(P_IN_NS		+ IRQ_DISTR_OFFSET)
+#define IRQ_PT_0		(P_IN_PT0		+ IRQ_DISTR_OFFSET)
+#define IRQ_PT_1		(P_IN_PT1		+ IRQ_DISTR_OFFSET)
+#define IRQ_CEC			(P_IN_CEC		+ IRQ_DISTR_OFFSET)
+#define IRQ_UART_0		(P_IN_UART_A0		+ IRQ_DISTR_OFFSET)
+#define IRQ_UART_1		(P_IN_UART_A1		+ IRQ_DISTR_OFFSET)
+#define IRQ_UART_2		(P_IN_UART_A2		+ IRQ_DISTR_OFFSET)
+#define IRQ_UART_3		(P_IN_UART_A3		+ IRQ_DISTR_OFFSET)
+#define IRQ_SPI_COMB		(P_IN_SPI_COMB		+ IRQ_DISTR_OFFSET)
+#define IRQ_SPI_DMAC		(P_IN_SPI_DMAC		+ IRQ_DISTR_OFFSET)
+#define IRQ_SM0			(P_IN_SM0		+ IRQ_DISTR_OFFSET)
+#define IRQ_SM1			(P_IN_SM1		+ IRQ_DISTR_OFFSET)
+#define IRQ_IR_IO		(P_IN_IR_IO		+ IRQ_DISTR_OFFSET)
+#define IRQ_I2C_2		(P_IN_I2C2		+ IRQ_DISTR_OFFSET)
+#define IRQ_I2C_3		(P_IN_I2C3		+ IRQ_DISTR_OFFSET)
+#define IRQ_I2C_4		(P_IN_I2C4		+ IRQ_DISTR_OFFSET)
+#define IRQ_RTC0		(P_IN_RTC0		+ IRQ_DISTR_OFFSET)
+/* ... gap in list ... [23:0]->[49:26] (timers/RTC) ... */
+#define IRQ_SDCN		(P_IN_SDCN		+ IRQ_DISTR_OFFSET)
+#define IRQ_TSA			(P_IN_TSA		+ IRQ_DISTR_OFFSET)
+#define IRQ_MCX			(P_IN_MCX		+ IRQ_DISTR_OFFSET)
+#define IRQ_TSP			(P_IN_TSP		+ IRQ_DISTR_OFFSET)
+#define IRQ_TSR			(P_IN_TSR		+ IRQ_DISTR_OFFSET)
+#define IRQ_TSX			(P_IN_TSX		+ IRQ_DISTR_OFFSET)
+#define IRQ_VD_0		(P_IN_VD0		+ IRQ_DISTR_OFFSET)
+#define IRQ_VD_1		(P_IN_VD1		+ IRQ_DISTR_OFFSET)
+#define IRQ_VD_2		(P_IN_VD2		+ IRQ_DISTR_OFFSET)
+#define IRQ_VD_3		(P_IN_VD3		+ IRQ_DISTR_OFFSET)
+#define IRQ_CAM			(P_IN_CAM		+ IRQ_DISTR_OFFSET)
+#define IRQ_USB_0		(P_IN_USB0		+ IRQ_DISTR_OFFSET)
+#define IRQ_USB_1		(P_IN_USB1		+ IRQ_DISTR_OFFSET)
+#define IRQ_USB_2		(P_IN_USB2		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_0		(P_IN_DMA_MON0		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_1		(P_IN_DMA_MON1		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_2		(P_IN_DMA_MON2		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_3		(P_IN_DMA_MON3		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_NETW		(P_IN_DMA_NETW		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_HUB		(P_IN_DMA_HUB		+ IRQ_DISTR_OFFSET)
+#define IRQ_GPIO_RIGHT		(P_IN_GPIO_RIGHT	+ IRQ_DISTR_OFFSET)
+#define IRQ_DRAW2D		(P_IN_DRAW2D		+ IRQ_DISTR_OFFSET)
+#define IRQ_GPPM		(P_IN_GPPM		+ IRQ_DISTR_OFFSET)
+#define IRQ_PCI_DMA		(P_IN_PCI_DMA		+ IRQ_DISTR_OFFSET)
+#define IRQ_PCI			(P_IN_PCI		+ IRQ_DISTR_OFFSET)
+#define IRQ_PCI_IN		(P_IN_PCI_IN		+ IRQ_DISTR_OFFSET)
+#define IRQ_GCS_DMA		(P_IN_GCS_DMA		+ IRQ_DISTR_OFFSET)
+#define IRQ_TURING_CLK		(P_IN_TURING_CLK	+ IRQ_DISTR_OFFSET)
+#define IRQ_CRYPTO		(P_IN_CRYPTO		+ IRQ_DISTR_OFFSET)
+#define IRQ_NEWT		(P_IN_NEWT		+ IRQ_DISTR_OFFSET)
+#define IRQ_SSP_HOST_0		(P_IN_SSP_HOST0		+ IRQ_DISTR_OFFSET)
+#define IRQ_SSP_HOST_1		(P_IN_SSP_HOST1		+ IRQ_DISTR_OFFSET)
+#define IRQ_M_CARD		(P_IN_M_CARD		+ IRQ_DISTR_OFFSET)
+#define IRQ_ACP_DMA_1902	(P_IN_ACP_DMA_1902	+ IRQ_DISTR_OFFSET)
+#define IRQ_THALIA		(P_IN_THALIA		+ IRQ_DISTR_OFFSET)
+#define IRQ_APB_0		(P_IN_APB0		+ IRQ_DISTR_OFFSET)
+#define IRQ_APB_1		(P_IN_APB1		+ IRQ_DISTR_OFFSET)
+#define IRQ_APB_2		(P_IN_APB2		+ IRQ_DISTR_OFFSET)
+#define IRQ_VPIPE_0		(P_IN_VPIPE0		+ IRQ_DISTR_OFFSET)
+#define IRQ_VPIPE_1		(P_IN_VPIPE1		+ IRQ_DISTR_OFFSET)
+#define IRQ_VPIPE_2		(P_IN_VPIPE2		+ IRQ_DISTR_OFFSET)
+#define IRQ_VPIPE_3		(P_IN_VPIPE3		+ IRQ_DISTR_OFFSET)
+#define IRQ_VPIPE_4		(P_IN_VPIPE4		+ IRQ_DISTR_OFFSET)
+#define IRQ_SPDO		(P_IN_SPDO		+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_5		(P_IN_IPC5		+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_6		(P_IN_IPC6		+ IRQ_DISTR_OFFSET)
+#define IRQ_IPC_7		(P_IN_IPC7		+ IRQ_DISTR_OFFSET)
+#define IRQ_AO_HDMI		(P_IN_AO_HDMI		+ IRQ_DISTR_OFFSET)
+#define IRQ_AO_BTSC		(P_IN_AO_BTSC		+ IRQ_DISTR_OFFSET)
+#define IRQ_AO			(P_IN_AO		+ IRQ_DISTR_OFFSET)
+#define IRQ_DENC		(P_IN_DENC		+ IRQ_DISTR_OFFSET)
+#define IRQ_ADCN		(P_IN_ADCN		+ IRQ_DISTR_OFFSET)
+#define IRQ_AVDSN		(P_IN_AVDSN		+ IRQ_DISTR_OFFSET)
+#define IRQ_HDMITX		(P_IN_HDMITX		+ IRQ_DISTR_OFFSET)
+#define IRQ_ETHR_MAC_1		(P_IN_ETHR_MAC1		+ IRQ_DISTR_OFFSET)
+#define IRQ_ETHR_PWR_1		(P_IN_ETHR_PWR1		+ IRQ_DISTR_OFFSET)
+#define IRQ_VIP			(P_IN_VIP		+ IRQ_DISTR_OFFSET)
+#define IRQ_IP_2017		(P_IN_IP_2017		+ IRQ_DISTR_OFFSET)
+#define IRQ_SFC			(P_IN_SFC		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_4		(P_IN_DMA_MON4		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_5		(P_IN_DMA_MON5		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_6		(P_IN_DMA_MON6		+ IRQ_DISTR_OFFSET)
+#define IRQ_DMA_MON_7		(P_IN_DMA_MON7		+ IRQ_DISTR_OFFSET)
+#define IRQ_TYPHOON		(P_IN_TYPHOON		+ IRQ_DISTR_OFFSET)
+#define IRQ_AI			(P_IN_AI		+ IRQ_DISTR_OFFSET)
+#define IRQ_I2C_5		(P_IN_I2C5		+ IRQ_DISTR_OFFSET)
+#define IRQ_AUX_CTI_TRIG_7	(P_IN_AUX_CTI_TRIG7	+ IRQ_DISTR_OFFSET)
+#define IRQ_AUX_CTI_TRIG_6	(P_IN_AUX_CTI_TRIG6	+ IRQ_DISTR_OFFSET)
+#define IRQ_PWM_1		(P_IN_PWM1		+ IRQ_DISTR_OFFSET)
+#define IRQ_PWM_2		(P_IN_PWM2		+ IRQ_DISTR_OFFSET)
+#define IRQ_PWM_3		(P_IN_PWM3		+ IRQ_DISTR_OFFSET)
+#define IRQ_GMAC_PHY		(P_IN_GMAC_PHY		+ IRQ_DISTR_OFFSET)
+#define IRQ_SD_CARD		(P_IN_SD_CARD		+ IRQ_DISTR_OFFSET)
+#define IRQ_PMU			(P_IN_PMU		+ IRQ_DISTR_OFFSET)
+#define IRQ_A3CRC		(P_IN_A3CRC		+ IRQ_DISTR_OFFSET)
+#define IRQ_127_RESERVED	(P_IN_127RESERVED	+ IRQ_DISTR_OFFSET)
+#define IRQ_L2_CCR		(P_IN_L2_CCR		+ IRQ_DISTR_OFFSET)
+#define IRQ_COMM_RX		(P_IN_COMM_RX		+ IRQ_DISTR_OFFSET)
+#define IRQ_COMM_TX		(P_IN_COMM_TX		+ IRQ_DISTR_OFFSET)
+#define IRQ_A9_CTI		(P_IN_A9_CTI		+ IRQ_DISTR_OFFSET)
+#define IRQ_132_RESERVED	(P_IN_132RESERVED	+ IRQ_DISTR_OFFSET)
+/* ... gap in list ... [255:164]->[223-132] ... */
+#define IRQ_223_RESERVED	(P_IN_223RESERVED	+ IRQ_DISTR_OFFSET)
+#define IRQ_MAX_NBR		(P_IN_END_OF_LIST	+ IRQ_DISTR_OFFSET)
+
+/* ------------------------------------------------------------------------
+ *   Additional IRQ assignment i.f.o. generic kernel parts
+ * ------------------------------------------------------------------------
+ */
+#define IRQ_GLOBALTIMER		IRQ_A9_GLOB_TIMER
+#define IRQ_LOCALTIMER		IRQ_A9_PRIV_TIMER
+
+#define IRQ_LOCALWDOG		IRQ_A9WDTIM
+#define IRQ_GIC_START		(P_IN_BEGIN_OF_LIST + IRQ_DISTR_OFFSET)
+
+#ifdef  CONFIG_GPIO_APOLLO  /*TODO: Commented the wrong define use #ifdef CONFIG_APOLLO_GPIO*/
+#define NR_IRQS			(GPIO1_IRQ_BASE + GPIO1_MAX_NR)
+#else
+#define NR_IRQS			IRQ_MAX_NBR
+#endif
+#define DISTR_MAX_IRQS		NR_IRQS
+
+#ifndef NR_IRQS
+#error "NR_IRQS not defined by the board-specific files"
+#endif
+
+#endif /* __ASM_ARCH_IRQS_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/localtimers.h linux-2.6.34/arch/arm/mach-krome/include/mach/localtimers.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/localtimers.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/localtimers.h	2011-10-10 11:29:19.009459000 +0530
@@ -0,0 +1,42 @@
+
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2009 (C) NXP BV, All Rights Reserved
+ * Author:	Frank Dols <frank.dols@nxp.com>
+ *		Mischa Jonker <mischa.jonker@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ASM_ARCH_LOCALTIMER_H
+#define __ASM_ARCH_LOCALTIMER_H
+
+#define LOCAL_TIMER_RELOAD		0x00
+#define LOCAL_TIMER_COUNTER		0x04
+#define LOCAL_TIMER_CONTROL		0x08
+#define LOCAL_TIMER_STATUS		0x0C
+
+#define LOCAL_TIMER_CTRL_IRQ_ENA	0x04
+#define LOCAL_TIMER_CTRL_AUTORELOAD_ENA	0x02
+#define LOCAL_TIMER_CTRL_TIMER_ENA	0x01
+
+#define LOCAL_TIMER_STAT_EVENT		0x01
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/memory.h linux-2.6.34/arch/arm/mach-krome/include/mach/memory.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/memory.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/memory.h	2011-10-10 11:29:19.012461000 +0530
@@ -0,0 +1,95 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ASM_ARCH_MEMORY_H
+#define __ASM_ARCH_MEMORY_H
+
+/* PCI Direct Mappings */
+#define APOLLO_PCI_MEM_BASE_0_LO 0xA0000000
+#define APOLLO_PCI_MEM_BASE_0_HI 0xBFDFFFFF
+#define APOLLO_PCI_MEM_BASE_1_LO 0xBFE00000
+#define APOLLO_PCI_MEM_BASE_1_HI 0xBFFFFFFF
+
+#define APOLLO_PCI_MEM_BASE_0    APOLLO_PCI_MEM_BASE_0_LO
+#define APOLLO_PCI_MEM_BASE_1    APOLLO_PCI_MEM_BASE_1_LO
+
+#define APOLLO_PCI_MEM_BASE_0_SIZE  (APOLLO_PCI_MEM_BASE_0_HI - APOLLO_PCI_MEM_BASE_0_LO)
+#define APOLLO_PCI_MEM_BASE_1_SIZE  (APOLLO_PCI_MEM_BASE_1_HI - APOLLO_PCI_MEM_BASE_1_LO)
+
+#if 0
+/* Sizes of above maps */
+#define APOLLO_PCIMEM			0x20000000
+#define APOLLO_PCIMEM_SIZE		0x10000000	/* 256Mb */
+
+#define APOLLO_PCIIO			0x30000000
+#define APOLLO_PCIIO_SIZE		0x00100000
+#endif
+
+/*
+ * Physical DRAM offset.
+ */
+#define PHYS_OFFSET			UL(0x00000000)
+
+/*
+ * Sparsemem definitions, only valid for high PHYS_OFFSET.
+ *
+ * Most of our boards have 512MB or 256M of RAM. There are 2 banks at 0 and
+ * 0x20000000. The memory exists as 256/128M at 0 and 256/128 at  
+ * 0x20000000.
+ *
+ * The macros below define a section size of 512MB and a non-linear virtual to
+ * physical mapping:
+ *
+ * 0x00000000 -> PAGE_OFFSET
+ * 0x20000000 -> PAGE_OFFSET + 0x10000000
+ */
+#ifdef CONFIG_SPARSEMEM
+
+#define MAX_PHYSMEM_BITS    32 /* The top bit is set for virtual space so
+                                  you need all 32-bits for an address */
+
+#define SECTION_SIZE_BITS   28 /* log2(256M) = 28 */
+
+#define __phys_to_virt(phys) ({                                 \
+        unsigned long virt = 0;                                 \
+        if (((phys) >= 0x20000000UL))                           \
+                virt = (phys) - 0x10000000UL + PAGE_OFFSET;     \
+        else                                                    \
+                virt = (phys) + PAGE_OFFSET;                    \
+        virt;                                                   \
+})
+
+
+#define __virt_to_phys(virt) ({                                 \
+        unsigned long phys = 0;                                 \
+        if (((virt) >= PAGE_OFFSET + 0x10000000UL))             \
+                phys = (virt) - PAGE_OFFSET + 0x10000000UL;     \
+        else if ((virt) >= PAGE_OFFSET)                         \
+                phys = (virt) - PAGE_OFFSET;                    \
+        phys;                                                   \
+})
+
+#endif
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nand.h linux-2.6.34/arch/arm/mach-krome/include/mach/nand.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nand.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nand.h	2011-10-10 11:29:19.017461000 +0530
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for EFMC IP_2070.
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 1.0.0		Sundarapandian A		20090720		Updated for APOLLO
+ */
+#include <mach/pnx8492.h>
+#define   APOLLO_IP2017_BASE          (ARM_A9_HOST_MMIO_BASE + 0x31000)
+#define	  APOLLO_IP2017_LEN           SZ_4K
+#define   APOLLO_INT_FLASH_CTRL_NAND  141
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nor.h linux-2.6.34/arch/arm/mach-krome/include/mach/nor.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nor.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nor.h	2011-10-10 11:29:19.030458000 +0530
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for EFMC IP_2070.
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 1.0.0		Sundarapandian A		20090720		Updated for APOLLO
+ */
+#ifndef _NOR_H_
+#define _NOR_H_
+
+/* #include <mach/platform.h> */
+#include <mach/irqs.h>
+
+#define APOLLO_IP2016_BASE_PHYS          (ARM_A9_HOST_MMIO_BASE + 0x30000)
+#define APOLLO_IP2016_BASE               (APOLLO_IP2016_BASE_PHYS)  
+#define APOLLO_IP2016_LEN                (0x1000)
+
+#define APOLLO_NOR_BASE                  (0xD0000000)
+#define APOLLO_NOR_LEN                   SZ_128M
+
+#define APOLLO_IP2016_POWER_DOWN_CFG_OFFSET    (0xFF4)
+#define APOLLO_IP2016_POWER_DOWN_MASK        (0x00000001)
+#define APOLLO_IP2016_POWER_DOWN_ENABLE      (1UL<<0)
+#define APOLLO_IP2016_POWER_DOWN_DISABLE     (0UL<<0)
+
+#endif /* _NOR_H_ */
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_dmac_1902_dev.h linux-2.6.34/arch/arm/mach-krome/include/mach/nx_dmac_1902_dev.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_dmac_1902_dev.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nx_dmac_1902_dev.h	2011-10-10 11:29:19.032459000 +0530
@@ -0,0 +1,52 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for DMA Controller IP_1902
+ *
+ * Copyright (C) 2009 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author                   Date          Remarks
+ * 0.0.1		Mahadev K Cholachagudda  20090528     Draft-Initial version
+ *
+ */
+
+#ifndef __ARCH_MACH_NX_DMAC_1902_DEV_H_
+#define __ARCH_MACH_NX_DMAC_1902_DEV_H_
+
+
+#include <mach/pnx8492.h>
+#include <mach/irqs.h>
+
+#define APOLLO_DMAC_1902_ACP_BASE_PHYS  (ARM_A9_HOST_MMIO_BASE + 0x2A000)
+#define APOLLO_DMAC_1902_ACP_BASE       (APOLLO_DMAC_1902_ACP_BASE_PHYS)  
+#define APOLLO_DMAC_1902_ACP_LEN        (0x1000)
+
+#define APOLLO_INT_DMAC_1902_ACP        ( IRQ_ACP_DMA_1902 )
+
+#define APOLLO_DMAC_1902_UART_SPI_BASE_PHYS  (ARM_A9_HOST_MMIO_BASE + 0xAE000)
+#define APOLLO_DMAC_1902_UART_SPI_BASE       (APOLLO_DMAC_1902_UART_SPI_BASE_PHYS)  
+#define APOLLO_DMAC_1902_UART_SPI_LEN        (0x1000)
+
+#define APOLLO_INT_DMAC_1902_UART_SPI        ( IRQ_SPI_DMAC )
+
+#endif /* __ARCH_MACH_NX_DMAC_1902_DEV_H_ */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_dmac_dev.h linux-2.6.34/arch/arm/mach-krome/include/mach/nx_dmac_dev.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_dmac_dev.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nx_dmac_dev.h	2011-10-10 11:29:19.034466000 +0530
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for DMAC IP_1902.
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 0.0.1	Bangaragiri G	20080402	Draft-Initial version
+ * 0.1.0	Bangaragiri G	20080804	Proposal-After self review
+ * 0.2.0	Bangaragiri G	20080925	Proposal-After including review comments
+ * 1.0.0	Bangaragiri G	20090305	Accepted-After testing on TV550M0 board
+ */
+ 
+#ifndef __ARCH_MACH_NX_DMAC_DEV_H
+#define __ARCH_MACH_NX_DMAC_DEV_H
+
+
+/* Fix me: To be taken from glb.h */
+#define		APOLLO_DMAC_BASE		(0xE0634000)
+#define		APOLLO_DMAC_LEN			(4096)
+#define		APOLLO_INT_FLASH_DMA		115  /* Fixme, has to come from irqs.h !! */
+
+#define		NX_DMAC_INT_STATUS		(0x000)
+#define		NX_DMAC_INT_TC_STATUS		(0x004)
+#define		NX_DMAC_INT_TC_CLR		(0x008)
+#define		NX_DMAC_INT_ERR_STATUS		(0x00C)
+#define		NX_DMAC_INT_ERR_CLR		(0x010)
+#define		NX_DMAC_INT_RAW_TC_STATUS	(0x014)
+#define		NX_DMAC_INT_RAW_ERR_STATUS	(0x018)
+#define		NX_DMAC_ENLD_CHANS		(0x01C)
+#define		NX_DMAC_SOFT_BREQ		(0x020)
+#define		NX_DMAC_SOFT_SREQ		(0x024)
+#define		NX_DMAC_SOFT_LBREQ		(0x028)
+#define		NX_DMAC_SOFT_LSREQ		(0x02C)
+#define		NX_DMAC_CONFIG			(0x030)
+#define		NX_DMAC_SYNC			(0x034)
+#define		NX_DMAC_CHAN0_SRC		(0x100)
+#define		NX_DMAC_CHAN0_DST		(0x104)
+#define		NX_DMAC_CHAN0_LLI		(0x108)
+#define		NX_DMAC_CHAN0_CTRL		(0x10C)
+#define		NX_DMAC_CHAN0_CONFIG		(0x110)
+#define		NX_DMAC_PERI_ID0		(0xFE0)
+#define		NX_DMAC_PERI_ID1		(0xFE4)
+#define		NX_DMAC_PERI_ID2		(0xFE8)
+#define		NX_DMAC_PERI_ID3		(0xFEC)
+#define		NX_DMAC_CELL_ID0		(0xFF0)
+#define		NX_DMAC_CELL_ID1		(0xFF4)
+#define		NX_DMAC_CELL_ID2		(0xFF8)
+#define		NX_DMAC_CELL_ID3		(0xFFC)
+
+#define		NX_DMAC_CHAN_OFF		(0x020)
+
+#endif /* __ARCH_MACH_NX_DMAC_DEV_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_sdiomc_dev.h linux-2.6.34/arch/arm/mach-krome/include/mach/nx_sdiomc_dev.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_sdiomc_dev.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nx_sdiomc_dev.h	2011-10-10 11:29:19.050460000 +0530
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver SD/SDIO/MMC controller IP_3413
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author                   Date          Remarks
+ * 0.0.1	Mahadev K Cholachagudda  20090216     Draft-Initial version
+ *
+ */
+
+#ifndef __ARCH_MACH_NX_SDIOMC_DEV_H_
+#define __ARCH_MACH_NX_SDIOMC_DEV_H_
+
+
+#include <mach/pnx8492.h>
+#include <mach/irqs.h>
+
+#define APOLLO_SDIOMC_BASE_PHYS  (ARM_A9_HOST_MMIO_BASE + 0x6F000)
+#define APOLLO_SDIOMC_BASE (APOLLO_SDIOMC_BASE_PHYS)  
+#define APOLLO_SDIOMC_LEN  (0x1000)
+
+#define APOLLO_INT_SDIOMC  ( 156)  /* Fixme, has to come from irqs.h !! */
+
+/*!
+ * This structure is used to store the platform specific SD/SDIO/MMC controller
+ * IP_3413 configuration information, which is later passed onto the Linux
+ * driver for SD/SDIO/MMC controller IP_3413 driver.
+ */
+struct nx_sdiomc_platform_data {
+  unsigned long num_slots;   /*!< This parameter represents number of slots that are configured in SD/SDIO/MMC controller IP_3413 configuration */
+};
+
+#endif /* __ARCH_MACH_NX_SDIOMC_DEV_H_ */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_spi_dev.h linux-2.6.34/arch/arm/mach-krome/include/mach/nx_spi_dev.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/nx_spi_dev.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/nx_spi_dev.h	2011-10-10 11:29:19.055462000 +0530
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: ??
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_NX_SPI_DEV_H_
+#define __ARCH_MACH_NX_SPI_DEV_H_
+
+
+#include <linux/spi/spi.h>
+#include <linux/nx_dmac_1902.h>
+
+#include <mach/pnx8492.h>
+#include <mach/irqs.h>
+
+/*FIXME:: Move this NX_SPI_BASE_SPI0 to mach/pnx8492.h*/
+#define NX_SPI_BASE_SPI0	(ARM_A9_HOST_MMIO_BASE + 0xB0000)
+#define IRQ_SPI0		IRQ_SPI_COMB
+
+#define NXP_SPI_NUM_CHIPSELECTS	6
+
+struct nx_spi_platform_data
+{
+     struct nx_dmac_1902_slave *slave_tx;
+     struct nx_dmac_1902_slave *slave_rx;
+     struct spi_board_info   *spi_devices;
+     int plfdatasize;
+};
+
+/* SPI */
+struct nx_spi_controller_data
+{
+    u8 tx_int_threshold;
+    u8 rx_int_threshold;
+    u8 dma_tx_burst;
+    u8 dma_rx_burst;
+    u32 spi_ip_clk;
+    u8 txchan_num;
+    u8 rxchan_num;
+};
+
+#endif /* __ARCH_MACH_NX_SPI_DEV_H_ */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/pci.h linux-2.6.34/arch/arm/mach-krome/include/mach/pci.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/pci.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/pci.h	2011-10-10 11:29:19.058463000 +0530
@@ -0,0 +1,218 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright (C) 2007 NXP B.V.
+ *
+ * BRIEF MODULE DESCRIPTION
+ * PCI specific definitions
+ *
+ * Author: source@mvista.com
+ *
+ *  This program is free software; you can distribute it and/or modify it
+ *  under the terms of the GNU General Public License (Version 2) as
+ *  published by the Free Software Foundation.
+ *
+ *  This program is distributed in the hope it will be useful, but WITHOUT
+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ *  for more details.
+ *
+ *  You should have received a copy of the GNU General Public License along
+ *  with this program; if not, write to the Free Software Foundation, Inc.,
+ *  59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
+ */
+
+#ifndef __PNX8492_PCI_H
+#define __PNX8492_PCI_H
+
+#include <linux/types.h>
+#include <linux/pci.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+
+#include <mach/pnx8492.h>
+
+
+#define PCI_ACCESS_READ  0
+#define PCI_ACCESS_WRITE 1
+
+#define PCI_CMD_IOR			0x20
+#define PCI_CMD_IOW			0x30
+#define PCI_CMD_CONFIG_READ		0xa0
+#define PCI_CMD_CONFIG_WRITE		0xb0
+
+#define PCI_IO_TIMEOUT			1000
+#define PCI_IO_RETRY			5
+/* Timeout for IO and CFG accesses.
+   This is in 1/1024 th of a jiffie(=10ms)
+   i.e. approx 10us */
+#define PCI_IO_JIFFIES_TIMEOUT		40
+#define PCI_IO_JIFFIES_SHIFT		10
+
+#define PCI_BYTE_ENABLE_MASK		0x0000000f
+#define PCI_CFG_BUS_SHIFT		16
+#define PCI_CFG_FUNC_SHIFT		8
+#define PCI_CFG_REG_SHIFT		2
+
+#define PCI_SETUP			(IPA051_PCI_PORT_0 + 0x0010)
+#define PCI_SETUP_DIS_REQGNT		(1<<30)
+#define PCI_SETUP_DIS_REQGNTA		(1<<29)
+#define PCI_SETUP_DIS_REQGNTB		(1<<28)
+#define PCI_SETUP_D2_SUPPORT		(1<<27)
+#define PCI_SETUP_D1_SUPPORT		(1<<26)
+#define PCI_SETUP_EN_TA			(1<<24)
+#define PCI_SETUP_EN_PCI2MMI		(1<<23)
+#define PCI_SETUP_EN_XIO		(1<<22)
+#define PCI_SETUP_BASE18_PREF		(1<<21)
+#define PCI_SETUP_BASE10_SIZE_16M	0x3
+#define PCI_SETUP_BASE10_SIZE_32M	0x4
+#define PCI_SETUP_BASE10_SIZE_64M	0x5
+#define PCI_SETUP_BASE10_SIZE_128M	0x6
+#define PCI_SETUP_BASE10_SIZE_256M	0x7
+#define PCI_SETUP_BASE18_SIZE_16M	0x3
+#define PCI_SETUP_BASE18_SIZE_32M	0x4
+#define PCI_SETUP_BASE18_SIZE_64M	0x5
+#define PCI_SETUP_BASE18_SIZE_128M	0x6
+#define PCI_SETUP_BASE18_SIZE_256M	0x7
+#define PCI_SETUP_BASE18_SIZE(X)	(X<<18)
+#define PCI_SETUP_BASE18_EN		(1<<17)
+#define PCI_SETUP_BASE14_PREF		(1<<16)
+#define PCI_SETUP_BASE14_SIZE(X)	(X<<12)
+#define PCI_SETUP_BASE14_EN		(1<<11)
+#define PCI_SETUP_BASE10_PREF		(1<<10)
+#define PCI_SETUP_BASE10_SIZE_BSHIFT	(7)
+#define PCI_SETUP_BASE10_SIZE(X)	(X<<7)
+#define PCI_SETUP_BASE10_SIZE_MASK	(PCI_SETUP_BASE10_SIZE(7))
+#define PCI_SETUP_CFGMANAGE_EN		(1<<1)
+#define PCI_SETUP_PCIARB_EN		(1<<0)
+
+#define PCI_CTRL			(IPA051_PCI_PORT_0 + 0x0014)
+#define PCI_SWPB_DCS_PCI		(1<<16)
+#define PCI_SWPB_PCI_PCI		(1<<15)
+#define PCI_SWPB_PCI_DCS		(1<<14)
+#define PCI_REG_WR_POST			(1<<13)
+#define PCI_XIO_WR_POST			(1<<12)
+#define PCI_PCI2_WR_POST		(1<<13)
+#define PCI_PCI1_WR_POST		(1<<12)
+#define PCI_SERR_SEEN			(1<<11)
+#define PCI_B10_SPEC_RD			(1<<6)
+#define PCI_B14_SPEC_RD			(1<<5)
+#define PCI_B18_SPEC_RD			(1<<4)
+#define PCI_B10_NOSUBWORD		(1<<3)
+#define PCI_B14_NOSUBWORD		(1<<2)
+#define PCI_B18_NOSUBWORD		(1<<1)
+#define PCI_RETRY_TMREN			(1<<0)
+
+#define PCI_BASE_0_LO			(IPA051_PCI_PORT_0 + 0x0018)
+#define PCI_BASE_0_HI			(IPA051_PCI_PORT_0 + 0x001C)
+#define PCI_BASE_1_LO			(IPA051_PCI_PORT_0 + 0x0020)
+#define PCI_BASE_1_HI			(IPA051_PCI_PORT_0 + 0x0024)
+#define PCI_RDLIFETIM			(IPA051_PCI_PORT_0 + 0x0028)
+#define PCI_GPPM_ADDR			(IPA051_PCI_PORT_0 + 0x002C)
+#define PCI_GPPM_WDAT			(IPA051_PCI_PORT_0 + 0x0030)
+#define PCI_GPPM_RDAT			(IPA051_PCI_PORT_0 + 0x0034)
+#define PCI_GPPM_CTRL			(IPA051_PCI_PORT_0 + 0x0038)
+#define GPPM_DONE			(1<<10)
+#define INIT_PCI_CYCLE			(1<<9)
+#define GPPM_CMD(X)			(((X)&0xf)<<4)
+#define GPPM_BYTEEN(X)			((X)&0xf)
+#define PCI_UNLOCKREG			(IPA051_PCI_PORT_0 + 0x003C)
+#define UNLOCK_SSID(X)			(((X)&0xff)<<8)
+#define UNLOCK_SETUP(X)			(((X)&0xff)<<0)
+#define UNLOCK_MAGIC			0xCA
+#define PCI_DEV_VEND_ID			(IPA051_PCI_PORT_0 + 0x0040)
+#define DEVICE_ID(X)			(((X)>>16)&0xffff)
+#define VENDOR_ID(X)			(((X)&0xffff))
+#define PCI_CFG_CMDSTAT			(IPA051_PCI_PORT_0 + 0x0044)
+#define PCI_CFG_STATUS(X)		(((X)>>16)&0xffff)
+#define PCI_CFG_COMMAND(X)		((X)&0xffff)
+#define PCI_CLASS_REV			(IPA051_PCI_PORT_0 + 0x0048)
+#define PCI_CLASSCODE(X)		(((X)>>8)&0xffffff)
+#define PCI_REVID(X)			((X)&0xff)
+#define PCI_LAT_TMR			(IPA051_PCI_PORT_0 + 0x004c)
+#define PCI_BASE10			(IPA051_PCI_PORT_0 + 0x0050)
+#define PCI_BASE14			(IPA051_PCI_PORT_0 + 0x0054)
+#define PCI_BASE18			(IPA051_PCI_PORT_0 + 0x0058)
+#define PCI_SUBSYS_ID			(IPA051_PCI_PORT_0 + 0x006c)
+#define PCI_CAP_PTR			(IPA051_PCI_PORT_0 + 0x0074)
+#define PCI_CFG_MISC			(IPA051_PCI_PORT_0 + 0x007c)
+#define PCI_PMC				(IPA051_PCI_PORT_0 + 0x0080)
+#define PCI_PWR_STATE			(IPA051_PCI_PORT_0 + 0x0084)
+#define PCI_IO				(IPA051_PCI_PORT_0 + 0x0088)
+#define PCI_SLVTUNING			(IPA051_PCI_PORT_0 + 0x008C)
+#define PCI_DMATUNING			(IPA051_PCI_PORT_0 + 0x0090)
+#define PCI_ADDR_REMAP_ENABLE (IPA051_PCI_PORT_0 + 0x009C)
+#define PCI_DMAEADDR			(IPA051_PCI_PORT_0 + 0x0800)
+#define PCI_DMAIADDR			(IPA051_PCI_PORT_0 + 0x0804)
+#define PCI_DMALEN			(IPA051_PCI_PORT_0 + 0x0808)
+#define PCI_DMACTRL			(IPA051_PCI_PORT_0 + 0x080C)
+#define PCI_XIOCTRL			(IPA051_PCI_PORT_0 + 0x0810)
+#define PCI_SEL0PROF			(IPA051_PCI_PORT_0 + 0x0814)
+#define PCI_SEL1PROF			(IPA051_PCI_PORT_0 + 0x0818)
+#define PCI_SEL2PROF			(IPA051_PCI_PORT_0 + 0x081C)
+#define PCI_GPXIOADDR			(IPA051_PCI_PORT_0 + 0x0820)
+#define PCI_NANDCTRLS			(IPA051_PCI_PORT_0 + 0x0830)
+#define PCI_SEL3PROF			(IPA051_PCI_PORT_0 + 0x0834)
+#define PCI_SEL4PROF			(IPA051_PCI_PORT_0 + 0x0838)
+#define PCI_GPXIO_STAT			(IPA051_PCI_PORT_0 + 0x0FB0)
+#define PCI_GPXIO_IMASK			(IPA051_PCI_PORT_0 + 0x0FB4)
+#define PCI_GPXIO_ICLR			(IPA051_PCI_PORT_0 + 0x0FB8)
+#define PCI_GPXIO_ISET			(IPA051_PCI_PORT_0 + 0x0FBC)
+#define PCI_GPPM_STATUS			(IPA051_PCI_PORT_0 + 0x0FC0)
+#define GPPM_DONE			(1<<10)
+#define GPPM_ERR			(1<<9)
+#define GPPM_MPAR_ERR			(1<<8)
+#define GPPM_PAR_ERR			(1<<7)
+#define GPPM_R_MABORT			(1<<2)
+#define GPPM_R_TABORT			(1<<1)
+#define PCI_GPPM_IMASK			(IPA051_PCI_PORT_0 + 0x0FC4)
+#define PCI_GPPM_ICLR			(IPA051_PCI_PORT_0 + 0x0FC8)
+#define PCI_GPPM_ISET			(IPA051_PCI_PORT_0 + 0x0FCC)
+#define PCI_DMA_STATUS			(IPA051_PCI_PORT_0 + 0x0FD0)
+#define PCI_DMA_IMASK			(IPA051_PCI_PORT_0 + 0x0FD4)
+#define PCI_DMA_ICLR			(IPA051_PCI_PORT_0 + 0x0FD8)
+#define PCI_DMA_ISET			(IPA051_PCI_PORT_0 + 0x0FDC)
+#define PCI_ISTATUS			(IPA051_PCI_PORT_0 + 0x0FE0)
+#define PCI_IMASK			(IPA051_PCI_PORT_0 + 0x0FE4)
+#define PCI_ICLR			(IPA051_PCI_PORT_0 + 0x0FE8)
+#define PCI_ISET			(IPA051_PCI_PORT_0 + 0x0FEC)
+#define PCI_MOD_ID			(IPA051_PCI_PORT_0 + 0x0FFC)
+
+/*
+ *  PCI configuration cycle AD bus definition
+ */
+/* Type 0 */
+#define PCI_CFG_TYPE0_REG_SHF		0
+#define PCI_CFG_TYPE0_FUNC_SHF		8
+
+/* Type 1 */
+#define PCI_CFG_TYPE1_REG_SHF		0
+#define PCI_CFG_TYPE1_FUNC_SHF		8
+#define PCI_CFG_TYPE1_DEV_SHF		11
+#define PCI_CFG_TYPE1_BUS_SHF		16
+
+/*
+ *  Ethernet device DP83816 definition
+ */
+#define DP83816_IRQ_ETHER		66
+
+#define PNX8XXX_SLAVE_DTL_TUNING	*(volatile unsigned long *)(PNX8XXX_XIO_BASE_VIRT + 0x8c)
+
+typedef struct {
+	u16	vendor;
+	u16	device;
+	u32	bar0_base;
+	u32	bar0_sz;
+	u32	bar1_base;
+	u32	bar1_sz;
+	u32	bar2_base;
+	u32	bar2_sz;
+	char*	description;
+	int	enum_done;
+} pci_enumeration_static_t;
+
+#endif /* __PNX8492_PCI_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/pm.h linux-2.6.34/arch/arm/mach-krome/include/mach/pm.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/pm.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/pm.h	2011-10-10 11:29:19.063464000 +0530
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ASM_ARCH_APOLLO_PM_H
+#define __ASM_ARCH_APOLLO_PM_H
+
+
+struct apollo_pm_stdby_ctrlr_ops
+{
+	int (*prepare)(void);
+	int (*enter)(unsigned long);
+	int (*exit)(void);
+	int (*finish)(void);
+	int (*recover)(void);
+};
+struct apollo_pm_gic_dist_save {
+    u32     cpu_ctrl;
+    u32     cpu_primask;
+    u32     cpu_binpoint;
+    u32     cpu_intack;
+    u32     cpu_eoi;
+    u32     cpu_runningpri;
+    u32     cpu_highpri;
+    u32     dist_enable_set[8];
+    u32     dist_enable_clear[8];
+    u32     dist_pending_set[8];
+    u32     dist_softint;
+};
+
+extern int apollo_pm_register(struct apollo_pm_stdby_ctrlr_ops *pOps);
+
+
+#endif /* __ASM_ARCH_APOLLO_PM_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/pnx8492.h linux-2.6.34/arch/arm/mach-krome/include/mach/pnx8492.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/pnx8492.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/pnx8492.h	2011-10-10 11:29:19.075460000 +0530
@@ -0,0 +1,245 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __ARCH_MACH_PNX8492_H
+#define __ARCH_MACH_PNX8492_H
+
+#include <asm/sizes.h>
+#include <mach/hardware.h>
+
+#ifdef CONFIG_EXECUTE_ON_EMULATOR
+#define APOLLO_CORTEX_FREQ			(500 * 1000 * 1000)
+#define APOLLO_PERIPHERALS_FREQ			(APOLLO_CORTEX_FREQ / 2)
+#else
+#define APOLLO_CORTEX_FREQ			(500 * 1000 * 1000)
+#define APOLLO_PERIPHERALS_FREQ			(APOLLO_CORTEX_FREQ / 2)
+#endif /* CONFIG_EXECUTE_ON_EMULATOR */
+
+#ifdef CONFIG_EXECUTE_ON_EMULATOR
+//#define UART_CLOCK_RATE		(73000/4)
+#define UART_CLOCK_RATE		(46293)  //740700/16
+//#define UART_CLOCK_RATE		(33600)
+#else
+#define UART_CLOCK_RATE		(50000000)
+#endif
+
+#define MAX_TIMER				2
+#define MAX_PERIOD				699050
+#define TICKS_PER_uSEC				1
+
+/*
+ *  These are u_seconds NOT ticks.
+ */
+#define mSEC_1					1000
+#define mSEC_5					(mSEC_1 * 5)
+#define mSEC_10					(mSEC_1 * 10)
+#define mSEC_25					(mSEC_1 * 25)
+#define SEC_1					(mSEC_1 * 1000)
+
+/* 
+ *  SDRAM
+ */
+#define APOLLO_SDRAM_BASE			0x00000000
+
+/*
+ *  MMIO Devices
+ */
+#define ARM_A9_HOST_MMIO_BASE			0xE0600000
+#define HOST_ARM_MMIO_APERTURE			0x1FFFFF
+
+/*
+ * Device port addresses
+ */
+#define MMIO_GCS_BASE            (ARM_A9_HOST_MMIO_BASE + 0x30000)
+#define MMIO_SATA_BASE           (ARM_A9_HOST_MMIO_BASE + 0x38000)
+
+#define MMIO_RGU_BASE            (ARM_A9_HOST_MMIO_BASE + 0xaf000)
+#define  RST_GRESET0_REG         (MMIO_RGU_BASE + 0x0C)
+#define   RST_GRESET0_IIC1       (1<<14)
+#define   RST_GRESET0_IIC2       (1<<15)
+#define   RST_GRESET0_IIC3       (1<<16)
+#define  RST_GRESET1_REG         (MMIO_RGU_BASE + 0x10)
+#define   RST_GRESET1_IIC0       (1<<14)
+#define  RST_GRESET2_REG         (MMIO_RGU_BASE + 0x14)
+#define   RST_GRESET2_IIC4       (1<<20)
+#define  RST_LOCKCMD_REG         (MMIO_RGU_BASE + 0x28)
+#define  RST_LOCKSTAT_REG        (MMIO_RGU_BASE + 0x2C)
+#define   RST_LOCKSTAT_LOCK      (1 << 1)     /* 0 to unlock */
+
+
+#define  RST_CONFIG_REG          (MMIO_RGU_BASE + 0x30)
+#define   PCI_HOST_MODE_ENABLED  (((readl(RST_CONFIG_REG)&(1<<23)) &&   \
+                                   !(readl(RST_CONFIG_REG)&(1<<16)))?   \
+                                  true:false)
+
+#define MMIO_CLOCK_BASE          (ARM_A9_HOST_MMIO_BASE + 0x6a000)
+
+#define MMIO_GLB_BASE            (ARM_A9_HOST_MMIO_BASE + 0xbb000)
+#define  ALT_PIN_MUX_REG_0       (MMIO_GLB_BASE + 0x140)
+#define  GLBREG_MISC1            (MMIO_GLB_BASE + 0x500)
+
+
+#ifdef CONFIG_EXECUTE_ON_SIMULATOR
+#define UART1_PORT0_OFFSET			0xE0000	/* Uart 1 -> Console */
+#define UART2_PORT0_OFFSET			0xE1000	/* Uart 2 -> Console */
+#define UART3_PORT0_OFFSET			0xE2000	/* Uart 3 -> Console */
+#define UART4_PORT0_OFFSET			0xE3000	/* Uart 4 -> Console */
+#else
+#define UART1_PORT0_OFFSET			0xb2000
+#define UART2_PORT0_OFFSET			0xb2000
+#define UART3_PORT0_OFFSET			0xb3000
+#define UART4_PORT0_OFFSET			0xb4000
+#endif
+
+#define USB_PORT0_OFFSET			0x6C000
+#define USB_PORT1_OFFSET			0x6D000
+
+#define GPIO_PORT0_OFFSET			0x69000
+
+#define PCI_PORT0_OFFSET			0x2F000
+
+/* MMIO device addresses */
+#define MMIO_UART1_BASE				(ARM_A9_HOST_MMIO_BASE + UART1_PORT0_OFFSET)
+#define MMIO_UART2_BASE				(ARM_A9_HOST_MMIO_BASE + UART2_PORT0_OFFSET)
+#define MMIO_UART3_BASE				(ARM_A9_HOST_MMIO_BASE + UART3_PORT0_OFFSET)
+#define MMIO_UART4_BASE				(ARM_A9_HOST_MMIO_BASE + UART4_PORT0_OFFSET)
+
+#define MMIO_USB_PORT0				(ARM_A9_HOST_MMIO_BASE + USB_PORT0_OFFSET)
+#define MMIO_USB_PORT1				(ARM_A9_HOST_MMIO_BASE + USB_PORT1_OFFSET)
+
+#define MMIO_GPIO_PORT0				(ARM_A9_HOST_MMIO_BASE + GPIO_PORT0_OFFSET)
+
+#define MMIO_PCI_PORT0				(ARM_A9_HOST_MMIO_BASE + PCI_PORT0_OFFSET)
+
+/* DEVICE NAMES TO BE USED */
+#define IP3106_UART_PORT_0			MMIO_UART1_BASE
+#define IP3106_UART_PORT_1			MMIO_UART2_BASE
+#define IP3106_UART_PORT_2			MMIO_UART3_BASE
+#define IP3106_UART_PORT_3			MMIO_UART4_BASE
+
+#define IP9028_USB_PORT_0			MMIO_USB_PORT0
+#define IP9028_USB_PORT_1			MMIO_USB_PORT1
+
+#define IPXXXX_GPIO_PORT_0			MMIO_GPIO_PORT0
+
+#define IPA051_PCI_PORT_0			MMIO_PCI_PORT0
+
+/* GMAC0 Clock Registers */
+#define APOLLO_CLK_GMAC0_AHBCLK     		(MMIO_CLOCK_BASE + 0x03C0)
+#define APOLLO_CLK_GMAC0_PHY_TX     		(MMIO_CLOCK_BASE + 0x03C4)
+#define APOLLO_CLK_GMAC0_PHY_RX     		(MMIO_CLOCK_BASE + 0x03C8)
+#define APOLLO_CLK_GMAC0_RMII       		(MMIO_CLOCK_BASE + 0x03CC)
+#define APOLLO_CLK_GMAC0_TXCLK_OUT  		(MMIO_CLOCK_BASE + 0x03D0)
+
+/* GMAC1 Clock Registers */
+#define APOLLO_CLK_GMAC1_AHBCLK     		(MMIO_CLOCK_BASE + 0x03D4)
+#define APOLLO_CLK_GMAC1_PHY_TX     		(MMIO_CLOCK_BASE + 0x03D8)
+#define APOLLO_CLK_GMAC1_PHY_RX     		(MMIO_CLOCK_BASE + 0x03DC)
+#define APOLLO_CLK_GMAC1_RMII       		(MMIO_CLOCK_BASE + 0x03E0)
+#define APOLLO_CLK_GMAC1_TXCLK_OUT  		(MMIO_CLOCK_BASE + 0x03E4)
+
+/* GPIO registers */
+#define GPIO_0_15_MODE_CTL0			*(volatile unsigned long *)(IPXXXX_GPIO_PORT_0 + 0x000)
+
+/*
+ * Cortex A9 Internal Peripheral IP
+ */
+#define APOLLO_CORTEX_A9_PERIPHBASE		0xE0100000
+#define APOLLO_CORTEX_A9_SCU_OFFSET		0x0000
+#define APOLLO_CORTEX_A9_INTC_OFFSET		0x0100
+#define APOLLO_CORTEX_A9_GLOB_TIMER_OFFSET	0x0200
+#define APOLLO_CORTEX_A9_PRIV_TIMER_OFFSET	0x0600
+#define APOLLO_CORTEX_A9_DISTR_OFFSET		0x1000
+#define APOLLO_CORTEX_A9_L2CACHE_OFFSET		0x2000
+/* device names to be used */
+#define APOLLO_CORTEX_A9_SCU_BASE		(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_SCU_OFFSET)
+#define APOLLO_CORTEX_A9_INTC_BASE		(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_INTC_OFFSET)
+#define APOLLO_CORTEX_A9_GLOB_TIMER_BASE	(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_GLOB_TIMER_OFFSET)
+#define APOLLO_CORTEX_A9_PRIV_TIMER_BASE	(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_PRIV_TIMER_OFFSET)
+#define APOLLO_CORTEX_A9_DISTR_BASE		(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_DISTR_OFFSET)
+#define APOLLO_CORTEX_A9_L2CACHE_BASE		(APOLLO_CORTEX_A9_PERIPHBASE + APOLLO_CORTEX_A9_L2CACHE_OFFSET)
+
+/*
+ * Cortex A9 Registers
+ */
+
+#define APOLLO_SYS_BASE				(0x80000000) /* This is wrong as we do not know what sys-base expects */
+#define APOLLO_RESET_BASE			(ARM_A9_HOST_MMIO_BASE + 0xaf000)
+#define APOLLO_RESET_LOCKCMD_OFFSET		0x28
+#define APOLLO_RESET_LOCKSTAT_OFFSET		0x2c
+#define APOLLO_RESET_SOFTRESET_OFFSET		0x08
+/* device names to be used */
+#define APOLLO_RESET_LOCKCMD			(APOLLO_RESET_BASE + APOLLO_RESET_LOCKCMD_OFFSET)
+#define APOLLO_RESET_LOCKSTAT			(APOLLO_RESET_BASE + APOLLO_RESET_LOCKSTAT_OFFSET)
+#define APOLLO_RESET_SOFTRESET			(APOLLO_RESET_BASE + APOLLO_RESET_SOFTRESET_OFFSET)
+
+/* RTC */
+#define APOLLO_RTC_BASE				(ARM_A9_HOST_MMIO_BASE + 0x8b000)
+
+/*
+ * Tile-specific addresses
+ */
+#define PNX8XXX_CLOCK_BASE			MMIO_CLOCK_BASE	/* clock module */ 
+
+/* ChipID and Revision ID defines */
+#define CHIPID_APOLLO    0x1
+#define CHIPID_SHINER_S  0x2
+#define CHIPID_SHINER_IP 0x3
+#define CHIPID_HELIOS    0x4
+
+#define CHIP_REV_M0 0x1
+
+/*
+ * these spaces are mapped using the following base registers:
+ *
+ * Usage Local Bus Memory         Base/Map registers used
+ *
+ * Mem   50000000 - 5FFFFFFF      LB_BASE0/LB_MAP0,  non prefetch
+ * Mem   60000000 - 6FFFFFFF      LB_BASE1/LB_MAP1,  prefetch
+ * IO    44000000 - 4FFFFFFF      LB_BASE2/LB_MAP2,  IO
+ * Cfg   42000000 - 42FFFFFF	  PCI config
+ *
+ */
+#define APOLLO_PCI_CORE_BASE		IPA051_PCI_PORT_0
+#define APOLLO_SYS_PCICTL		IPA051_PCI_PORT_0
+#define __IO_ADDRESS(n) ((void __iomem *)(unsigned long)IO_ADDRESS(n))
+
+#define SYS_PCICTL			__IO_ADDRESS(APOLLO_SYS_PCICTL)
+#define PCI_IMAP0			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x0)
+#define PCI_IMAP1			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x4)
+#define PCI_IMAP2			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x8)
+#define PCI_SMAP0			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x10)
+#define PCI_SMAP1			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x14)
+#define PCI_SMAP2			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0x18)
+#define PCI_SELFID			__IO_ADDRESS(APOLLO_PCI_CORE_BASE+0xc)
+
+#define DEVICE_ID_OFFSET		0x00
+#define CSR_OFFSET			0x04
+#define CLASS_ID_OFFSET			0x08
+
+#define VP_PCI_DEVICE_ID		0x00000000	/* real value to be gained from real silicon !! */
+#define VP_PCI_CLASS_ID			0x00000000	/* real value to be gained from real silicon !! */
+
+#endif /* __ARCH_MACH_PNX8492_H */
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/scu.h linux-2.6.34/arch/arm/mach-krome/include/mach/scu.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/scu.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/scu.h	2011-10-10 11:29:19.081462000 +0530
@@ -0,0 +1,37 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ASMARM_ARCH_SCU_H
+#define __ASMARM_ARCH_SCU_H
+
+/*
+ * SCU registers
+ */
+#define SCU_CTRL		0x00
+#define SCU_CONFIG		0x04
+#define SCU_CPU_STATUS		0x08
+#define SCU_INVALIDATE		0x0c
+#define SCU_FPGA_REVISION	0x10
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/sfc.h linux-2.6.34/arch/arm/mach-krome/include/mach/sfc.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/sfc.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/sfc.h	2011-10-10 11:29:19.095459000 +0530
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for EFMC IP_2070.
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author           Date          Remarks		
+ * 1.0.0		Sundarapandian A		20090720		Updated for APOLLO
+ */
+#ifndef _SFC_H_
+#define _SFC_H_
+
+/* #include <mach/platform.h> */
+#include <mach/irqs.h>
+
+#define APOLLO_SFC_CFG_BASE_PHYS         (ARM_A9_HOST_MMIO_BASE + 0x32000)
+#define APOLLO_SFC_CFG_BASE              (APOLLO_SFC_CFG_BASE_PHYS)  
+#define APOLLO_SFC_CFG_LEN               (0x1000)
+
+#endif /* _SFC_H_ */
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/smp.h linux-2.6.34/arch/arm/mach-krome/include/mach/smp.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/smp.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/smp.h	2011-10-10 11:29:19.109460000 +0530
@@ -0,0 +1,47 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef ASM_ARM_ARCH_SMP_H
+#define ASM_ARM_ARCH_SMP_H
+
+#include <asm/hardware/gic.h>
+
+
+#define hard_smp_processor_id()				\
+	({						\
+		unsigned int cpunum;			\
+		__asm__("mrc p15, 0, %0, c0, c0, 5"	\
+			: "=r" (cpunum));		\
+		cpunum &= 0x0F;				\
+	})
+
+/*
+ * We use IRQ1 as the IPI
+ */
+static inline void smp_cross_call(const struct cpumask *mask)
+{
+	gic_raise_softirq(mask, 1);
+}
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/splash_logo.h linux-2.6.34/arch/arm/mach-krome/include/mach/splash_logo.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/splash_logo.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/splash_logo.h	2011-10-10 11:29:19.121461000 +0530
@@ -0,0 +1,20 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd.
+ *
+ * All prior copyright rights in this work and the accompanying software
+ * products transferred to Trident Microsystems (Far East) Ltd. by written
+ * agreement.  All rights reserved.
+ *
+ *
+ *   name:          splash_logo.c
+ *   version:
+ *   date_modified: Jun 17, 2010
+ *   derived_by:    ddouglass
+ */
+
+#ifndef SPLASH_LOGO_H
+#define SPLASH_LOGO_H
+
+void __init apollo_splash( void );
+
+#endif // SPLASH_LOGO_H
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/system.h linux-2.6.34/arch/arm/mach-krome/include/mach/system.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/system.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/system.h	2011-10-10 11:29:19.133465000 +0530
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ASM_ARCH_SYSTEM_H
+#define __ASM_ARCH_SYSTEM_H
+
+#include <linux/io.h>
+#include <mach/hardware.h>
+#include <mach/pnx8492.h>
+
+
+static inline void arch_idle(void)
+{
+	/*
+	 * This should do all the clock switching
+	 * and wait for interrupt tricks
+	 */
+	cpu_do_idle();
+}
+
+static inline void arch_reset(char mode, const char *cmd)
+{
+	__raw_writel(0xf8, IO_ADDRESS(APOLLO_RESET_LOCKCMD));
+	__raw_writel(0x2b, IO_ADDRESS(APOLLO_RESET_LOCKCMD));
+	__raw_writel(0x1, IO_ADDRESS(APOLLO_RESET_LOCKSTAT));
+	__raw_writel(0x1, IO_ADDRESS(APOLLO_RESET_SOFTRESET));
+}
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/timex.h linux-2.6.34/arch/arm/mach-krome/include/mach/timex.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/timex.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/timex.h	2011-10-10 11:29:19.142460000 +0530
@@ -0,0 +1,32 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+ 
+#ifndef __ARCH_MACH_TIMEX_H
+#define __ARCH_MACH_TIMEX_H
+
+#define CLOCK_TICK_RATE		1193180
+
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/uncompress.h linux-2.6.34/arch/arm/mach-krome/include/mach/uncompress.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/uncompress.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/uncompress.h	2011-10-10 11:29:19.152463000 +0530
@@ -0,0 +1,36 @@
+/*
+ * arch/arm/mach-apollo/include/mach/uncompress.h
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2.  This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+
+#include <mach/pnx8492.h>
+#include <asm/io.h>
+#include <asm/hardware/ip3106.h>
+
+#define UART_THR (MMIO_UART2_BASE + IP3106_UART_THR_REG)
+#define UART_LSR (MMIO_UART2_BASE + IP3106_UART_LSR_REG)
+
+static void putc(const char c)
+{
+	int status;
+
+	/* Transmit fifo not full? */
+	do {
+		status = __raw_readl(UART_LSR);
+	} while (!(status & IP3106_UART_LSR_THRE_MSK));
+
+	__raw_writel(c,UART_THR);
+}
+
+static void flush(void)
+{
+}
+
+/*
+ * nothing to do
+ */
+#define arch_decomp_setup()
+#define arch_decomp_wdog()
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/include/mach/vmalloc.h linux-2.6.34/arch/arm/mach-krome/include/mach/vmalloc.h
--- linux-2.6.34_org/arch/arm/mach-krome/include/mach/vmalloc.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/include/mach/vmalloc.h	2011-10-10 11:29:19.163461000 +0530
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+ 
+#ifndef __ARCH_MACH_VMALLOC_H
+#define __ARCH_MACH_VMALLOC_H
+
+#ifdef CONFIG_VMSPLIT_3G
+#ifdef CONFIG_ARCH_SPARSEMEM_ENABLE
+#define VMALLOC_OFFSET		(8*1024*1024)
+/* Hardcoding - real bad. We want the vmalloc space to start from 0xe800 0000 */
+/* for 3g/1G split as we have MMIO till 0xe7ff ffff */
+#define VMALLOC_START		((0xe8000000 + VMALLOC_OFFSET) & ~(VMALLOC_OFFSET-1))
+#define VMALLOC_END		(PAGE_OFFSET + 0x3d000000)
+#else
+#error "3G/1G memory split is only supported with Sparsemem, pls fix the kernel config"
+#endif
+#else
+#define VMALLOC_END		(PAGE_OFFSET + 0x50000000)
+#endif
+
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/Kconfig linux-2.6.34/arch/arm/mach-krome/Kconfig
--- linux-2.6.34_org/arch/arm/mach-krome/Kconfig	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/Kconfig	2011-10-10 17:50:48.712651000 +0530
@@ -0,0 +1,120 @@
+menu "Krome Platform Types"
+	depends on ARCH_KROME
+
+
+config MACH_KROME_EMU_A9UP
+	bool "Emulator Cortex-A9 Single Processor"
+	select GENERIC_KROME_IP
+	select MACH_KROME_A9UP
+	select EXECUTE_WITHOUT_UBOOT
+	select EXECUTE_ON_EMULATOR
+	help
+	  Enable support for the A9 single (uni) core platform in Veloce Emulator.
+
+config MACH_KROME_EMU_A9MP1
+	bool "Emulator Cortex-A9 MP1 Processor"
+	select GENERIC_KROME_IP
+	select MACH_KROME_A9MP
+	select MACH_KROME_A9MP1
+	select EXECUTE_WITHOUT_UBOOT
+	select EXECUTE_ON_EMULATOR
+	help
+	  Enable support for the Cortex-A9MPCore MP1 platform in a Veloce Emulator.
+
+config MACH_KROME_1SI_A9UP
+	bool "Cortex-A9 Single Processor"
+	select GENERIC_KROME_IP
+	select MACH_KROME_A9UP
+	select EXECUTE_ON_SILICON
+	help
+	  Enable support for the A9 single (uni) core platform.
+
+config MACH_KROME_1SI_A9MP1
+	bool "Cortex-A9 MP1 Processor"
+	select GENERIC_KROME_IP
+	select MACH_KROME_A9MP
+	select MACH_KROME_A9MP1
+	select EXECUTE_ON_SILICON
+	help
+	  Enable support for the Cortex-A9MPCore MP1 platform.
+
+config KROME_SPARSEMEM_ENABLE
+	bool "Krome Sparsemem Memory Map"
+	default y
+	select ARCH_SPARSEMEM_ENABLE
+	help
+	  As the 2 DDR controllers are not contigous, SPARSEMEM allows us to map our 
+	  Physical RAM effectively in Kernel virtual space.
+
+endmenu
+
+menu "Krome Platform Options"
+	depends on ARCH_KROME
+
+config KROME_SPLASH
+     bool "Krome Splash Screen"
+     select KROME_SPLASH_SCREEN
+     help
+        Enable the boot splash screen.
+
+endmenu
+
+
+# *************************************************************** #
+# None visible menu options where the platform is dependent upon. #
+# *************************************************************** #
+
+config GENERIC_KROME_IP
+	bool
+	select MACH_KROME
+	select CPU_V7
+	select CPU_32v7
+	select ARM_GIC
+	select SERIAL_CORE
+	select SERIAL_CORE_CONSOLE
+	select IP3106
+	select SERIAL_IP3106_CONSOLE
+	select ARCH_REQUIRE_GPIOLIB
+	select ARM_ERRATA_754322
+
+config SOC_PNX8492
+	bool
+	#depends on USB_SUPPORT
+	#select USB_ARCH_HAS_EHCI
+	#select USB_EHCI_HCD
+	#select USB_EHCI_IP9028
+	#select PCI
+	select PM
+
+config MACH_KROME
+	bool
+
+config MACH_KROME_A9UP
+	bool
+
+config MACH_KROME_A9MP
+	bool
+	select SMP
+
+config MACH_KROME_A9MP1
+	bool
+
+config MACH_KROME_A9MP2
+	bool
+
+config MACH_KROME_A9MP4
+	bool
+
+config EXECUTE_WITHOUT_UBOOT
+	bool
+
+config EXECUTE_ON_SIMULATOR
+	bool
+
+config EXECUTE_ON_EMULATOR
+	bool
+
+config EXECUTE_ON_SILICON
+	bool
+
+# ********************** EOF ******************************
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/krome.c linux-2.6.34/arch/arm/mach-krome/krome.c
--- linux-2.6.34_org/arch/arm/mach-krome/krome.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/krome.c	2011-10-10 18:01:07.253600000 +0530
@@ -0,0 +1,587 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd.
+ * All prior copyright rights in this work and the accompanying software
+ * products transferred to Trident Microsystems (Far East) Ltd. by written
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/init.h>
+#include <linux/device.h>
+#include <linux/platform_device.h>
+#include <linux/sysdev.h>
+#include <linux/dma-mapping.h>
+#include <linux/interrupt.h>
+#include <linux/clocksource.h>
+#include <linux/clockchips.h>
+#include <linux/io.h>
+#include <linux/serial.h>
+
+#include <asm/system.h>
+#include <asm/irq.h>
+#include <asm/setup.h>
+
+#include <asm/hardware/arm_timer.h>
+#include <asm/hardware/gic.h>
+#include <asm/hardware/cache-l2x0.h>
+
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/irq.h>
+#include <asm/mach/time.h>
+#include <asm/mach/map.h>
+
+#include <mach/pnx8492.h>
+#include <mach/globaltimer.h>
+#include <mach/hardware.h>
+#include <mach/core.h>
+#include <mach/irqs.h>
+
+#include <mach/nor.h>
+
+#ifdef CONFIG_APOLLO_SPLASH
+#include <mach/splash_logo.h>
+#endif
+
+#define ATAGLIST_MAX_WORDS 192
+#define SP_GP_03_OFFSET 0x281dc
+#define CHIP_ID_SHIFT 28
+#define CHIP_REV_SHIFT 20
+
+void __iomem *gic_cpu_base_addr;	/* used by entry-macro.S */
+unsigned long uKernelAtaglist[ATAGLIST_MAX_WORDS];
+static struct meminfo pnx8493_meminfo __initdata = { 0, };
+unsigned long ChipID=0;
+unsigned long ChipRevID=0;
+
+static struct map_desc apollo_io_desc[] __initdata = {
+	{
+		.virtual =  IO_ADDRESS(ARM_A9_HOST_MMIO_BASE),
+		.pfn	 = __phys_to_pfn(ARM_A9_HOST_MMIO_BASE),
+		.length	 = HOST_ARM_MMIO_APERTURE,
+		.type	 = MT_DEVICE
+	}, {
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_SCU_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_SCU_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	}, {
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_INTC_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_INTC_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	}, {
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_GLOB_TIMER_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_GLOB_TIMER_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	}, {
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_PRIV_TIMER_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_PRIV_TIMER_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	}, {
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_DISTR_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	},
+#ifdef CONFIG_CACHE_L2X0
+	{
+		.virtual =  IO_ADDRESS(APOLLO_CORTEX_A9_L2CACHE_BASE),
+		.pfn	 = __phys_to_pfn(APOLLO_CORTEX_A9_L2CACHE_BASE),
+		.length	 = SZ_4K,
+		.type	 = MT_DEVICE
+	},
+#endif
+};
+
+void __init apollo_map_io(void)
+{
+	printk (KERN_INFO "Early platform io descriptors mapping...\n");
+	iotable_init(apollo_io_desc, ARRAY_SIZE(apollo_io_desc));
+}
+
+void __init apollo_init_irq(void)
+{
+	unsigned long distr_vaddr = IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE);
+	unsigned long distr_paddr = APOLLO_CORTEX_A9_DISTR_BASE;
+	unsigned long gic_vaddr   = IO_ADDRESS(APOLLO_CORTEX_A9_INTC_BASE);
+	unsigned long gic_paddr   = APOLLO_CORTEX_A9_INTC_BASE;
+
+	gic_cpu_base_addr = (void *)IO_ADDRESS(APOLLO_CORTEX_A9_INTC_BASE);
+
+	printk(KERN_INFO "Initializing ARM GIC Distributor at "
+					 "Vir:0x%08X = Phy:0x%08X\n",
+					(unsigned int)distr_vaddr,
+					(unsigned int)distr_paddr);
+
+    gic_dist_init(0, (void *)distr_vaddr, 27);
+
+	printk(KERN_INFO "Initializing ARM GIC Cpu interfaces at "
+					 "Vir:0x%08X = Phy:0x%08X\n",
+					(unsigned int)gic_vaddr,
+					(unsigned int)gic_paddr);
+
+	gic_cpu_init(0, gic_cpu_base_addr);
+}
+
+static void apollo_timer_init(void)
+{
+	unsigned long vaddr = IO_ADDRESS(APOLLO_CORTEX_A9_GLOB_TIMER_BASE);
+	unsigned long paddr = APOLLO_CORTEX_A9_GLOB_TIMER_BASE;
+	unsigned long irq =   IRQ_A9_GLOB_TIMER;
+	unsigned long freq =  APOLLO_PERIPHERALS_FREQ;
+
+	printk(KERN_INFO "Initializing Cortex A9 Global Timer at Vir:0x%08X = Phy:0x%08X,"
+					 " using Irq:%i, at Freq:%i\n",
+					(unsigned int)vaddr,
+					(unsigned int)paddr,
+					(unsigned int)irq,
+					(unsigned int)freq);
+
+	apollo_global_timer_init(vaddr, irq, freq);
+}
+
+struct sys_timer apollo_timer = {
+	.init	= apollo_timer_init,
+};
+
+static u64 uart_dmamask = ~(u32)0;	/* The dmamask must be set for EHCI to work */
+
+#ifdef CONFIG_IP3106_UART0
+static struct resource uart0_resources[] = {
+	{
+		.start	= IP3106_UART_PORT_0,
+		.end	= IP3106_UART_PORT_0 + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= IRQ_UART_0,
+		.end	= IRQ_UART_0,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device uart0_device = {
+		.name			= "uart-ip3106",
+		.id			= 0,
+		.dev			= {
+		.platform_data		= NULL,
+		.dma_mask		= &uart_dmamask,
+		.coherent_dma_mask	= 0xffffffff,
+	},
+	.num_resources		= ARRAY_SIZE(uart0_resources),
+	.resource		= uart0_resources,
+};
+#endif
+
+#ifdef CONFIG_IP3106_UART1
+static struct resource uart1_resources[] = {
+	{
+		.start	= IP3106_UART_PORT_1,
+		.end	= IP3106_UART_PORT_1 + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= IRQ_UART_1,
+		.end	= IRQ_UART_1,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device uart1_device = {
+		.name			= "uart-ip3106",
+		.id			= 1,
+		.dev			= {
+		.platform_data		= NULL,
+		.dma_mask		= &uart_dmamask,
+		.coherent_dma_mask	= 0xffffffff,
+	},
+	.num_resources	= ARRAY_SIZE(uart1_resources),
+	.resource	= uart1_resources,
+};
+#endif
+
+#ifdef CONFIG_IP3106_UART2
+static struct resource uart2_resources[] = {
+	{
+		.start	= IP3106_UART_PORT_2,
+		.end	= IP3106_UART_PORT_2 + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= IRQ_UART_2,
+		.end	= IRQ_UART_2,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device uart2_device = {
+		.name			= "uart-ip3106",
+		.id			= 2,
+		.dev			= {
+		.platform_data		= NULL,
+		.dma_mask		= &uart_dmamask,
+		.coherent_dma_mask	= 0xffffffff,
+	},
+	.num_resources	= ARRAY_SIZE(uart2_resources),
+	.resource	= uart2_resources,
+};
+#endif
+
+#ifdef CONFIG_IP3106_UART3
+static struct resource uart3_resources[] = {
+	{
+		.start	= IP3106_UART_PORT_3,
+		.end	= IP3106_UART_PORT_3 + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= IRQ_UART_3,
+		.end	= IRQ_UART_3,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device uart3_device = {
+		.name			= "uart-ip3106",
+		.id			= 3,
+		.dev			= {
+		.platform_data		= NULL,
+		.dma_mask		= &uart_dmamask,
+		.coherent_dma_mask	= 0xffffffff,
+	},
+	.num_resources	= ARRAY_SIZE(uart3_resources),
+	.resource	= uart3_resources,
+};
+#endif
+
+#ifdef CONFIG_USB
+
+/*
+  * We have 2 USB resources in kronos: USB0, USB1
+  * USB0: 0xE066C000: it is USB2.0 OTG (host-device role switch)
+  * USB1: 0xE066D000: it is USB2.0 ALWAYS HOST
+  */
+static u64 ehci_dmamask = ~(u32)0;      /* The dmamask must be set for EHCI to work */
+
+static struct resource usb0_resources[] = {
+        [0] = {
+                .start  = IP9028_USB_PORT_0, 
+                .end            = IP9028_USB_PORT_0 + 0xfff,
+                .flags  = IORESOURCE_MEM,
+        },
+        [1] = {
+                .start  = IRQ_USB_0,
+                .end            = IRQ_USB_0,
+                .flags  = IORESOURCE_IRQ,
+        },
+};
+
+static struct platform_device usb0_device = {
+#ifdef CONFIG_USB_GADGET_IP9028
+            .name          = "ip9028_udc_udc", /* device mode, MUST to have 14-character name */
+#else
+            .name          = "usb-ip9028",     /* Host only dev. drv. */
+#endif
+                .id                     = 0,
+                .dev                    = {
+                .dma_mask               = &ehci_dmamask,
+                .coherent_dma_mask      = 0xffffffff,
+        },
+        .num_resources  = ARRAY_SIZE(usb0_resources),
+        .resource       = usb0_resources,
+};
+
+static struct resource usb1_resources[] = {
+        [0] = {
+                .start  = IP9028_USB_PORT_1,
+                .end            = IP9028_USB_PORT_1 + 0xfff,
+                .flags  = IORESOURCE_MEM,
+        },
+        [1] = {
+                .start  = IRQ_USB_1,
+                .end            = IRQ_USB_1,
+                .flags  = IORESOURCE_IRQ,
+        },
+};
+
+static struct platform_device usb1_device = {
+                .name                   = "usb-ip9028",
+                .id                     = 1,
+                .dev                    = {
+                .dma_mask               = &ehci_dmamask,
+                .coherent_dma_mask      = 0xffffffff,
+        },
+        .num_resources  = ARRAY_SIZE(usb1_resources),
+        .resource       = usb1_resources,
+};
+
+#endif /* CONFIG_USB */
+
+/* *************************************************************** */
+
+static struct platform_device *platform_devs[] __initdata = {
+#ifdef CONFIG_IP3106_UART0
+	&uart0_device,
+#endif
+#ifdef CONFIG_IP3106_UART1
+	&uart1_device,
+#endif
+#ifdef CONFIG_IP3106_UART2
+	&uart2_device,
+#endif
+#ifdef CONFIG_IP3106_UART3
+	&uart3_device,
+#endif
+#ifdef CONFIG_USB
+	&usb0_device,
+	&usb1_device,
+#endif
+};
+
+#ifdef CONFIG_CACHE_L2X0
+static int __init apollo_l2x0_init(void)
+{
+   if (machine_is_krome()) {
+      /*
+       * Data and Instruction prefetch,
+       * 128KB (16KB/way),
+       * 8-way associativity,
+       * Exclusive,
+                 * Zero enable
+       * Bits:  0011 0010 0000 0010 0001 0000 0000 0001
+       */
+      l2x0_init(__io_address(APOLLO_CORTEX_A9_L2CACHE_BASE),
+           0x32021001, 0xffffffff);
+
+      /* Change the ACTRL register to Exlusive, Zero Enable, L1 prefetch, L2 prefetch */
+                __asm__("mrc p15, 0, r12, c1, c0, 1\n\t"
+                        "orr r12, r12, #0x8e\n\t"
+                        "mcr p15, 0, r12, c1, c0, 1"
+                : : : "r12","cc", "memory");
+   }
+
+	return 0;
+}
+early_initcall(apollo_l2x0_init);
+#endif
+
+#if 0
+/* This function is used to get the chipid and chipRevId */
+static void cnxt_get_chip_rev_id(void)
+{
+    volatile unsigned long *pFuse;
+
+    /* Init the iotable as the mapping is still not there */
+    iotable_init(apollo_io_desc, 1);
+
+    /* Read the OTP register for Package ID and Rev ID */
+    pFuse = (unsigned long *)(ARM_A9_HOST_MMIO_BASE + SP_GP_03_OFFSET);
+
+    /* If the Fuse is not programmed assume Shiner M0 */
+    if(*pFuse == 0)
+    {
+	ChipID=CHIPID_SHINER_S;
+	ChipRevID=CHIP_REV_M0;
+    }
+    else
+    {
+       /* ChipID is bit 28 to 31 */
+       ChipID=(*pFuse&0xF0000000)>>CHIP_ID_SHIFT;
+
+       /* Chip Rev is bit 20 to 23 */
+       ChipRevID=(*pFuse&0x00F00000)>>CHIP_REV_SHIFT;
+    }
+
+    printk("ChipID=0x%lx ChipRevID=0x%lx\n",ChipID,ChipRevID);
+}
+#endif
+unsigned int GetChipRev (void)
+{
+    return ChipRevID;
+}
+
+unsigned int GetChipID (void)
+{
+    return ChipID;
+}
+
+void __init apollo_init(void)
+{
+#ifdef CONFIG_APOLLO_SPLASH
+   apollo_splash();
+#endif
+   printk (KERN_INFO "Adding platform devices...\n");
+   platform_add_devices(platform_devs, ARRAY_SIZE(platform_devs));
+}
+
+/*
+ * fixup function
+ */
+void __init apollo_fixup( struct machine_desc *pmach,
+			struct tag *ptag,
+			char **pptr,
+			struct meminfo *pmem)
+{
+
+   /* copy the ataglist to the global variable uKernelAtaglist */
+   memcpy( uKernelAtaglist, ptag, ATAGLIST_MAX_WORDS * 4 );
+
+   for (; ptag->hdr.size; ptag = tag_next(ptag))
+       if(ptag->hdr.tag == ATAG_MEM)
+       {
+           pnx8493_meminfo.bank[pnx8493_meminfo.nr_banks].start = ptag->u.mem.start;
+           pnx8493_meminfo.bank[pnx8493_meminfo.nr_banks].size = ptag->u.mem.size;
+           pnx8493_meminfo.bank[pnx8493_meminfo.nr_banks].node = 0;
+           pnx8493_meminfo.bank[pnx8493_meminfo.nr_banks].highmem = 0;
+           pnx8493_meminfo.nr_banks++;
+       }
+
+#if 0
+   cnxt_get_chip_rev_id();
+#endif
+   return;
+}
+
+u32 __initdata uARM926_start, uARM926_size=0;
+u32 __initdata uBIS_start, uBIS_size=0;
+u32 __initdata uADSP_start, uADSP_size=0;
+u32 __initdata uVDSP_start, uVDSP_size=0;
+u32 __initdata uMALONE_start, uMALONE_size=0;
+u32 __initdata uVRAMHD_start, uVRAMHD_size=0;
+u32 __initdata uVRAMSD_start, uVRAMSD_size=0;
+u32 __initdata uMBVPHD_start, uMBVPHD_size=0;
+u32 __initdata uMBVPSD_start, uMBVPSD_size=0;
+u32 __initdata uKALCSSGEN_start, uKALCSSGEN_size=0;
+u32 __initdata uKALCSSCON_start, uKALCSSCON_size=0;
+u32 __initdata uA9_ARM926_start, uA9_ARM926_size=0;
+u32 __initdata uARM926_TM_start, uARM926_TM_size=0;
+u32 __initdata uMBVP_stdi_start, uMBVP_stdi_size=0;
+
+static int __init parse_tag_memmap(const struct tag *tag)
+{
+	int i;
+
+	for(i=0;i<MAX_MEMMAP_TAGS;i++)
+	{
+        if((tag->u.memmap.pool_def[i].offset < 0) || (tag->u.memmap.pool_def[i].offset > pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].size))
+            continue;
+
+		switch (tag->u.memmap.pool_def[i].pool_type)
+		{
+			case 0:
+				uARM926_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uARM926_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 1:
+				uBIS_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uBIS_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 2:
+				uADSP_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uADSP_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 3:
+				uVDSP_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uVDSP_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 4:
+				uMALONE_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uMALONE_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 5:
+				uVRAMHD_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uVRAMHD_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 6:
+				uVRAMSD_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uVRAMSD_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 7:
+				uMBVPHD_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);;
+				uMBVPHD_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 8:
+				uMBVPSD_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uMBVPSD_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 9:
+				uKALCSSGEN_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uKALCSSGEN_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 0xa:
+				uKALCSSCON_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uKALCSSCON_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 0xb:
+				uA9_ARM926_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uA9_ARM926_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 0xc:
+				uARM926_TM_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uARM926_TM_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			case 0xd:
+				uMBVP_stdi_start = (pnx8493_meminfo.bank[tag->u.memmap.pool_def[i].bank].start)+(tag->u.memmap.pool_def[i].offset);
+				uMBVP_stdi_size = tag->u.memmap.pool_def[i].size;
+			break;
+
+			default:
+				printk(KERN_WARNING "Unknown pool type in ATAG List!!\n");
+				break;
+
+		}
+	}
+
+    return 0;
+}
+__tagtable(ATAG_MEMMAP, parse_tag_memmap);
+
+EXPORT_SYMBOL(uKernelAtaglist);
+EXPORT_SYMBOL(ChipID);
+EXPORT_SYMBOL(ChipRevID);
+EXPORT_SYMBOL(GetChipRev);
+EXPORT_SYMBOL(GetChipID);
+
+MACHINE_START(KROME, "Trident Krome STB platform")
+	.phys_io		= IO_START,
+	.io_pg_offst	= ((IO_OFFSET) >> 18) & 0xfffc,
+	.boot_params	= (int)NULL,
+	.map_io			= apollo_map_io,
+	.init_irq		= apollo_init_irq,
+	.timer			= &apollo_timer,
+	.init_machine	= apollo_init,
+	.fixup          = apollo_fixup,
+MACHINE_END
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/localtimer.c linux-2.6.34/arch/arm/mach-krome/localtimer.c
--- linux-2.6.34_org/arch/arm/mach-krome/localtimer.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/localtimer.c	2011-10-10 11:29:19.186458000 +0530
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/init.h>
+#include <linux/smp.h>
+#include <linux/clockchips.h>
+#include <asm/irq.h>
+#include <asm/smp_twd.h>
+#include <asm/localtimer.h>
+
+/*
+ * Setup the local clock events for a CPU.
+ */
+void __cpuinit local_timer_setup(struct clock_event_device *evt)
+{
+        evt->irq = IRQ_LOCALTIMER;
+        twd_timer_setup(evt);
+}
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/Makefile linux-2.6.34/arch/arm/mach-krome/Makefile
--- linux-2.6.34_org/arch/arm/mach-krome/Makefile	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/Makefile	2011-10-10 11:29:19.188458000 +0530
@@ -0,0 +1,43 @@
+#
+# Copyright 2010 Trident Microsystems (Far East) Ltd. 
+# All prior copyright rights in this work and the accompanying software 
+# products transferred to Trident Microsystems (Far East) Ltd. by written 
+# agreement.  All rights reserved.
+#
+#
+# Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+# Author: OKC <okc.helpdesk@nxp.com>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+#
+
+#
+# Object file lists for the linux kernel.
+#
+obj-y					:= krome.o globaltimer.o
+obj-$(CONFIG_KROME_SPLASH)             += splash_logo.o
+obj-$(CONFIG_SMP)			+= platsmp.o headsmp.o localtimer.o
+obj-$(CONFIG_PCI)			+= pci.o
+obj-$(CONFIG_PM)			+= pm.o sleep.o
+obj-$(CONFIG_HOTPLUG_CPU) 		+= hotplug.o
+obj-$(CONFIG_LIPP_6300ETH)		+= ethernet.o
+obj-$(CONFIG_NX_DMAC_1902)		+= nx_dmac_1902_dev.o
+obj-$(CONFIG_MMC_SDHCI_NX_SDIOMC)	+= nx_sdiomc_dev.o
+obj-$(CONFIG_SPI)			+= nx_spi_dev.o
+obj-$(CONFIG_GPIO_APOLLO)		+= gpio.o
+obj-$(CONFIG_MTD_NX_NAND)               += nand.o gcs_dmac.o gcs.o
+obj-$(CONFIG_MTD_APOLLO_NOR)            += nor.o gcs_dmac.o gcs.o
+obj-$(CONFIG_MTD_NX_SFC)                += sfc.o gcs_dmac.o gcs.o
+obj-$(CONFIG_RTC_DRV_APOLLO)		+= rtc.o
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/Makefile.boot linux-2.6.34/arch/arm/mach-krome/Makefile.boot
--- linux-2.6.34_org/arch/arm/mach-krome/Makefile.boot	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/Makefile.boot	2011-10-10 11:29:19.190460000 +0530
@@ -0,0 +1,2 @@
+   zreladdr-y	:= 0x00008000
+params_phys-y	:= 0x00002000
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/nand.c linux-2.6.34/arch/arm/mach-krome/nand.c
--- linux-2.6.34_org/arch/arm/mach-krome/nand.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/nand.c	2011-10-10 11:29:19.192460000 +0530
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <mach/nand.h>
+#include <linux/io.h>
+ 
+static struct resource apollo_ip2017_resources[] = {
+	{
+		.start		= APOLLO_IP2017_BASE,
+		.end		= (APOLLO_IP2017_BASE + APOLLO_IP2017_LEN - 1),
+		.flags		= IORESOURCE_MEM,
+	},
+	{
+		.start		= APOLLO_INT_FLASH_CTRL_NAND,
+		.end		= APOLLO_INT_FLASH_CTRL_NAND,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static uint64_t apollo_2017_dma_mask = ~(uint32_t)0;
+static struct platform_device apollo_ip2017_device = {
+	.name		= "nx_2017",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(apollo_ip2017_resources),
+	.resource	= apollo_ip2017_resources,
+	.dev = {
+		.dma_mask = &apollo_2017_dma_mask,
+		.coherent_dma_mask = 0xFFFFFFFF,
+	},
+};
+
+static int __init apollo_nand_init(void)
+{
+	return platform_device_register (&apollo_ip2017_device);
+}
+arch_initcall(apollo_nand_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/nor.c linux-2.6.34/arch/arm/mach-krome/nor.c
--- linux-2.6.34_org/arch/arm/mach-krome/nor.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/nor.c	2011-10-10 11:29:19.194458000 +0530
@@ -0,0 +1,73 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/physmap.h>
+#include <mach/nor.h>
+#include <linux/io.h>
+#include <mach/gcs_dmac.h>
+ 
+static struct resource apollo_ip2016_resources[] = {
+    {
+        .start      = APOLLO_IP2016_BASE,
+        .end        = (APOLLO_IP2016_BASE + APOLLO_IP2016_LEN - 1),
+        .flags      = IORESOURCE_MEM,
+    },
+    {
+        .start		= APOLLO_NOR_BASE,
+        .end		= (APOLLO_NOR_BASE + APOLLO_NOR_LEN -1),
+        .flags		= IORESOURCE_MEM,
+    },
+    {
+        .start		= APOLLO_GCS_DMAC_BASE,
+        .end		= (APOLLO_GCS_DMAC_BASE + APOLLO_GCS_DMAC_LEN - 1),
+        .flags		= IORESOURCE_MEM,
+    },
+};
+
+/*
+ * Apolo NOR Configuration.
+ */
+static struct physmap_flash_data nx_nor_data = {
+    .width      = 2,
+};
+
+static uint64_t apollo_2016_dma_mask = ~(uint32_t)0;
+static struct platform_device apollo_ip2016_device = {
+    .name           = "nx_2016",
+    .id             = -1,
+    .num_resources  = ARRAY_SIZE(apollo_ip2016_resources),
+    .resource       = apollo_ip2016_resources,
+    .dev            = {
+                       .platform_data  = &nx_nor_data,
+                       .dma_mask = &apollo_2016_dma_mask,
+                       .coherent_dma_mask = 0xFFFFFFFF,
+                      },
+};
+
+static int __init apollo_nor_init(void)
+{
+    void __iomem *base=NULL;
+
+    /**
+     * FIXME: This configuration must come from bootloader
+     */
+    base = (void*)apollo_ip2016_resources[0].start;
+
+    /* IP_2016 Settings */
+    /* setup IP_2016 */
+    writel(0x01, base + 0x000);         /* width=16-bit for AM29LV641DL90**, async mode */
+    
+    writel(0x00022495, base + 0x004);   /* read-timing register. Keep it maximum */
+    writel(0x00022495, base + 0x008);   /* write-timing register. Keep it maximum */
+   
+    return platform_device_register (&apollo_ip2016_device);
+ }
+
+arch_initcall(apollo_nor_init);
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/nx_dmac_1902_dev.c linux-2.6.34/arch/arm/mach-krome/nx_dmac_1902_dev.c
--- linux-2.6.34_org/arch/arm/mach-krome/nx_dmac_1902_dev.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/nx_dmac_1902_dev.c	2011-10-10 11:29:19.196461000 +0530
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver for DMA Controller IP_1902
+ *
+ * Copyright (C) 2009 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author                   Date          Remarks
+ * 0.0.1		Mahadev K Cholachagudda  20090528     Draft-Initial version
+ *
+ */
+
+
+#include <linux/init.h>
+#include <linux/device.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <mach/nx_dmac_1902_dev.h>
+
+static struct resource dmac_1902_acp_resources[] = {
+	[0] = {
+		.start		= APOLLO_DMAC_1902_ACP_BASE,
+		.end		= (APOLLO_DMAC_1902_ACP_BASE + APOLLO_DMAC_1902_ACP_LEN - 1),
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= APOLLO_INT_DMAC_1902_ACP,
+		.end		= APOLLO_INT_DMAC_1902_ACP,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+u64 dmac_1902_acp_dmamask = ~(u32)0;
+struct platform_device dmac_1902_acp_device = {
+	.name		= "nx_dmac_1902",
+	.id		= 1,
+	.dev = {
+		.dma_mask = &dmac_1902_acp_dmamask,
+	},
+	.num_resources	= ARRAY_SIZE(dmac_1902_acp_resources),
+	.resource	= dmac_1902_acp_resources,
+};
+
+EXPORT_SYMBOL(dmac_1902_acp_device);
+
+#ifdef CONFIG_SPI_NX_DMAC_1902
+static struct resource dmac_1902_uart_spi_resources[] = {
+	[0] = {
+		.start		= APOLLO_DMAC_1902_UART_SPI_BASE,
+		.end		= (APOLLO_DMAC_1902_UART_SPI_BASE + APOLLO_DMAC_1902_UART_SPI_LEN - 1),
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= APOLLO_INT_DMAC_1902_UART_SPI,
+		.end		= APOLLO_INT_DMAC_1902_UART_SPI,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+u64 dmac_1902_uart_spi_dmamask = ~(u32)0;
+struct platform_device dmac_1902_uart_spi_device = {
+	.name		= "nx_dmac_1902",
+	.id		= 2,
+	.dev = {
+		.dma_mask = &dmac_1902_uart_spi_dmamask,
+	},
+	.num_resources	= ARRAY_SIZE(dmac_1902_uart_spi_resources),
+	.resource	= dmac_1902_uart_spi_resources,
+};
+#endif
+
+static struct platform_device *apollo_dmac_1902_platform_devs[] __initdata = {
+	&dmac_1902_acp_device,
+#ifdef CONFIG_SPI_NX_DMAC_1902
+	&dmac_1902_uart_spi_device
+#endif
+};
+
+static int __init apollo_dmac_1902_init(void)
+{
+	return platform_add_devices(apollo_dmac_1902_platform_devs, ARRAY_SIZE(apollo_dmac_1902_platform_devs));
+}
+
+arch_initcall(apollo_dmac_1902_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/nx_sdiomc_dev.c linux-2.6.34/arch/arm/mach-krome/nx_sdiomc_dev.c
--- linux-2.6.34_org/arch/arm/mach-krome/nx_sdiomc_dev.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/nx_sdiomc_dev.c	2011-10-10 11:29:19.198463000 +0530
@@ -0,0 +1,97 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Device driver SD/SDIO/MMC controller IP_3413
+ *
+ * Copyright (C) 2008 NXP B.V.
+ * All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Revision history
+ * Version  	Author                   Date          Remarks
+ * 0.0.1		Mahadev K Cholachagudda  20090216     Draft-Initial version
+ *
+ */
+
+#include <linux/init.h>
+#include <linux/device.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <mach/nx_sdiomc_dev.h>
+#include <mach/gcs.h>
+
+static struct resource apollo_sdiomc_resources[] = {
+	[0] = {
+		.start		= APOLLO_SDIOMC_BASE,
+		.end		  = (APOLLO_SDIOMC_BASE + APOLLO_SDIOMC_LEN - 1),
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= APOLLO_INT_SDIOMC,
+		.end		  = APOLLO_INT_SDIOMC,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+u64 apollo_sdiomc_dmamask = ~(u32)0;
+static struct nx_sdiomc_platform_data apollo_sdiomc_data = {
+  .num_slots = 1,
+};
+
+static struct platform_device apollo_sdiomc_device = {
+	.name		= "nx_sdiomc",
+	.id		= 0,
+  .dev = {
+    .dma_mask = &apollo_sdiomc_dmamask,
+    .platform_data = &apollo_sdiomc_data,
+  },
+	.num_resources = ARRAY_SIZE(apollo_sdiomc_resources),
+	.resource	= apollo_sdiomc_resources,
+};
+
+static struct platform_device *apollo_sdiomc_platform_devs[] __initdata = {
+	&apollo_sdiomc_device,
+};
+
+static void __init apollo_sdiomc_pin_mux_init(void)
+{
+   unsigned int val;
+
+   /* Determine the pin mux setting based on Kernel Config options */
+   
+   /* Setup the Alt Reg 0 for SDIO Card Detect */
+   val = readl(0xE06BB140);
+   val |= 0x48800020 ;
+   writel(val, 0xE06BB140);
+
+  /* TODO : Determine the value for other Mux setting */
+}
+
+static int __init apollo_sdiomc_init(void)
+{
+   /* Initialize the pin mux */
+   apollo_sdiomc_pin_mux_init();
+
+   return platform_add_devices(apollo_sdiomc_platform_devs, ARRAY_SIZE(apollo_sdiomc_platform_devs));
+}
+
+#ifdef CONFIG_MMC_SDHCI_NX_SDIOMC
+arch_initcall(apollo_sdiomc_init);
+#endif
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/nx_spi_dev.c linux-2.6.34/arch/arm/mach-krome/nx_spi_dev.c
--- linux-2.6.34_org/arch/arm/mach-krome/nx_spi_dev.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/nx_spi_dev.c	2011-10-10 11:29:19.200463000 +0530
@@ -0,0 +1,154 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2009 (C) NXP BV, All Rights Reserved
+ * Author: Sangeeta Mutgi <sangeeta.mutgi@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#include <linux/platform_device.h>
+#include <linux/init.h>
+#include <mach/nx_spi_dev.h>
+
+#ifdef CONFIG_SPI_NX_DMAC_1902
+#include <linux/nx_dmac_1902.h>
+#endif
+
+
+/* SPI DMA slave related data */
+#ifdef CONFIG_SPI_NX_DMAC_1902
+extern struct platform_device dmac_1902_uart_spi_device;
+
+static struct  nx_dmac_1902_slave nx_spi_dmac_slv_plfdata[] = {
+ { /* TX peripheral */
+       .slave = {
+                .dma_dev = &dmac_1902_uart_spi_device.dev,
+                },
+       .src_per_num = 0, //Memory
+       .dst_per_num = 1, //TX request peripheral num
+       .src_burst = nx_dmac_1902_burst_1,
+       .dst_burst = nx_dmac_1902_burst_1,
+       .src_incr  = 1, //mem
+       .dst_incr  = 0, //Fifo
+       .flow_cntrl = nx_dmac_1902_fcntl_DMA_M_to_P,
+       .src_select = nx_dmac_1902_ahb_master_1,
+       .dst_select = nx_dmac_1902_ahb_master_2,
+       .src_width = DMA_SLAVE_WIDTH_8BIT,
+       .dst_width = DMA_SLAVE_WIDTH_8BIT,
+  },
+  {/* RX peripheral */
+       .slave = {
+                .dma_dev = &dmac_1902_uart_spi_device.dev,
+                },
+       .src_per_num = 0,//RX request peripheral num
+       .dst_per_num = 0, //Memory
+       .src_burst = nx_dmac_1902_burst_1,
+       .dst_burst = nx_dmac_1902_burst_1,
+       .src_incr  = 0, //fifo
+       .dst_incr  = 1, //mem
+       .flow_cntrl = nx_dmac_1902_fcntl_DMA_P_to_M,
+       .src_select = nx_dmac_1902_ahb_master_2,
+       .dst_select = nx_dmac_1902_ahb_master_1,
+       .src_width = DMA_SLAVE_WIDTH_8BIT,
+       .dst_width = DMA_SLAVE_WIDTH_8BIT,
+   }
+
+ /* Add more for other SPI units */
+};
+
+#endif
+
+static struct spi_board_info nx_spi_devices_platformdata[] = {
+{/* device info on Apollo board*/
+	.modalias   = "spidev",
+	.chip_select    = 0,
+	.max_speed_hz   = 100000,
+	.bus_num    = 0,
+	.mode = SPI_3WIRE,
+	},
+	/* Fill more devices if any*/
+};
+/* to indicate if this spi is DMA capable. prgm 0 if no-DMA*/
+static u64 spi_dmamask = ~(uint32_t)0;
+
+static struct resource spi_resources[] = {
+	[0] = {
+	.start  = NX_SPI_BASE_SPI0,
+	.end    = NX_SPI_BASE_SPI0 + SZ_4K - 1,
+	.flags  = IORESOURCE_MEM,
+	},
+	[1] = {
+	.start  = IRQ_SPI0,
+	.end    = IRQ_SPI0,
+	.flags  = IORESOURCE_IRQ,
+	},
+	/* Add if more SPI units*/
+};
+
+/* SPI Controller specific data*/
+static struct nx_spi_controller_data nx_spictrldata = {
+	.tx_int_threshold = 4,
+	.rx_int_threshold = 1,
+	.dma_tx_burst = 4,
+	.dma_rx_burst = 4,
+	.spi_ip_clk = 50000000,
+	.txchan_num = 0,
+	.rxchan_num = 1,
+};
+
+
+/* Enacapsulate both "spi_board_info" & "nx_dmac_1902_slave" here*/
+static struct nx_spi_platform_data nx_spi_platformdata[] = {
+	{ /* for a SPI unit*/
+#ifdef CONFIG_SPI_NX_DMAC_1902
+	.slave_tx = &nx_spi_dmac_slv_plfdata[0],
+	.slave_rx = &nx_spi_dmac_slv_plfdata[1],
+#else
+	.slave_tx = 0,
+	.slave_rx = 0,
+#endif
+	.spi_devices = nx_spi_devices_platformdata,
+	.plfdatasize = sizeof(nx_spi_devices_platformdata)/sizeof(nx_spi_devices_platformdata[0]),
+	},
+	/*add more for other SPI units*/
+};
+
+static struct platform_device nx_spi_device = {
+	.name       = "nx_spi",
+	.id     = 0, //bus_num
+	.dev        = {
+		.dma_mask       = &spi_dmamask,
+		.coherent_dma_mask  = ~0UL,
+		.platform_data = &nx_spi_platformdata[0],
+	},
+	.resource   = spi_resources,
+	.num_resources  = ARRAY_SIZE(spi_resources),
+};
+
+static struct platform_device* apollo_spi_platform_devs[] __initdata = {
+ &nx_spi_device
+};
+
+static int __init apollo_spi_init(void)
+{
+	dev_set_drvdata(&nx_spi_device.dev,&nx_spictrldata);
+	return platform_add_devices(apollo_spi_platform_devs, ARRAY_SIZE(apollo_spi_platform_devs));
+
+}
+arch_initcall(apollo_spi_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/pci.c linux-2.6.34/arch/arm/mach-krome/pci.c
--- linux-2.6.34_org/arch/arm/mach-krome/pci.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/pci.c	2011-10-10 11:29:19.203459000 +0530
@@ -0,0 +1,530 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/slab.h>
+#include <linux/ioport.h>
+#include <linux/interrupt.h>
+#include <linux/spinlock.h>
+#include <linux/init.h>
+#include <linux/io.h>
+#include <linux/delay.h>
+
+#include <mach/pnx8492.h>
+#include <mach/memory.h>
+#include <mach/hardware.h>
+#include <mach/irqs.h>
+#include <mach/pci.h>
+
+#include <asm/irq.h>
+#include <asm/system.h>
+#include <asm/mach/pci.h>
+
+static inline void clear_status(void)
+{
+   unsigned long pci_stat;
+
+   pci_stat = __raw_readl(PCI_GPPM_STATUS);
+   __raw_writel(pci_stat, PCI_GPPM_ICLR);
+}
+
+static inline unsigned int
+calc_cfg_addr(struct pci_bus *bus, unsigned int devfn, int where)
+{
+   unsigned int addr;
+
+   addr = ((bus->number > 0) ? (((bus->number & 0xff) << PCI_CFG_BUS_SHIFT) | 1) : 0);
+   addr |= ((devfn & 0xff) << PCI_CFG_FUNC_SHIFT) | (where & 0xfc);
+
+   return addr;
+}
+
+static int
+config_access(unsigned int pci_cmd, struct pci_bus *bus, unsigned int devfn, 
+int where, unsigned int pci_mode, unsigned int *val)
+{
+   unsigned long ioaddr = calc_cfg_addr(bus, devfn, where);
+   long loops = 0;
+
+   /* Clear pending interrupt status */
+   if (__raw_readl(PCI_GPPM_STATUS)) {
+      clear_status();
+      while (!(__raw_readl(PCI_GPPM_STATUS) == 0)) ;
+   }
+
+   __raw_writel(ioaddr, PCI_GPPM_ADDR);
+
+   if ((pci_cmd == PCI_CMD_IOW) || (pci_cmd == PCI_CMD_CONFIG_WRITE))
+      __raw_writel(*val, PCI_GPPM_WDAT);
+
+   __raw_writel(INIT_PCI_CYCLE | pci_cmd | (pci_mode & PCI_BYTE_ENABLE_MASK),
+        PCI_GPPM_CTRL);
+
+   loops =
+       ((loops_per_jiffy *
+         PCI_IO_JIFFIES_TIMEOUT) >> (PCI_IO_JIFFIES_SHIFT));
+   while (1) {
+      if (__raw_readl(PCI_GPPM_STATUS) & GPPM_DONE) {
+         if ((pci_cmd == PCI_CMD_IOR) ||(pci_cmd == PCI_CMD_CONFIG_READ))
+            *val = __raw_readl(PCI_GPPM_RDAT);
+         clear_status();
+         return PCIBIOS_SUCCESSFUL;
+      } else if (__raw_readl(PCI_GPPM_STATUS) & GPPM_R_MABORT) {
+         break;
+      } else if (__raw_readl(PCI_GPPM_STATUS) & GPPM_R_TABORT) {
+         printk(KERN_ERR "PCI: %s: GPPM Target Abort (sta=0x%x, cmd=0x%x, addr=0x%lx).\n", 
+            __FUNCTION__, __raw_readl(PCI_GPPM_STATUS), pci_cmd, ioaddr);
+         break;
+      } else if  (__raw_readl(PCI_GPPM_STATUS) & GPPM_ERR) {
+         printk(KERN_ERR "PCI: %s: GPPM Error (sta=0x%x, cmd=0x%x, addr=0x%lx).\n", 
+            __FUNCTION__, __raw_readl(PCI_GPPM_STATUS), pci_cmd, ioaddr);
+         break;
+      }
+
+      loops--;
+      if (loops == 0) {
+         printk(KERN_ERR "PCI: %s: Arbiter Locked (sta=0x%x, cmd=0x%x, addr=0x%lx).\n", 
+            __FUNCTION__, __raw_readl(PCI_GPPM_STATUS), pci_cmd, ioaddr);
+         BUG();
+     }
+   }
+
+   clear_status();
+   if ((pci_cmd == PCI_CMD_IOR) || (pci_cmd == PCI_CMD_IOW)) {
+      printk(KERN_ERR "PCI: %s timeout (GPPM_CTRL=%X) ioaddr %X pci_cmd %X\n",
+            __FUNCTION__, __raw_readl(PCI_GPPM_CTRL), (int) ioaddr, pci_cmd);
+   }
+
+   if ((pci_cmd == PCI_CMD_IOR) || (pci_cmd == PCI_CMD_CONFIG_READ))
+      *val = 0xffffffff;
+
+   return PCIBIOS_DEVICE_NOT_FOUND;
+}
+
+/*
+ * We can't address 8 and 16 bit words directly.  Instead we have to
+ * read/write a 32bit word and mask/modify the data we actually want.
+ */
+static int
+read_config_byte(struct pci_bus *bus, unsigned int devfn, int where, u8 * val)
+{
+   unsigned int data = 0;
+   int err;
+
+   if (bus == 0)
+      return -1;
+
+   err = config_access(PCI_CMD_CONFIG_READ, bus, devfn, where, ~(1 << (where & 3)), &data);
+   switch (where & 0x03) {
+   case 0:
+      *val = (unsigned char)(data & 0x000000ff);
+      break;
+   case 1:
+      *val = (unsigned char)((data & 0x0000ff00) >> 8);
+      break;
+   case 2:
+      *val = (unsigned char)((data & 0x00ff0000) >> 16);
+      break;
+   case 3:
+      *val = (unsigned char)((data & 0xff000000) >> 24);
+      break;
+   }
+
+   return err;
+}
+
+static int
+read_config_word(struct pci_bus *bus, unsigned int devfn, int where, u16 * val)
+{
+   unsigned int data = 0;
+   int err;
+
+   if (bus == 0)
+      return -1;
+
+   if (where & 0x01)
+      return PCIBIOS_BAD_REGISTER_NUMBER;
+
+   err = config_access(PCI_CMD_CONFIG_READ, bus, devfn, where, ~(3 << (where & 3)), &data);
+   switch (where & 0x02) {
+   case 0:
+      *val = (unsigned short)(data & 0x0000ffff);
+      break;
+   case 2:
+      *val = (unsigned short)((data & 0xffff0000) >> 16);
+      break;
+   }
+
+   return err;
+}
+
+static int
+read_config_dword(struct pci_bus *bus, unsigned int devfn, int where, u32 *val)
+{
+   int err;
+   if (bus == 0)
+      return -1;
+
+   if (where & 0x03)
+      return PCIBIOS_BAD_REGISTER_NUMBER;
+
+   err = config_access(PCI_CMD_CONFIG_READ, bus, devfn, where, 0, val);
+
+   return err;
+}
+
+static int
+write_config_byte(struct pci_bus *bus, unsigned int devfn, int where, u8 val)
+{
+   unsigned int data = (unsigned int)val;
+   int err = -1;
+
+   if (bus == 0)
+      return -1;
+
+   switch (where & 0x03) {
+   case 1:
+      data = (data << 8);
+      break;
+   case 2:
+      data = (data << 16);
+      break;
+   case 3:
+      data = (data << 24);
+      break;
+   default:
+      break;
+   }
+
+   err = config_access(PCI_CMD_CONFIG_WRITE, bus, devfn, where, ~(1 << (where & 3)), &data);
+
+   return err;
+}
+
+static int
+write_config_word(struct pci_bus *bus, unsigned int devfn, int where, u16 val)
+{
+   unsigned int data = (unsigned int)val;
+   int err;
+
+   if (bus == 0)
+      return -1;
+
+   if (where & 0x01)
+      return PCIBIOS_BAD_REGISTER_NUMBER;
+
+   switch (where & 0x02) {
+   case 2:
+      data = (data << 16);
+      break;
+   default:
+      break;
+   }
+   err = config_access(PCI_CMD_CONFIG_WRITE, bus, devfn, where, ~(3 << (where & 3)), &data);
+
+   return err;
+}
+
+static int
+write_config_dword(struct pci_bus *bus, unsigned int devfn, int where, u32 val)
+{
+   int err;
+   if (bus == 0)
+      return -1;
+
+   if (where & 0x03)
+      return PCIBIOS_BAD_REGISTER_NUMBER;
+
+   err = config_access(PCI_CMD_CONFIG_WRITE, bus, devfn, where, 0, &val);
+
+   return err;
+}
+
+static int config_read(struct pci_bus *bus, unsigned int devfn, int where, 
+int size, u32 * val)
+{
+   switch (size) {
+   case 1: {
+         u8 uninitialized_var(_val);
+         int rc = read_config_byte(bus, devfn, where, &_val);
+         *val = _val;
+         return rc;
+      }
+       case 2: {
+         u16 uninitialized_var(_val);
+         int rc = read_config_word(bus, devfn, where, &_val);
+         *val = _val;
+         return rc;
+      }
+   default:
+      return read_config_dword(bus, devfn, where, val);
+   }
+}
+
+static int config_write(struct pci_bus *bus, unsigned int devfn, int where, 
+int size, u32 val)
+{
+   int rc = 0;
+   switch (size) {
+   case 1:
+      rc = write_config_byte(bus, devfn, where, (u8) val);
+      break;
+   case 2:
+      rc = write_config_word(bus, devfn, where, (u16) val);
+      break;
+   default:
+      rc = write_config_dword(bus, devfn, where, val);
+      break;
+   }
+   return rc;
+}
+
+static struct pci_ops apollo_pci_ops = {
+   .read    = config_read,
+   .write   = config_write,
+};
+
+static struct resource pci_mem = {
+   .name    = "PCI memory space",
+   .start   = APOLLO_PCI_MEM_BASE_0,
+   .end     = APOLLO_PCI_MEM_BASE_0 + APOLLO_PCI_MEM_BASE_0_SIZE - 1,
+   .flags   = IORESOURCE_MEM,
+};
+
+static struct resource pci_io = {
+   .name    = "PCI I/O space",
+   .start   = APOLLO_PCI_MEM_BASE_1,
+   .end     = APOLLO_PCI_MEM_BASE_1 + APOLLO_PCI_MEM_BASE_1_SIZE - 1,
+   .flags   = IORESOURCE_IO,
+};
+
+static int __init apollo_pci_setup_resources(struct resource **resource)
+{
+   int ret = 0;
+   u32 io_len;
+   void * __iomem io_base;
+
+   ret = request_resource(&iomem_resource, &pci_mem);
+   if (ret) {
+      printk(KERN_ERR "PCI: unable to allocate "
+             "memory region (%d)\n", ret);
+      goto out;
+   }
+   ret = request_resource(&ioport_resource, &pci_io);
+   if (ret) {
+      printk(KERN_ERR "PCI: unable to allocate "
+             "IO region (%d)\n", ret);
+      goto release_pci_mem;
+   }
+
+   io_len = pci_io.end - pci_io.start + 1;
+   io_base = ioremap(pci_io.start, io_len);
+   if (io_base == NULL) {
+      printk(KERN_ERR "PCI: unable to ioremap "
+            "IO region (%d)\n", ret);
+      goto release_pci_io;
+   }
+   
+   pci_io.start = (resource_size_t) io_base;
+   pci_io.end = (resource_size_t) (io_base + io_len - 1);
+   
+   printk("PCI: Mapped I/O : 0x%08X & Memory : 0x%08X resources.\n",\
+      pci_io.start, pci_mem.start);
+
+   /*
+    * bus->resource[0] is the mem resource for this bus
+    * bus->resource[1] is the I/O resource for this bus
+    */
+   resource[0] = &pci_mem;
+   resource[1] = &pci_io;
+   resource[2] = NULL;
+
+   goto out;
+
+release_pci_io:
+   release_resource(&pci_io);
+release_pci_mem:
+   release_resource(&pci_mem);
+out:
+   return ret;
+}
+
+int __init apollo_pci_setup(int nr, struct pci_sys_data *sys)
+{
+   int ret =  0;
+
+   if (nr == 0) 
+   {
+      sys->mem_offset = 0;
+      ret = apollo_pci_setup_resources(sys->resource);
+      if (ret < 0) 
+      {
+         printk("apollo_pci_setup: resources... oops?\n");
+         goto out;
+      }
+   } 
+   else 
+   {
+      printk("apollo_pci_setup: resources... nr == 0??\n");
+      goto out;
+   }
+
+   /*
+    *  We need to discover the PCI core first to configure itself
+    *  before the main PCI probing is performed
+    */
+   printk("PCI core found: dev-id:0x%X vendor-id:0x%X \n",\
+      (__raw_readl(APOLLO_PCI_CORE_BASE + 0x40)>>16)&0xFFFF,\
+      __raw_readl(APOLLO_PCI_CORE_BASE + 0x40)&0xFFFF);
+
+   ret = 1;
+
+ out:
+   return ret;
+}
+
+struct pci_bus *apollo_pci_scan_bus(int nr, struct pci_sys_data *sys)
+{
+   return pci_scan_bus(sys->busnr, &apollo_pci_ops, sys);
+}
+
+void __init apollo_pci_preinit(void)
+{
+   u32 val;
+
+   /* Bring PCI out of reset (APOLLO PRCR 902 - M1 ECO) */
+   val = __raw_readl(GLBREG_MISC1);
+   val |= (1<<31);
+   __raw_writel(val, GLBREG_MISC1);
+
+   /* Enable PCI mode in RGU */
+   val = __raw_readl(RST_CONFIG_REG);        /* Chip Config register */
+   val = val & 0xFFFEFFFF;                   /* Set PCI mode         */
+   val = val | 0x00800000;                   /* Set Host bridge mode */
+   __raw_writel(val, RST_CONFIG_REG);
+
+   /* Driving alt30_pcirgc2 and alt29_pcirg1. */
+   val = __raw_readl(ALT_PIN_MUX_REG_0);
+   val |= 0x60002000;
+   __raw_writel(val, ALT_PIN_MUX_REG_0);
+
+   /* Unlock PCI setup register */
+   __raw_writel(0xCA, PCI_UNLOCKREG);
+
+   /* Configure PCI setup register */
+   __raw_writel(0x0CCF7F83, PCI_SETUP);
+   
+   /* Configure PCI control register */
+   /* __raw_writel(0x000e3245, PCI_CTRL); */
+   val = __raw_readl(PCI_CTRL);
+   /* Enable internal system arbiter to park on itself */
+   val |= 1<<17;
+   __raw_writel(val, PCI_CTRL);
+   
+   /* Configure cache line size (in dwords) */
+   val = __raw_readl(PCI_LAT_TMR);
+   val &= ~0xFF;
+   val |= (L1_CACHE_BYTES>>2); /*8 dwords*/
+   __raw_writel(val, PCI_LAT_TMR);
+
+   /* Configure PCI slave DTL tuning */
+   val = __raw_readl(PCI_SLVTUNING);
+   val &= ~0x7;
+   val |= 0x7; 
+   __raw_writel(val, PCI_SLVTUNING);
+
+   /* Enable all GPPM interrupts */
+   __raw_writel(0xFFFFFFFF, PCI_GPPM_IMASK);
+
+   /* Clear all GPPM interrupts */
+   __raw_writel(0xFFFFFFFF, PCI_GPPM_ICLR);
+
+   /* Configure PCI base1 Lo register */
+   __raw_writel(APOLLO_PCI_MEM_BASE_0_LO, PCI_BASE_0_LO);
+
+   /* Configure PCI base1 Hi register */
+   __raw_writel(APOLLO_PCI_MEM_BASE_0_HI, PCI_BASE_0_HI);
+
+   /* Configure PCI base2 Lo register */
+   __raw_writel(APOLLO_PCI_MEM_BASE_1_LO, PCI_BASE_1_LO);
+
+   /* Configure PCI base2 Hi register */
+   __raw_writel(APOLLO_PCI_MEM_BASE_1_HI, PCI_BASE_1_HI);
+
+   /* Send PCI_BASE2 as memory transactions */
+   __raw_writel(0x00000001, PCI_IO);
+
+   /* Configure PCI base address 10 register */
+   __raw_writel(0x20000000, PCI_BASE10);
+
+   /* Configure PCI base address 14 register */
+   __raw_writel(0x00000000, PCI_BASE14);
+
+   /* Enables remapping of base 10 and base 14 */
+   __raw_writel(0x0, PCI_ADDR_REMAP_ENABLE);
+
+   __raw_writel(0x0, PCI_SUBSYS_ID);
+
+   /* Write CMD reg to enable Master and Memory Space */
+   val = __raw_readl(PCI_CFG_CMDSTAT);
+   val = val | 0x6;
+   __raw_writel(val, PCI_CFG_CMDSTAT);
+}
+
+/*
+ * map the specified device/slot/pin to an IRQ. Different backplanes may need to modify this.
+ */
+static int __init apollo_map_irq(struct pci_dev *dev, u8 slot, u8 pin)
+{
+   int irq;
+   int devslot = PCI_SLOT(dev->devfn);
+
+   irq = IRQ_PCI_IN;
+
+   printk("PCI: map irq: slot %d, pin %d, devslot %d, irq: %d\n",
+      slot,pin,devslot,irq);
+
+   return irq;
+}
+
+static struct hw_pci apollo_pci __initdata = {
+   .swizzle          = NULL,
+   .map_irq          = apollo_map_irq,
+   .nr_controllers   = 1,
+   .setup            = apollo_pci_setup,
+   .scan             = apollo_pci_scan_bus,
+   .preinit          = apollo_pci_preinit,
+};
+
+static int __init apollo_pci_init(void)
+{
+   if (PCI_HOST_MODE_ENABLED)
+      pci_common_init(&apollo_pci);
+
+   return 0;
+}
+
+subsys_initcall(apollo_pci_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/platsmp.c linux-2.6.34/arch/arm/mach-krome/platsmp.c
--- linux-2.6.34_org/arch/arm/mach-krome/platsmp.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/platsmp.c	2011-10-10 17:46:44.029424000 +0530
@@ -0,0 +1,238 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/init.h>
+#include <linux/errno.h>
+#include <linux/delay.h>
+#include <linux/device.h>
+#include <linux/smp.h>
+#include <linux/io.h>
+
+#include <asm/cacheflush.h>
+#include <asm/mach-types.h>
+#include <asm/localtimer.h>
+#include <asm/unified.h>
+#include <asm/smp_scu.h>
+
+#include <mach/hardware.h>
+#include <mach/core.h>
+#include <mach/board.h>
+#include <mach/scu.h>
+#include <asm/smp_scu.h>
+
+
+extern void krome_secondary_startup(void);
+
+/*
+ * Control for which core is the next to come out of the secondary
+ * boot "holding pen"
+ */
+volatile int pen_release = -1;
+
+static void __iomem *scu_base_addr(void)
+{
+	return __io_address(APOLLO_CORTEX_A9_SCU_BASE);
+}
+
+static inline unsigned int get_core_count(void)
+{
+
+#if 0  //TODO::Enable this for dual core
+	void __iomem *scu_base = scu_base_addr();
+	if (scu_base)
+		return scu_get_core_count(scu_base);
+#endif
+	return 1;
+}
+
+static DEFINE_SPINLOCK(boot_lock);
+
+void __cpuinit platform_secondary_init(unsigned int cpu)
+{
+	trace_hardirqs_off();
+
+	/*
+	 * if any interrupts are already enabled for the primary
+	 * core (e.g. timer irq), then they will not have been enabled
+	 * for us: do so
+	 */
+	gic_cpu_init(0, gic_cpu_base_addr);
+
+	/*
+	 * let the primary processor know we're out of the
+	 * pen, then head off into the C entry point
+	 */
+	pen_release = -1;
+	smp_wmb();
+
+	/*
+	 * Synchronise with the boot thread.
+	 */
+	spin_lock(&boot_lock);
+	spin_unlock(&boot_lock);
+}
+
+int __cpuinit boot_secondary(unsigned int cpu, struct task_struct *idle)
+{
+	unsigned long timeout;
+
+	/*
+	 * set synchronisation state between this boot processor
+	 * and the secondary one
+	 */
+	spin_lock(&boot_lock);
+
+	/*
+	 * The secondary processor is waiting to be released from
+	 * the holding pen - release it, then wait for it to flag
+	 * that it has been released by resetting pen_release.
+	 *
+	 * Note that "pen_release" is the hardware CPU ID, whereas
+	 * "cpu" is Linux's internal ID.
+	 */
+	flush_cache_all();
+	outer_clean_range(__pa(&secondary_data), __pa(&secondary_data + 1));
+	pen_release = cpu;
+	flush_cache_all();
+	outer_clean_range(__pa(&pen_release), __pa(&pen_release + 1));
+
+	/*
+	 * XXX
+	 *
+	 * This is a later addition to the booting protocol: the
+	 * bootMonitor now puts secondary cores into WFI, so
+	 * wakeup_secondary() no longer gets the cores moving; we need
+	 * to send a soft interrupt to wake the secondary core.
+	 * Use smp_cross_call() for this, since there's little
+	 * point duplicating the code here
+	 */
+	smp_cross_call(cpumask_of(cpu));
+
+	timeout = jiffies + (1 * HZ);
+	while (time_before(jiffies, timeout)) {
+		smp_rmb();
+		if (pen_release == -1)
+			break;
+
+		udelay(10);
+	}
+	/*
+	 * now the secondary core is starting up let it run its
+	 * calibrations, then wait for it to finish
+	 */
+	spin_unlock(&boot_lock);
+
+	return pen_release != -1 ? -ENOSYS : 0;
+}
+
+static void __init wakeup_secondary(void)
+{
+    unsigned long val = 0;
+
+	/* nobody is to be released from the pen yet */
+	pen_release = -1;
+
+    /*
+	 * Secondary cores will be waiting on the scratch pad reg20
+	 * value to be 0xDECADEAF 
+	 */
+    val = readl((unsigned long *)(0xE068C050));
+    writel(0xDECADEAF, (unsigned long *)(0xE068C050));
+
+	mb();
+	while(val<=2)
+    	val = readl((unsigned long *)(0xE068C050));
+	printk("woken up secondary core \n");
+}
+
+/*
+ * Initialise the CPU possible map early - this describes the CPUs
+ * which may be present or become present in the system.
+ */
+void __init smp_init_cpus(void)
+{
+	unsigned int i, ncores = get_core_count();
+
+	for (i = 0; i < ncores; i++)
+		set_cpu_possible(i, true);
+}
+
+void __init smp_prepare_cpus(unsigned int max_cpus)
+{
+	unsigned int ncores = get_core_count();
+	unsigned int cpu = smp_processor_id();
+	int i;
+
+	/* sanity check */
+	if (ncores == 0) {
+		printk(KERN_ERR
+		       "Krome: strange CM count of 0? Default to 1\n");
+
+		ncores = 1;
+	}
+
+	if (ncores > NR_CPUS) {
+		printk(KERN_WARNING
+		       "Krome: no. of cores (%d) greater than configured "
+		       "maximum of %d - clipping\n",
+		       ncores, NR_CPUS);
+		ncores = NR_CPUS;
+	}
+
+	smp_store_cpu_info(cpu);
+
+	/*
+	 * are we trying to boot more cores than exist?
+	 */
+	if (max_cpus > ncores)
+		max_cpus = ncores;
+
+	/*
+	 * Initialise the present map, which describes the set of CPUs
+	 * actually populated at the present time.
+	 */
+	for (i = 0; i < max_cpus; i++)
+		set_cpu_present(i, true);
+
+	/*
+	 * Initialise the SCU if there are more than one CPU and let
+	 * them know where to start. 
+	 */
+	if (max_cpus > 1) {
+		/*
+		 * Enable the local timer or broadcast device for the
+		 * boot CPU, but only if we have more than one CPU.
+		 */
+		percpu_timer_setup();
+
+		scu_enable(scu_base_addr());
+		wakeup_secondary();
+	}
+	else if(max_cpus == 1)
+	{
+		percpu_timer_setup();
+		scu_enable(scu_base_addr());
+	}
+}
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/pm.c linux-2.6.34/arch/arm/mach-krome/pm.c
--- linux-2.6.34_org/arch/arm/mach-krome/pm.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/pm.c	2011-10-10 11:29:19.208463000 +0530
@@ -0,0 +1,789 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 200 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include <linux/suspend.h>
+#include <linux/sched.h>
+#include <linux/proc_fs.h>
+#include <linux/interrupt.h>
+#include <linux/sysfs.h>
+#include <linux/module.h>
+#include <linux/io.h>
+
+#include <asm/cacheflush.h>
+#include <asm/irq.h>
+#include <asm/atomic.h>
+#include <asm/mach/time.h>
+#include <asm/mach/irq.h>
+#include <asm/hardware/gic.h>
+#include <asm/hardware/gic.h>
+#include <mach/irqs.h>
+#include <mach/hardware.h>
+#include <mach/pm.h>
+#include <asm/mach/arch.h>
+
+#include <mach/hardware.h>
+#include <mach/core.h>
+#include <asm/tlbflush.h>
+#include <mach/globaltimer.h>
+#include <asm/hardware/gic.h>
+
+#include <mach/pnx8492.h>
+
+extern int apollo_cpu_suspend(unsigned long int *, int , unsigned long *, unsigned long *);
+extern int apollo_get_restore_pointer(void);
+static void apollo_restore_table_entry(unsigned long *);
+static void apollo_restore_control_register(u32);
+
+/* NXP's Apollo uses ARM Cortex-A9 CPU and has a Cortex-M3 as the standby
+ * controller processor
+ */
+
+#define ITC_CPU_PRIMASK_REG \
+   (IO_ADDRESS(APOLLO_CORTEX_A9_INTC_BASE)+GIC_CPU_PRIMASK)
+
+#define ITC_CPU_EOI_REG \
+   (IO_ADDRESS(APOLLO_CORTEX_A9_INTC_BASE)+GIC_CPU_EOI)
+
+#define ITC_DISTR_PENDCLEAR_REG(bank)  \
+   (IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE)+(4*bank)+GIC_DIST_PENDING_CLEAR)
+
+#define ITC_DISTR_ENABLECLEAR_REG(bank)  \
+   (IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE)+(4*bank)+GIC_DIST_ENABLE_CLEAR)
+
+#define ITC_DISTR_PRI_REG(bank) \
+   (IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE)+(4*bank)+GIC_DIST_PRI)
+
+/* Addresses of IPC registers to control interrupts from other processors to
+ * Cortex-A9.
+ */
+#define INTR_CLR_ENABLE_IPC0  0xE06EAF00
+#define INTR_SET_ENABLE_IPC0  0xE06EAF04
+#define INTR_ENABLE_IPC0      0xE06EAF0C
+
+/* The following represent the bits representing each of the processors which
+ * can interrupt Cortex-A9 through IPC
+ */
+#define A9_REASON_BIT       0x00000001
+#define ADSP_REASON_BIT     0x00000002
+#define ARM926_REASON_BIT   0x00000004
+#define VDSP_REASON_BIT     0x00000008
+#define M3_REASON_BIT       0x00000010
+
+#define IPC0_REASON_MASK    (A9_REASON_BIT | ADSP_REASON_BIT |      \
+                             ARM926_REASON_BIT | VDSP_REASON_BIT |  \
+                             M3_REASON_BIT)
+
+/* Once in standby state, interrupt from standby processor will wake us up */
+#define   A9_WKUP_INTID       IRQ_IPC_CORTEXM3
+
+#define PIC_FRM_INTID(id)     ((id) / 32)
+#define INTPOS_FRM_INTID(id)  ((id) % 32)
+
+/* higher than 0xc0 which will be the new priority mask */
+#define WAKEUP_INT_PRI 0xb0
+  
+#ifdef CONFIG_PM_DEBUG
+#define DPRINTK(fmt, args...) printk(KERN_NOTICE fmt, ##args)
+#else
+#define DPRINTK(fmt, args...)
+#endif
+
+
+extern void __iomem *gic_cpu_base_addr;	/* used by entry-macro.S */
+/* Static function prototypes */
+static void apollo_pm_enable_wakeup_intr(void);
+static void apollo_pm_disable_wakeup_intr(void);
+static void apollo_pm_save_standby_context(void);
+static void apollo_pm_restore_standby_context(void);
+
+static int apollo_pm_valid(suspend_state_t state);
+static int apollo_pm_prepare(void);
+static int apollo_pm_enter(suspend_state_t state);
+static void apollo_pm_standby(void);
+static void apollo_pm_suspend(void);
+static void apollo_pm_finish(void);
+
+static inline int default_op(void)
+{
+	return 0;
+}
+
+static inline int default_enter(unsigned long resumeAddr)
+{
+	return 0;
+}
+
+/* Callback routine to activate standby controller */
+static struct apollo_pm_stdby_ctrlr_ops ops =
+{
+	.prepare = default_op,
+	.enter   = default_enter,
+	.exit    = default_op,
+	.finish  = default_op,
+	.recover = default_op
+};
+
+/* Context of cortex-A9 stored before going into standby state */
+typedef struct
+{
+	unsigned long  ipc0Mask;
+	unsigned long  primask;
+}apollo_standby_context_t;
+  
+static apollo_standby_context_t apollo_standby_cxt;
+  
+static void apollo_pm_disable_wakeup_intr(void)
+{
+	disable_irq(A9_WKUP_INTID);
+	__raw_writel(M3_REASON_BIT, INTR_CLR_ENABLE_IPC0);
+}
+
+static void apollo_pm_enable_wakeup_intr(void)
+{
+   /* Set the priority of standby controller interrupt to be higher than
+    * priority mask
+    */
+   unsigned long num   = (A9_WKUP_INTID / 4);
+   unsigned long pri   = __raw_readl(ITC_DISTR_PRI_REG(num));
+   unsigned long tmp   = 0;
+   unsigned int  shift = (A9_WKUP_INTID % 4) * 8;
+
+   tmp = 0xFFFFFFFF ^ (0xFF << shift);
+   pri &= tmp;
+   pri |= (WAKEUP_INT_PRI << shift);
+
+   __raw_writel(pri, ITC_DISTR_PRI_REG(num));
+
+   enable_irq(A9_WKUP_INTID);
+
+   __raw_writel(M3_REASON_BIT, INTR_CLR_ENABLE_IPC0);
+   __raw_writel(M3_REASON_BIT, INTR_SET_ENABLE_IPC0);
+}
+
+static void apollo_pm_clear_wakeup_intr(void)
+{
+   __raw_writel(M3_REASON_BIT, INTR_CLR_ENABLE_IPC0);
+
+   __raw_writel((1 << INTPOS_FRM_INTID(A9_WKUP_INTID)),
+                ITC_DISTR_ENABLECLEAR_REG(PIC_FRM_INTID(A9_WKUP_INTID)));
+
+   __raw_writel(A9_WKUP_INTID, ITC_CPU_EOI_REG);
+   
+   __raw_writel((1 << INTPOS_FRM_INTID(A9_WKUP_INTID)),
+                ITC_DISTR_PENDCLEAR_REG(PIC_FRM_INTID(A9_WKUP_INTID)));
+}
+
+/* Wakeup interrupt handler */
+static irqreturn_t apollo_wakeup_interrupt(int irq, void *dev)
+{
+   apollo_pm_clear_wakeup_intr();
+   return IRQ_HANDLED;
+}
+
+/* Wakeup interrupt configuration */
+static struct irqaction apollo_wakeup_irq = {
+   .name    = "Apollo wakeup",
+   .flags   = IRQF_DISABLED | IRQF_SHARED,
+   .handler = apollo_wakeup_interrupt
+};
+  
+/* Save the context before entering into standby state */
+static void apollo_pm_save_standby_context(void)
+{
+	apollo_pm_disable_wakeup_intr();
+
+	/* Store the existing priority mask */
+	apollo_standby_cxt.primask = __raw_readl(ITC_CPU_PRIMASK_REG);
+
+	/* change it to higher than all existing interrupts */
+	__raw_writel(0xC0, ITC_CPU_PRIMASK_REG);
+
+	/* Store the enabled IPC0 interrupts configuration */
+	apollo_standby_cxt.ipc0Mask = __raw_readl(INTR_ENABLE_IPC0);
+
+	__raw_writel(IPC0_REASON_MASK, INTR_CLR_ENABLE_IPC0);
+
+	/* Enable standby controller interrupt with priority higher than priority
+	 * mask.
+	 */
+	apollo_pm_enable_wakeup_intr();
+}
+  
+/* Restore the saved context */
+static void apollo_pm_restore_standby_context()
+{
+   /* Restore the priority mask */
+   __raw_writel(apollo_standby_cxt.primask, ITC_CPU_PRIMASK_REG);
+
+   /* Store the enabled IPC0 interrupts configuration */
+   __raw_writel(apollo_standby_cxt.ipc0Mask, INTR_CLR_ENABLE_IPC0);
+   __raw_writel(apollo_standby_cxt.ipc0Mask, INTR_SET_ENABLE_IPC0);
+}
+
+struct apollo_pm_gic_dist_save   pm_pic_save;
+
+void apollo_pm_gic_dist_save(void)
+{
+   unsigned int max_irq, i,j;
+   void *__iomem dist_base;
+   u32 cpumask = 1 << smp_processor_id();
+   dist_base = (void *__iomem) IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE);
+
+   cpumask |= cpumask << 8;
+   cpumask |= cpumask << 16;
+
+   /*
+    * Find out how many interrupts are supported.
+    */
+   max_irq = readl(dist_base + GIC_DIST_CTR) & 0x1f;
+   max_irq = (max_irq + 1) * 32;
+
+   /*
+    * The GIC only supports up to 1020 interrupt sources.
+    * Limit this to either the architected maximum, or the
+    * platform maximum.
+    */
+   if (max_irq > max(1020, NR_IRQS))
+      max_irq = max(1020, NR_IRQS);
+
+
+   /*
+    * Save Interrupt distributor enable clear.
+    * Remember this has to be toggled while restoring....
+    */
+   for (i = 0,j = 0; i < max_irq; i += 32, j++)
+   {
+      pm_pic_save.dist_enable_clear[j] = readl(dist_base + GIC_DIST_ENABLE_CLEAR + i * 4 / 32);
+   }
+
+   /* saving distributor enable set.
+    * 
+    */
+   for (i = 0,j = 0; i < max_irq; i += 32, j++)
+   {
+      pm_pic_save.dist_enable_set[j] = readl(dist_base + GIC_DIST_ENABLE_SET + i * 4 / 32);
+   }
+
+   return;
+}
+
+void apollo_pm_gic_dist_disable(void)
+{
+   unsigned int max_irq, i, j;
+   void *__iomem dist_base;
+   dist_base = (void *__iomem) IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE);
+
+   writel(0x0, (dist_base+GIC_DIST_CTRL));
+   writel(0x0, (gic_cpu_base_addr+GIC_CPU_CTRL ));
+
+   /*
+    * Find out how many interrupts are supported.
+    */
+   max_irq = readl(dist_base + GIC_DIST_CTR) & 0x1f;
+   max_irq = (max_irq + 1) * 32;
+
+   /*
+    * The GIC only supports up to 1020 interrupt sources.
+    * Limit this to either the architected maximum, or the
+    * platform maximum.
+    */
+   if (max_irq > max(1020, NR_IRQS))
+      max_irq = max(1020, NR_IRQS);
+
+   /*
+    * Disable all interrupts.
+    */
+   for (i = 0; i < max_irq; i += 32)
+   {
+      writel(0xffffffff, dist_base + GIC_DIST_ENABLE_CLEAR + i * 4 / 32);
+   }
+
+   /* saving distributor set-pending */
+   for (i = 0,j = 0; i < max_irq; i += 32, j++) 
+   {
+      pm_pic_save.dist_pending_set[j] = readl(dist_base + GIC_DIST_PENDING_SET + i * 4 / 32);
+   }
+
+   /* clear pending interrupts */
+   for (i = 0; i < max_irq; i += 32)
+   {
+      writel(0xffffffff, dist_base + GIC_DIST_PENDING_CLEAR + i * 4 / 32);
+   }
+
+   for (i = 0; i < max_irq; i += 32)
+   {
+      writel(0x0, dist_base + GIC_DIST_PENDING_SET + i * 4 / 32);
+   }
+
+   writel(0x1, (dist_base +GIC_DIST_CTRL));
+   writel(0xf0, (gic_cpu_base_addr+ GIC_CPU_PRIMASK));
+   writel(0x1, (gic_cpu_base_addr+GIC_CPU_CTRL ));
+
+   return;
+}
+
+void apollo_pm_gic_dist_restore(void)
+{
+   unsigned int max_irq, i,j;
+   void *__iomem dist_base;
+   u32 cpumask = 1 << smp_processor_id();
+   dist_base = (void *__iomem)IO_ADDRESS(APOLLO_CORTEX_A9_DISTR_BASE);
+
+   cpumask |= cpumask << 8;
+   cpumask |= cpumask << 16;
+
+   writel(0x0, (dist_base+GIC_DIST_CTRL));
+   writel(0x0, (gic_cpu_base_addr+GIC_CPU_CTRL ));
+   /*
+    * Find out how many interrupts are supported.
+    */
+   max_irq = readl(dist_base + GIC_DIST_CTR) & 0x1f;
+   max_irq = (max_irq + 1) * 32;
+
+   /*
+    * The GIC only supports up to 1020 interrupt sources.
+    * Limit this to either the architected maximum, or the
+    * platform maximum.
+    */
+   if (max_irq > max(1020, NR_IRQS))
+      max_irq = max(1020, NR_IRQS);
+
+#if 0
+   /*
+    * Set all global interrupts to be level triggered, active low.
+    */
+   for (i = 32; i < max_irq; i += 16)
+   {
+      writel(0, dist_base + GIC_DIST_CONFIG + i * 4 / 16);
+   }
+
+   /*
+    * Set all global interrupts to this CPU only.
+    */
+   for (i = 32; i < max_irq; i += 4)
+   {
+      writel(cpumask, dist_base + GIC_DIST_TARGET + i * 4 / 4);
+   }
+
+   /*
+    * Set priority on all interrupts.
+    */
+   for (i = 0; i < max_irq; i += 4)
+   {
+      writel(0xd0d0d0d0, dist_base + GIC_DIST_PRI + i * 4 / 4);
+   }
+#endif
+
+   /*
+    * Restore Interrupt distributor enable clear.
+    * Remember this has to be toggled while restoring....
+    */
+   for (i = 0,j = 0; i < max_irq; i += 32, j++)
+   {
+      writel(~(pm_pic_save.dist_enable_clear[j]),(dist_base + GIC_DIST_ENABLE_CLEAR + i * 4 / 32));
+   }
+
+   /* Restore distributor enable set.
+    * 
+    */
+   for (i = 0,j = 0; i < max_irq; i += 32, j++)
+   {
+      writel(pm_pic_save.dist_enable_set[j], (dist_base + GIC_DIST_ENABLE_SET + i * 4 / 32));
+   }
+
+   writel(0x1, (dist_base +GIC_DIST_CTRL));
+   writel(0xf0, (gic_cpu_base_addr+ GIC_CPU_PRIMASK));
+   writel(0x1, (gic_cpu_base_addr+GIC_CPU_CTRL ));
+   return;
+}
+
+static void apollo_restore_control_register(u32 val)
+{
+       __asm__ __volatile__ ("mcr p15, 0, %0, c1, c0, 0" : : "r" (val));
+}
+
+/* During the MMU restoration on the restore path from MPU OFF, the page
+ * table entry for the page consisting of the code being executed is
+ * modified to make MMU return VA=PA.
+
+ * The MMU is then enabled and the original entry is being stored in
+ * scratchpad.  This functio reads the original values stored in
+ * scratchpad, and restores them back. */
+
+static void apollo_restore_table_entry(unsigned long *restoreAddr)
+{
+       u32 previous_value, control_reg_value;
+       u32 *address;
+
+       /* Get address of entry that was modified */
+       address = (u32 *)restoreAddr[0];
+       /* Get the previous value which needs to be restored */
+       previous_value = restoreAddr[1];
+       address = __va(address);
+       *address = previous_value;
+       flush_tlb_all();
+       control_reg_value = restoreAddr[2];
+       /* This will enable caches and prediction */
+       apollo_restore_control_register(control_reg_value);
+}
+
+
+/* state change to s2ram */
+static void apollo_pm_suspend(void)
+{
+    /* Variable to tell what needs to be saved and restored
+     * in apollo_cpu_suspend */
+    /* save_state = 0 => Nothing to save and restored */
+    /* save_state = 1 => Only L1 and logic lost */
+    /* save_state = 2 => Only L2 lost */
+    /* save_state = 3 => L1, L2 and logic lost */
+    int save_state = 3;
+    /* Offset 1-20 -- r0-r12, lr 
+     * Offset 2- 64 -- Other CPU and co-processot registers */
+    unsigned long reg_save[128] = {0, };
+    /* Offset - Reg
+     * 0x0    - Page table entry location
+     * 0x4    - Previous value in page table entry location 
+     * 0x8    - Previous value of SCTLR */
+    unsigned long restore_mmu_on_regs[4] = {0, };
+    unsigned long ret_val = 0;
+
+    /*
+     * Step 1: turn off interrupts (FIXME: Already disabled??)
+     */
+    local_irq_disable();
+    local_fiq_disable();
+    DPRINTK("PM: Apollo S2RAM \n");
+    apollo_pm_gic_dist_save();
+
+    DPRINTK("PM: Apollo Suspend - Preparing standby controller.\n");
+    ret_val = ops.prepare();
+    if(ret_val != 0)
+    {
+       DPRINTK("SCD Prepare failed with reason %lu\n", ret_val);
+       goto resume;
+    }
+    {
+       DPRINTK("reg_save = [%08x] restore_mmu_on_regs = [%08x]\n", 
+               (unsigned int)reg_save, (unsigned int)restore_mmu_on_regs);
+       DPRINTK("Scratchpad = [0x70 == %08x], [0x74 == %08x] ",
+                readl(0xe06ead70),
+                readl(0xe06ead74));
+       DPRINTK("Ready to go to suspend!\n");
+    }
+    /*idle*/
+    apollo_cpu_suspend(reg_save,save_state, restore_mmu_on_regs, &ret_val);
+
+    if(ret_val == 0x5)
+    {
+       /* Call the SCD Enter API here */
+      __raw_writel(0xbb, 0xe06ead6c);
+      /* Calling the SCD Enter API here */
+      DPRINTK("PM: Apollo Suspend - Activating standby controller.\n");
+      ret_val = ops.enter(apollo_get_restore_pointer());
+      __raw_writel(0xbc, 0xe06ead6c);
+      if(ret_val != 0)
+      {
+         DPRINTK("SCD Enter failed with reason %lu\n", ret_val);
+         __raw_writel(0xbd, 0xe06ead6c);
+         ops.recover();
+         goto resume;
+      }
+      __raw_writel(0xbe, 0xe06ead6c);
+      asm("b .");
+       //while(1); /* M3 will power off the A9 waiting... */
+    }
+
+    /*reset all the ARM mode pointers*/
+resume: cpu_init();
+
+    apollo_restore_table_entry(restore_mmu_on_regs);
+
+    if(ops.exit() != 2)
+    {
+       ops.finish();
+    }
+
+    //apollo_pm_restore_context();
+    apollo_pm_gic_dist_restore();
+    //apollo_init_irq();
+    apollo_pm_timer_restore();
+
+
+    DPRINTK("PM: Apollo S2RAM -- Resumed\n");
+    local_irq_enable();
+    local_fiq_enable();
+
+    DPRINTK("PM: Apollo resuming from suspend state...\n");
+    return;
+}
+
+/* state change to standby */
+static void apollo_pm_standby(void)
+{
+   unsigned int cpipe_layer_ctl_reg[8];
+   int i;
+
+   printk("PM: Apollo entering standby state...\n");
+
+   /* Make sure the CPIPE layers are all blanked. The CPIPE RIF will
+    * continue to read memory unless the layers are off. This would
+    * cause random failures when the A9 resumes. The driver needs to
+    * manage this. This is a safe guard to avoid issues since the
+    * splash screen sets up the CPIPE outside of the CPIPE driver's
+    * scope. */
+   for ( i=0; i<8; i++)
+   {
+      if ( i < 4 )
+      {
+         cpipe_layer_ctl_reg[i] = readl(ARM_A9_HOST_MMIO_BASE
+                                        + 0x128400 + (i * 0x400)) & 0x1;
+         writel(0x0, (ARM_A9_HOST_MMIO_BASE + 0x128400 + (i * 0x400)) );
+      }
+      else
+      {
+         cpipe_layer_ctl_reg[i] = readl(ARM_A9_HOST_MMIO_BASE
+                                        + 0x124400 + ((i-4) * 0x400)) & 0x1;
+         writel(0x0, (ARM_A9_HOST_MMIO_BASE + 0x124400 + ((i-4) * 0x400)) );
+      }
+   }
+
+  /**
+    * Step 1: turn off interrupts
+    */
+   local_irq_disable();
+   local_fiq_disable();
+
+   /* Make sure ALL the interrupts are off. This is just
+    * to guarantee the registers are disabled.
+    */
+
+   /* Save any that are still on. */
+   apollo_pm_gic_dist_save();
+
+   /* Disable them */
+   apollo_pm_gic_dist_disable();
+
+   for ( i = 0; i<8; i++)
+   {
+      if ( pm_pic_save.dist_pending_set[i] )
+      {
+         printk("WARNING: You have a pending irq.\n\t\tindex: %d\n\t\tvalue: %x\n", i, pm_pic_save.dist_pending_set[i]);
+      }
+   }
+
+   /* Enable the IPC interrupt from M3 */
+   __raw_writel(0x2, 0xe0101104);
+
+   /* Save the current context */
+   apollo_pm_save_standby_context();
+
+   /* Give control to standby controller before doing WFI */
+   printk("PM: Apollo preparing standby controller.\n");
+
+   /* In case we can't activate the on-chip standby controller, bailout and
+    * fake that we are resuming.
+    */
+   if(ops.prepare() == 0)
+   {
+      printk("PM: Apollo activating standby controller.\n");
+      if(ops.enter(0) != 0)
+      {
+         /* Revert the effect of prepare */
+         ops.recover();
+         goto resume;
+      }
+   }
+   else
+   {
+      goto resume;
+   }
+
+   for(;;)
+   {
+      flush_cache_all();
+
+      /* Entering into WFI */
+      asm("dsb\n"
+          "wfi");
+
+      printk("PM: Apollo out of WFI...\n");
+
+      if(ops.exit() != 2)
+      {
+         ops.finish();
+         break;
+      }
+   }
+
+resume:
+   /* Resumed...restore the context */
+   apollo_pm_restore_standby_context();
+
+   /* Restore any of the PM saved interrupts. */
+   apollo_pm_gic_dist_restore();
+
+   local_irq_enable();
+   local_fiq_enable();
+
+   /* Restore the CPIPE layer enables */
+   for ( i=0; i<8; i++)
+   {
+      if ( i < 4 )
+      {
+         writel( cpipe_layer_ctl_reg[i],
+                 (ARM_A9_HOST_MMIO_BASE + 0x128400 + (i * 0x400)) );
+      }
+      else
+      {
+         writel( cpipe_layer_ctl_reg[i],
+                 (ARM_A9_HOST_MMIO_BASE + 0x124400 + ((i-4) * 0x400)) );
+      }
+   }
+
+   printk("PM: Apollo resuming from standby state...\n");
+}
+
+/*
+ * apollo_pm_prepare - Do preliminary suspend work.
+ *
+ */
+static int apollo_pm_prepare(void)
+{
+   int ret = 0;
+
+   printk("PM: Apollo power mgmt prepare for suspend...\n");
+
+   /* Setup interrupt from M3 through IPC0 */
+   ret = request_irq(A9_WKUP_INTID, 
+                     apollo_wakeup_irq.handler,
+                     apollo_wakeup_irq.flags,
+                     apollo_wakeup_irq.name,
+                     &apollo_wakeup_irq);
+
+   if(ret < 0)
+   {
+      printk("PM: Apollo wakeup interrupt request failed, %d\n", ret);
+      return -1;
+   }
+
+   return 0;
+}
+
+/*
+ * apollo_pm_enter - Actually enter a sleep state.
+ * @state:     State we're entering.
+ *
+ */
+static int apollo_pm_enter(suspend_state_t state)
+{
+   switch (state)
+   {
+      case PM_SUSPEND_STANDBY:
+         apollo_pm_standby();
+         break;
+      case PM_SUSPEND_MEM:
+         apollo_pm_suspend();
+         break;
+      default:
+         return -EINVAL;
+   }
+
+   return 0;
+}
+
+/**
+ * apollo_pm_finish - Finish up suspend sequence.
+ *
+ * This is called after we wake back up (or if entering the sleep state
+ * failed).
+ */
+static void apollo_pm_finish(void)
+{
+   printk("PM: Apollo power mgmt finish.\n");
+
+   disable_irq(A9_WKUP_INTID);
+   
+   free_irq(A9_WKUP_INTID, &apollo_wakeup_irq);
+
+   /* 
+    * re-enable the IPC0 interrupt so that the exiting ISRs 
+    * from other subsystems will be called. 
+    */
+   enable_irq(A9_WKUP_INTID);
+}
+
+static int apollo_pm_valid(suspend_state_t state)
+{
+   /* Currently support for standby state only */
+   switch (state)
+   {
+      case PM_SUSPEND_MEM:
+      case PM_SUSPEND_STANDBY:
+         return 1;
+   }
+
+   return 0;
+}
+
+static struct platform_suspend_ops apollo_pm_ops =
+{
+   .prepare    = apollo_pm_prepare,
+   .enter      = apollo_pm_enter,
+   .finish     = apollo_pm_finish,
+   .valid      = apollo_pm_valid
+};
+
+/* function to register routines to activate standby controller */
+int apollo_pm_register(struct apollo_pm_stdby_ctrlr_ops *pOps)
+{
+   /* enter and exit are mandatory, check to see they are valid */
+   if(!pOps->enter || !pOps->exit)
+      return -1;
+
+   ops.enter   = pOps->enter;
+   ops.exit    = pOps->exit;
+
+   /* prepare, recover and finish are optional, copy them conditionally */
+   if(pOps->prepare)
+      ops.prepare = pOps->prepare;
+   if(pOps->finish)
+      ops.finish  = pOps->finish;
+   if(pOps->recover)
+      ops.recover = pOps->recover;
+
+   return 0;
+}
+EXPORT_SYMBOL(apollo_pm_register);
+
+static int __init apollo_pm_init(void)
+{
+   printk("PM: Apollo power mgmt initialization.\n");
+
+   suspend_set_ops(&apollo_pm_ops);
+
+   return 0;
+}
+__initcall(apollo_pm_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/rtc.c linux-2.6.34/arch/arm/mach-krome/rtc.c
--- linux-2.6.34_org/arch/arm/mach-krome/rtc.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/rtc.c	2011-10-10 11:29:19.210460000 +0530
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <mach/pnx8492.h>
+#include <mach/irqs.h>
+
+/*-------------------------------------------------------------------------*/
+
+
+static struct resource apollo_rtc_resources[] = {
+    {
+        .start          = APOLLO_RTC_BASE,
+        .end            = APOLLO_RTC_BASE + 4096,
+        .flags          = IORESOURCE_MEM,
+    },
+    {
+        .start          = IRQ_RTC0,
+        .flags          = IORESOURCE_IRQ,
+    },
+};
+
+static struct platform_device apollo_rtc_device = {
+    .name           = "rtc_apollo",
+    .id             = -1,
+    .num_resources  = ARRAY_SIZE(apollo_rtc_resources),
+    .resource       = apollo_rtc_resources,
+};
+
+int __init apollo_init_rtc(void)
+{
+    return platform_device_register(&apollo_rtc_device);
+}
+
+arch_initcall(apollo_init_rtc);
+
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/sfc.c linux-2.6.34/arch/arm/mach-krome/sfc.c
--- linux-2.6.34_org/arch/arm/mach-krome/sfc.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/sfc.c	2011-10-10 11:29:19.212459000 +0530
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/physmap.h>
+#include <mach/sfc.h>
+#include <linux/io.h>
+#include <mach/gcs_dmac.h>
+
+static struct resource apollo_sfc_resources[] = {
+
+   {
+      .start   = APOLLO_SFC_CFG_BASE,
+      .end     = (APOLLO_SFC_CFG_BASE + APOLLO_SFC_CFG_LEN - 1),
+      .flags   = IORESOURCE_MEM,
+   },
+   {
+      .start   = APOLLO_GCS_DMAC_BASE,
+      .end     = (APOLLO_GCS_DMAC_BASE + APOLLO_GCS_DMAC_LEN - 1),
+      .flags   = IORESOURCE_MEM,
+   },
+};
+
+static uint64_t apollo_sfc_dma_mask = ~(uint32_t)0;
+static struct platform_device apollo_sfc_device = {
+	.name		= "nx_sfc",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(apollo_sfc_resources),
+	.resource	= apollo_sfc_resources,
+	.dev = {
+		.platform_data	= NULL,
+		.dma_mask = &apollo_sfc_dma_mask,
+		.coherent_dma_mask = 0xFFFFFFFF,
+	},
+};
+
+static int __init apollo_sfc_init(void)
+{
+   return platform_device_register (&apollo_sfc_device);
+}
+
+arch_initcall(apollo_sfc_init);
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/sleep.S linux-2.6.34/arch/arm/mach-krome/sleep.S
--- linux-2.6.34_org/arch/arm/mach-krome/sleep.S	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/sleep.S	2011-10-10 11:29:19.215459000 +0530
@@ -0,0 +1,830 @@
+
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd. 
+ * All prior copyright rights in this work and the accompanying software 
+ * products transferred to Trident Microsystems (Far East) Ltd. by written 
+ * agreement.  All rights reserved.
+ */
+/*
+ * Copyright 2006, 2007 (C) NXP BV, All Rights Reserved
+ * Author: OKC <okc.helpdesk@nxp.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#include <linux/linkage.h>
+#include <asm/assembler.h>
+#include <asm/memory.h>
+
+#define SCRATCHPAD_BASE_P       0xE06EAD00
+#define SCRATCHPAD_RESTORE_PC_OFFSET 0x74
+#define SCRATCHPAD_RESTORE_PC_LOC          SCRATCHPAD_BASE_P + SCRATCHPAD_RESTORE_PC_OFFSET
+#define SCRATCHPAD_CPU_CONTEXT_LOC_OFFSET 0x70
+#define SCRATCHPAD_CPU_CONTEXT_LOC     SCRATCHPAD_BASE_P + SCRATCHPAD_CPU_CONTEXT_LOC_OFFSET
+#define SCRATCHPAD_REBOOT_INDICATOR 0x6C
+#define SCRATCHPAD_REBOOT_INDICATOR_LOC    SCRATCHPAD_BASE_P + SCRATCHPAD_REBOOT_INDICATOR
+#define SCRATCHPAD_SAVE_REGS_WHEN_MMU_OFF  0x68
+#define SCRATCHPAD_SAVE_REGS_WHEN_MMU_OFF_LOC  SCRATCHPAD_BASE_P + SCRATCHPAD_SAVE_REGS_WHEN_MMU_OFF 
+#define SCRATCHPAD_DEBUG_SAVE 0x00
+#define SCRATCHPAD_DEBUG_SAVE_LOC SCRATCHPAD_BASE_P + SCRATCHPAD_DEBUG_SAVE 
+
+
+	.text
+/* Function call to get the restore pointer for resume from OFF */
+ENTRY(apollo_get_restore_pointer)
+        stmfd   sp!, {lr}     @ save registers on stack
+	adr	r0, restore
+        bic     r0, #PAGE_OFFSET
+        ldmfd   sp!, {pc}     @ restore regs and return
+ENTRY(get_restore_pointer_sz)
+        .word   . - get_restore_pointer_sz
+/*
+ * Forces Apollo into idle state
+ *
+ * apollo_cpu_suspend() - This bit of code just executes the WFI
+ * for normal idles.
+ *
+ * Note: This code get's copied to internal SRAM at boot. When the Apollo
+ *	 wakes up it continues execution at the point it went to sleep.
+ */
+ENTRY(apollo_cpu_suspend)
+	/* stmfd	sp!, {r0-r12, lr} */		@ save registers on stack
+         /* storing the address of regs_save in scratchpad */
+        stmia r0!, {r0-r3}              @ save r0, r1, r2 in offset 0 to 2
+        mov r3, r0
+        sub r0, r0, #0x10                @ get back r0 to regs_save[0] 
+        stmia r3!, {r4-r12, lr}		@ save registers in offset 3 to 19  
+
+        ldr r8, scratchpad_save_regs_mmu_off_loc
+        bic r2, #PAGE_OFFSET
+        str r2, [r8]
+        ldr r7, scratchpad_cpu_context_loc
+        bic r8, r0, #PAGE_OFFSET
+        str r8, [r7]
+#if SCRATCHPAD_SAVE_DEBUG
+         /* storing the restore entry point address in scratchpad. Microloader should jump to this loc  */
+        ldr r7, scratchpad_restore_pc_loc
+        adr r8, restore
+        bic r8, #PAGE_OFFSET
+        str r8, [r7]
+#endif
+loop:
+	/*b	loop*/	@Enable to debug by stepping through code
+	/* r0 contains restore pointer in sdram */
+	/* r1 contains information about saving context */
+
+	cmp	r1, #0x0
+	/* If context save is required, do that and execute wfi */
+	bne	save_context_wfi
+	/* Data memory barrier and Data sync barrier */
+	mov	r1, #0
+	mcr	p15, 0, r1, c7, c10, 4
+	mcr	p15, 0, r1, c7, c10, 5
+
+	wfi				@ wait for interrupt
+
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+
+	ldmfd	sp!, {r0-r12, pc}		@ restore regs and return
+restore:
+	 /*b restore */	@ Enable to debug restore code
+        /* Check what was the reason for mpu reset and store the reason in r9*/
+        /* 1 - Only L1 and logic lost */
+        /* 2 - Only L2 lost - In this case, we wont be here */
+        /* 3 - Both L1 and L2 lost */
+	/*FIXME: Read and tell if we restored from OFF. Ashwin. r2 will carry 3 indicating OFF*/
+
+        setmode PSR_F_BIT | PSR_I_BIT | SVC_MODE
+ 
+	mov     r2, #0x3
+	and     r2, r2, #0x3
+	cmp     r2, #0x0	@ Check if target power state was OFF or RET
+        moveq   r9, #0x3        @ MPU OFF => L1 and L2 lost
+	movne	r9, #0x1	@ Only L1 and L2 lost => avoid L2 invalidation
+	bne	logic_l1_restore
+	/* Execute smi to invalidate L2 cache */
+	mov r12, #0x1                         @ set up to invalide L2
+/*smi:    .word 0xE1600070                @ Call SMI monitor (smieq)*/
+logic_l1_restore:
+	mov	r1, #0
+	/* Invalidate all instruction caches to PoU
+	 * and flush branch target cache */
+	mcr	p15, 0, r1, c7, c5, 0
+
+/*	ldr	r4, scratchpad_base*/
+/*	ldr	r3, [r4,#0xBC]*/
+        /* storing the address os regs_save in scratchpad */
+        /* Uncomment this below line and comment the following two lines 
+         * if u want to restore from scratchpad */
+        /* ldr r12, scratchpad_debug_save_loc */
+        ldr     r1, scratchpad_cpu_context_loc
+        ldr     r12, [r1]
+	mov	r3, r12
+        add r3, #0x78      @ 30th offset onwards 
+
+	ldmia	r3!, {r4-r6}
+	mov	sp, r4
+	msr	spsr_cxsf, r5
+	mov	lr, r6
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x0]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x4]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x8]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xac
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	ldmia	r3!, {r4-r9}
+	/* Coprocessor access Control Register */
+	mcr p15, 0, r4, c1, c0, 2
+
+
+	/* TTBR0 */
+	MCR p15, 0, r5, c2, c0, 0
+	/* TTBR1 */
+	MCR p15, 0, r6, c2, c0, 1
+	/* Translation table base control register */
+	MCR p15, 0, r7, c2, c0, 2
+	/*domain access Control Register */
+	MCR p15, 0, r8, c3, c0, 0
+	/* data fault status Register */
+	MCR p15, 0, r9, c5, c0, 0
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0xc]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x10]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x14]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x18]
+        ldr r12, scratchpad_debug_save_loc
+        str r8, [r12, #0x1c]
+        ldr r12, scratchpad_debug_save_loc
+        str r9, [r12, #0x20]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xad
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	ldmia  r3!,{r4-r8}
+	/* instruction fault status Register */
+	MCR p15, 0, r4, c5, c0, 1
+	/*Data Auxiliary Fault Status Register */
+	MCR p15, 0, r5, c5, c1, 0
+	/*Instruction Auxiliary Fault Status Register*/
+	MCR p15, 0, r6, c5, c1, 1
+	/*Data Fault Address Register */
+	MCR p15, 0, r7, c6, c0, 0
+	/*Instruction Fault Address Register*/
+	MCR p15, 0, r8, c6, c0, 2
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x24]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x28]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x2c]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x30]
+        ldr r12, scratchpad_debug_save_loc
+        str r8, [r12, #0x34]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xae
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	ldmia  r3!,{r4-r7}
+
+	/* user r/w thread and process ID */
+	MCR p15, 0, r4, c13, c0, 2
+	/* user ro thread and process ID */
+	MCR p15, 0, r5, c13, c0, 3
+	/*Privileged only thread and process ID */
+	MCR p15, 0, r6, c13, c0, 4
+	/* cache size selection */
+	MCR p15, 2, r7, c0, c0, 0
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x38]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x3c]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x40]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x44]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+	ldmia  r3!,{r4-r8}
+	/* Data TLB lockdown registers */
+	MCR p15, 0, r4, c10, c0, 0
+	/* Instruction TLB lockdown registers */
+	MCR p15, 0, r5, c10, c0, 1
+	/* Secure or Nonsecure Vector Base Address */
+	MCR p15, 0, r6, c12, c0, 0
+	/* FCSE PID */
+	MCR p15, 0, r7, c13, c0, 0
+	/* Context PID */
+	MCR p15, 0, r8, c13, c0, 1
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x48]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x4c]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x50]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x54]
+        ldr r12, scratchpad_debug_save_loc
+        str r8, [r12, #0x58]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xaf
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	ldmia  r3!,{r4-r5}
+	/* primary memory remap register */
+	MCR p15, 0, r4, c10, c2, 0
+	/*normal memory remap register */
+	MCR p15, 0, r5, c10, c2, 1
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x5c]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x60]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xb0
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	/* Restore cpsr */
+	ldmia	r3!,{r4}	/*load CPSR from SDRAM*/
+	/*msr	cpsr, r4 */	/*store cpsr */
+
+
+	/* Enabling MMU here */
+	mrc	p15, 0, r7, c2, c0, 2 /* Read TTBRControl */
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during restore << */
+	/*Original TTBR in r7 --> sc pad -- 0x64*/
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x64]
+        /* Saving in scratchpad during restore >> */
+#endif
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe0
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+
+	/* Extract N (0:2) bits and decide whether to use TTBR0 or TTBR1*/
+	and	r7, #0x7
+	cmp	r7, #0x0
+	beq	usettbr0
+ttbr_error:
+	/* More work needs to be done to support N[0:2] value other than 0
+	* So looping here so that the error can be detected
+	*/
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe1
+        str r5, [r4]
+        /* Debug >> */
+#endif
+	/* b	ttbr_error */
+        mov r5, #0
+        mcr     p15, 0, r5, c2, c0, 2
+        
+usettbr0:
+	/* b       hack_cont */
+	mrc	p15, 0, r2, c2, c0, 0
+	ldr	r5, ttbrbit_mask
+	and	r2, r5
+	mov	r4, pc
+	ldr	r5, table_index_mask
+	and	r4, r5 /* r4 = 31 to 20 bits of pc */
+	/* Extract the value to be written to table entry */
+	ldr	r1, table_entry
+	add	r1, r1, r4 /* r1 has value to be written to table entry*/
+	/* Getting the address of table entry to modify */
+	lsr	r4, #18
+	add	r2, r4 /* r2 has the location which needs to be modified */
+        ldr     r4, [r2]
+
+	/* Storing previous entry of location being modified */
+        ldr     r5, scratchpad_save_regs_mmu_off_loc
+        ldr     r6, [r5]
+        str     r4, [r6, #0x4]
+	/* Storing previous location being modified */
+        ldr     r5, scratchpad_save_regs_mmu_off_loc
+        ldr     r6, [r5]
+        str     r2, [r6, #0x0] 
+
+
+        /* Modify the table entry */
+        str     r1, [r2]
+
+
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe2
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+
+hack_cont: /*FIXME*/
+	mov	r0, #0
+	mcr	p15, 0, r0, c7, c5, 4	@ Flush prefetch buffer
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe4
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	mcr	p15, 0, r0, c7, c5, 6	@ Invalidate branch predictor array
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe5
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	mcr	p15, 0, r0, c8, c5, 0	@ Invalidate instruction TLB
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xe6
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	mcr	p15, 0, r0, c8, c6, 0	@ Invalidate data TLB
+	/* Restore control register  but dont enable caches here*/
+	/* Caches will be enabled after restoring MMU table entry */
+	/*FIXME: removed the loading into r4 here and moved it down.*/
+
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xb1
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+	ldmia	r3!, {r4}
+	ldr	r2, cache_pred_disable_mask 
+
+        /* Storing previous SCTLR.. will be restored back after MMU is switched on */
+        ldr     r5, scratchpad_save_regs_mmu_off_loc
+        ldr     r6, [r5]
+        str     r4, [r6, #0x8] 
+
+	and	r4, r2 
+
+	mov r4, r4
+	mcr	p15, 0, r4, c1, c0, 0
+        nop
+        nop
+        nop
+        mov r0, r0
+	
+
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xb2
+        str r5, [r4]
+        /* Debug >> */
+#endif
+
+        ldr r7, scratchpad_cpu_context_loc
+        ldr r8, [r7]
+        orr r8, #PAGE_OFFSET @MMU is enabled so use VA
+        ldmia r8!, {r0-r1}
+
+#ifdef CONFIG_PM_DEBUG
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0xb3
+        str r5, [r4]
+#endif
+
+        /* Using r1 as it is not used after return. Had to do this as something like ldmia r8, {r0-r8}   
+         * has unpredictable result */
+        mov r1, r8 
+        ldmia r1!, {r2-r12, pc}
+	/* ldmfd	sp!, {r0-r12, pc} */		@ restore regs and return
+save_context_wfi:
+	/*b	save_context_wfi*/	@ enable to debug save code
+	mov	r8, r0 /* Store SDRAM address in r8 */
+        add r8, #0x78    @ 30th offset onwards 
+        /* Check what that target sleep state is:stored in r1*/
+        /* 1 - Only L1 and logic lost */
+        /* 2 - Only L2 lost */
+        /* 3 - Both L1 and L2 lost */
+	cmp	r1, #0x2 /* Only L2 lost */
+	beq	clean_l2
+	cmp	r1, #0x1 /* L2 retained */
+	/* r9 stores whether to clean L2 or not*/
+	moveq	r9, #0x0 /* Dont Clean L2 */
+	movne	r9, #0x1 /* Clean L2 */
+l1_logic_lost:
+	/*FIXME: Using r12 for saving the reg_save pointer - ashwin:*/
+	/* mov	r12, r8 */
+	/* Store sp and spsr to SDRAM */
+	mov	r4, sp
+	mrs	r5, spsr
+	mov	r6, lr
+	stmia	r8!, {r4-r6}
+        
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x0]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x4]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x8]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Save all ARM registers */
+	/* Coprocessor access control register */
+	mrc	p15, 0, r6, c1, c0, 2
+	stmia	r8!, {r6}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0xc]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+
+	/* TTBR0, TTBR1 and Translation table base control */
+	mrc	p15, 0, r4, c2, c0, 0
+	mrc	p15, 0, r5, c2, c0, 1
+	mrc	p15, 0, r6, c2, c0, 2
+	stmia	r8!, {r4-r6}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x10]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x14]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x18]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Domain access control register, data fault status register,
+	and instruction fault status register */
+	mrc	p15, 0, r4, c3, c0, 0
+	mrc	p15, 0, r5, c5, c0, 0
+	mrc	p15, 0, r6, c5, c0, 1
+	stmia	r8!, {r4-r6}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x1c]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x20]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x24]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Data aux fault status register, instruction aux fault status,
+	datat fault address register and instruction fault address register*/
+	mrc	p15, 0, r4, c5, c1, 0
+	mrc	p15, 0, r5, c5, c1, 1
+	mrc	p15, 0, r6, c6, c0, 0
+	mrc	p15, 0, r7, c6, c0, 2
+	stmia	r8!, {r4-r7}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x28]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x2c]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x30]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x34]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* user r/w thread and process ID, user r/o thread and process ID,
+	priv only thread and process ID, cache size selection */
+	mrc	p15, 0, r4, c13, c0, 2
+	mrc	p15, 0, r5, c13, c0, 3
+	mrc	p15, 0, r6, c13, c0, 4
+	mrc	p15, 2, r7, c0, c0, 0
+	stmia	r8!, {r4-r7}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x38]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x3c]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x40]
+        ldr r12, scratchpad_debug_save_loc
+        str r7, [r12, #0x44]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Data TLB lockdown, instruction TLB lockdown registers */
+	mrc	p15, 0, r5, c10, c0, 0
+	mrc	p15, 0, r6, c10, c0, 1
+	stmia	r8!, {r5-r6}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x48]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x4c]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Secure or non secure vector base address, FCSE PID, Context PID*/
+	mrc	p15, 0, r4, c12, c0, 0
+	mrc	p15, 0, r5, c13, c0, 0
+	mrc	p15, 0, r6, c13, c0, 1
+	stmia	r8!, {r4-r6}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x50]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x54]
+        ldr r12, scratchpad_debug_save_loc
+        str r6, [r12, #0x58]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Primary remap, normal remap registers */
+	mrc	p15, 0, r4, c10, c2, 0
+	mrc	p15, 0, r5, c10, c2, 1
+	stmia	r8!,{r4-r5}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r4, [r12, #0x5c]
+        ldr r12, scratchpad_debug_save_loc
+        str r5, [r12, #0x60]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	/* Store current cpsr*/
+	mrs	r2, cpsr
+	stmia	r8!, {r2}
+
+#if SCRATCHPAD_SAVE_DEBUG
+        /* Saving in scratchpad during suspend << */
+        ldr r12, scratchpad_debug_save_loc
+        str r2, [r12, #0x64]
+        /* Saving in scratchpad during suspend >> */
+#endif
+
+	mrc	p15, 0, r4, c1, c0, 0
+	/* save control register */
+	stmia	r8!, {r4}
+
+
+clean_caches:
+	/* Clean Data or unified cache to POU*/
+	/* How to invalidate only L1 cache???? - #FIX_ME# */
+	/* mcr	p15, 0, r11, c7, c11, 1 */
+	cmp	r9, #1 /* Check whether L2 inval is required or not*/
+	bne	skip_l2_inval
+clean_l2:
+	/* read clidr */
+	mrc     p15, 1, r0, c0, c0, 1
+	/* extract loc from clidr */
+	ands    r3, r0, #0x7000000
+	/* left align loc bit field */
+	mov     r3, r3, lsr #23
+	/* if loc is 0, then no need to clean */
+	beq     finished
+	/* start clean at cache level 0 */
+	mov     r10, #0
+loop1:
+	/* work out 3x current cache level */
+	add     r2, r10, r10, lsr #1
+	/* extract cache type bits from clidr*/
+	mov     r1, r0, lsr r2
+	/* mask of the bits for current cache only */
+	and     r1, r1, #7
+	/* see what cache we have at this level */
+	cmp     r1, #2
+	/* skip if no cache, or just i-cache */
+	blt     skip
+	/* select current cache level in cssr */
+	mcr     p15, 2, r10, c0, c0, 0
+	/* isb to sych the new cssr&csidr */
+	isb
+	/* read the new csidr */
+	mrc     p15, 1, r1, c0, c0, 0
+	/* extract the length of the cache lines */
+	and     r2, r1, #7
+	/* add 4 (line length offset) */
+	add     r2, r2, #4
+	ldr     r4, assoc_mask
+	/* find maximum number on the way size */
+	ands    r4, r4, r1, lsr #3
+	/* find bit position of way size increment */
+	clz     r5, r4
+	ldr     r7, numset_mask
+	/* extract max number of the index size*/
+	ands    r7, r7, r1, lsr #13
+loop2:
+	mov     r9, r4
+	/* create working copy of max way size*/
+loop3:
+	/* factor way and cache number into r11 */
+	orr     r11, r10, r9, lsl r5
+	/* factor index number into r11 */
+	orr     r11, r11, r7, lsl r2
+	/*clean & invalidate by set/way */
+        /* Ranjith -- Modified the below line */
+	/* mcr     p15, 0, r11, c7, c10, 2 */
+        mcr     p15, 0, r11, c7, c14, 2         @ clean & invalidate by set/way
+	/* decrement the way*/
+	subs    r9, r9, #1
+	bge     loop3
+	/*decrement the index */
+	subs    r7, r7, #1
+	bge     loop2
+skip:
+	add     r10, r10, #2
+	/* increment cache number */
+	cmp     r3, r10
+	bgt     loop1
+finished:
+	/*swith back to cache level 0 */
+	mov     r10, #0
+	/* select current cache level in cssr */
+	mcr     p15, 2, r10, c0, c0, 0
+        /* Ranjith -- Added the below line */
+        dsb
+	isb
+        mcr     p15, 0, r10, c7, c5, 0           @ I+BTB cache invalidate
+
+skip_l2_inval:
+	/* Data memory barrier and Data sync barrier */
+	mov     r1, #0
+	mcr     p15, 0, r1, c7, c10, 4
+	mcr     p15, 0, r1, c7, c10, 5
+
+/* 
+	wfi                             @ wait for interrupt
+*/
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+#ifdef CONFIG_PM_DEBUG
+        /* Debug << */
+        ldr r4, scratchpad_reboot_indicator_loc
+        mov r5, #0x88
+        str r5, [r4]
+        /* Debug >> */
+#endif
+	/* restore regs and return */
+        ldr r7, scratchpad_cpu_context_loc
+        ldr r8, [r7]
+        orr r8, #PAGE_OFFSET @MMU is enabled so use VA
+        ldmia r8!, {r0-r4}
+	mov r1, #0x5
+	str r1, [r3]
+        /* Using r1 as it is not used after return. Had to do this as something like ldmia r8, {r0-r8}   
+         * has unpredictable result */
+        mov r1, r8
+        /*b . */
+        ldmia r1!, {r5-r12, pc}
+
+	/* ldmfd   sp!, {r0-r11} 
+	mov r1, #0x5
+	str r1, [r3]
+	ldmfd   sp!, {r12, pc} */
+
+assoc_mask:
+	.word	0x3ff
+numset_mask:
+	.word	0x7fff
+ttbrbit_mask:
+	.word	0xFFFFC000
+table_index_mask:
+	.word	0xFFF00000
+table_entry:
+	.word	0x00000C02
+cache_pred_disable_mask:
+	.word	0xFFFFE7FB
+scratchpad_cpu_context_loc:
+        .word   SCRATCHPAD_CPU_CONTEXT_LOC 
+scratchpad_restore_pc_loc:
+        .word   SCRATCHPAD_RESTORE_PC_LOC        
+scratchpad_reboot_indicator_loc:
+        .word   SCRATCHPAD_REBOOT_INDICATOR_LOC
+scratchpad_debug_save_loc:
+        .word   SCRATCHPAD_DEBUG_SAVE_LOC 
+scratchpad_save_regs_mmu_off_loc:
+        .word   SCRATCHPAD_SAVE_REGS_WHEN_MMU_OFF_LOC  
diff -Naurp linux-2.6.34_org/arch/arm/mach-krome/splash_logo.c linux-2.6.34/arch/arm/mach-krome/splash_logo.c
--- linux-2.6.34_org/arch/arm/mach-krome/splash_logo.c	1970-01-01 05:30:00.000000000 +0530
+++ linux-2.6.34/arch/arm/mach-krome/splash_logo.c	2011-10-10 11:29:19.218458000 +0530
@@ -0,0 +1,361 @@
+/*
+ * Copyright 2010 Trident Microsystems (Far East) Ltd.
+ *
+ * All prior copyright rights in this work and the accompanying software
+ * products transferred to Trident Microsystems (Far East) Ltd. by written
+ * agreement.  All rights reserved.
+ *
+ *
+ *   name:          splash_logo.c
+ *   version:
+ *   date_modified: Jun 17, 2010
+ *   derived_by:    ddouglass
+ */
+
+#include <linux/init.h>
+#include <asm/io.h>
+#include <mach/splash_logo.h>
+#include <mach/apollo_logo.h>
+
+#define APOLLO_MMIO_BASE_ADDR (0xE0600000)
+#define APOLLO_CGU_BASE     (APOLLO_MMIO_BASE_ADDR + 0x0E7000)
+#define APOLLO_GBL_REG_BASE (APOLLO_MMIO_BASE_ADDR + 0x0EA000)
+#define APOLLO_CPIPE_BASE   (APOLLO_MMIO_BASE_ADDR + 0x120000)
+#define APOLLO_HDMI_TX_BASE (APOLLO_MMIO_BASE_ADDR + 0x179000)
+#define APOLLO_DENC_BASE    (APOLLO_MMIO_BASE_ADDR + 0x17B000)
+
+#define APOLLO_VARI_FORMAT_ARGB 0xfff7efe7
+#define APOLLO_VARI_FORMAT_ABGR 0xffe7eff7
+
+#define XRES 720
+#define YRES 480
+
+extern u32 __initdata uVRAMHD_start;
+
+void __init apollo_splash( void )
+{
+   int i, line_pixel, line;
+   u32 __iomem * pVRAMhd_base = ioremap_nocache(uVRAMHD_start, (XRES * YRES * 4));
+   u32 __iomem * pInc;
+   unsigned char pixel_data[3];
+
+   /* HD DENC programming (HD-480p raster) */
+   writel( 0x00000001, (APOLLO_DENC_BASE + 0x120)); /* DENC csc sel  - YCbCr out */
+   writel( 0x00000104, (APOLLO_DENC_BASE + 0x104)); /* DENC raster   -  eactive & 480p */
+   writel( 0x0000035a, (APOLLO_DENC_BASE + 0x108)); /* DENC Htotal */
+   writel( 0x02d0007a, (APOLLO_DENC_BASE + 0x10c)); /* DENC HActive */
+   writel( 0x01e00024, (APOLLO_DENC_BASE + 0x110)); /* DENC Vertical timing */
+   writel( 0x0000003f, (APOLLO_DENC_BASE + 0x00c)); /* DENC enable dacs - enable all the 6 DACs */
+   writel( 0x00000201, (APOLLO_DENC_BASE + 0x010)); /* DENC  {CBA} dac selection - {rpr, bpb, gy} */
+   writel( 0x00050603, (APOLLO_DENC_BASE + 0x014)); /* DENC  {FED} dac selection - all cvbs for initial validation */
+   writel( 0x00000000, (APOLLO_DENC_BASE + 0x180)); /* DENC Sync Control- don't invert Odd/even signal */
+
+   /* DENC programming (SD - 480i) */
+   writel( 0x00000110, (APOLLO_DENC_BASE + 0x304)); /* DENC raster   - enable bits eactive & 480i(NTSC) */
+   writel( 0x000006b4, (APOLLO_DENC_BASE + 0x308)); /* DENC Htotal */
+   writel( 0x05a00104, (APOLLO_DENC_BASE + 0x30c)); /* DENC HActive (orig - 0x0590010c) */
+   writel( 0x00f00013, (APOLLO_DENC_BASE + 0x310)); /* DENC Vertical timing */
+   writel( 0x007e9054, (APOLLO_DENC_BASE + 0x318)); /* DENC analog timing */
+   writel( 0x0085e574, (APOLLO_DENC_BASE + 0x324)); /* DENC amplitude */
+   writel( 0x009b86bd, (APOLLO_DENC_BASE + 0x328)); /* DENC YUV MULT */
+   writel( 0x80a4f000, (APOLLO_DENC_BASE + 0x32c)); /* DENC YALT Luma control reg */
+   writel( 0x21f07c1f, (APOLLO_DENC_BASE + 0x330)); /* DENC secam reg */
+   writel( 0x029d3000, (APOLLO_DENC_BASE + 0x380)); /* DENC Sync Control- don't invert Odd/even signal */
+
+   /* Disable SD DENC to supply syncs to HD CPIPE: */
+   writel( 0x00000000, (APOLLO_DENC_BASE + 0x008));
+   writel( 0x00000000, (APOLLO_DENC_BASE + 0x394)); /* Macrovision OFF */
+   writel( 0x00000000, (APOLLO_DENC_BASE + 0x194)); /* Macrovision OFF */
+
+   /* DAC0 Programming (Component DACs) */
+   writel( 0x0011c00e, (APOLLO_GBL_REG_BASE + 0x8fc)); /*VDAC0_CTRL0 */
+   writel( 0x52201712, (APOLLO_GBL_REG_BASE + 0x900)); /*VDAC0_CTRL1 */
+   writel( 0x00000ff0, (APOLLO_GBL_REG_BASE + 0x904)); /*VDAC0_CTRL2 */
+   writel( 0x00000124, (APOLLO_GBL_REG_BASE + 0x908)); /*VDAC0_CTRL3 source from MPEG0 PLL */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x90c)); /*VDAC0_CTRL4 71-->70-->71 */
+   writel( 0x3f000070, (APOLLO_GBL_REG_BASE + 0x90c)); /*VDAC0_CTRL4 71-->70-->71 */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x90c)); /*VDAC0_CTRL4 71-->70-->71 */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x910)); /*VDAC0_TEST_CTRL */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x914)); /*VDAC0_DTO_INCR0 */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x918)); /*VDAC0_DTO_INCR1 */
+
+   /* DAC1 Programming (SD - 480i) */
+   writel( 0x0011c00e, (APOLLO_GBL_REG_BASE + 0x920)); /*VDAC1_CTRL0 */
+   writel( 0x52201712, (APOLLO_GBL_REG_BASE + 0x924)); /*VDAC1_CTRL1 */
+   writel( 0x00000ff0, (APOLLO_GBL_REG_BASE + 0x928)); /*VDAC1_CTRL2 */
+   writel( 0x00000124, (APOLLO_GBL_REG_BASE + 0x92c)); /*VDAC1_CTRL3 source from MPEG0 PLL */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x930)); /*VDAC1_CTRL4 71-->70-->71 */
+   writel( 0x3f000070, (APOLLO_GBL_REG_BASE + 0x930)); /*VDAC1_CTRL4 71-->70-->71 */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x930)); /*VDAC1_CTRL4 71-->70-->71 */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x934)); /*VDAC1_TEST_CTRL */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x938)); /*VDAC1_DTO_INCR0 */
+   writel( 0x00000000, (APOLLO_GBL_REG_BASE + 0x93c)); /*VDAC1_DTO_INCR1 */
+
+   /******  Set up the DAC and CPIPE clocks */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x658)); /* vdac0_sel -- 74.25MHz mpg0 pll */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x65c)); /* vdac1_sel -- 74.25MHz */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x660)); /* vdac2_sel -- 74.25MHz */
+
+/* vdacs 3,4 and 5 are always Mpeg0 PLL, 74.25 MHz */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x664)); /* vdac3_sel -- 74.25MHz mpg0 pll */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x668)); /* vdac4_sel -- 74.25MHz */
+   writel( 0x00000002, (APOLLO_CGU_BASE + 0x66c)); /* vdac5_sel -- 74.25MHz */
+   writel( 0x00000005, (APOLLO_CGU_BASE + 0x640)); /* VCGEN_G1SEL -- 27MHz, MPG0 PLL */
+   writel( 0x00000004, (APOLLO_CGU_BASE + 0x644)); /* VCGEN_G2SEL -- 54MHz, MPG0 PLL */
+   writel( 0x00000006, (APOLLO_CGU_BASE + 0x648)); /* VCGEN_G3SEL -- 27MHz, MPG0 PLL */
+   writel( 0x00000005, (APOLLO_CGU_BASE + 0x64c)); /* VCGEN_G4SEL -- 13.5MHz, MPG0 PLL */
+   writel( 0x00000006, (APOLLO_CGU_BASE + 0x650)); /* VCGEN_G5SEL -- 27MHz, MPG0 PLL */
+   writel( 0x00000000, (APOLLO_CGU_BASE + 0x654)); /* VCGEN_G6SEL -- 27MHz, MPG0 PLL */
+
+   /* CPIPE Sync Timing Generator settings */
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x8000)); /* progressive */
+   writel( 0x00000f33, (APOLLO_CPIPE_BASE + 0x8040)); /* enable STG + f,h,v inputs, invert f,h,v */
+   writel( 0x0359020c, (APOLLO_CPIPE_BASE + 0x8044)); /* 858 wide, 525 tall */
+   writel( 0x03580087, (APOLLO_CPIPE_BASE + 0x8048)); /* blank from 0x34a to 0x79 */
+   writel( 0x02090028, (APOLLO_CPIPE_BASE + 0x804c)); /* blank from line 0x20a to 0x29 */
+   writel( 0x000c0021, (APOLLO_CPIPE_BASE + 0x8050)); /* hsync */
+   writel( 0x00050007, (APOLLO_CPIPE_BASE + 0x8054)); /* vsync (not used) */
+   writel( 0x00000012, (APOLLO_CPIPE_BASE + 0x8058)); /* vsync starts at (APOLLO_CPIPE_BASE + 0x horiz */
+   writel( 0x00000012, (APOLLO_CPIPE_BASE + 0x805c)); /* vsync ends at (APOLLO_CPIPE_BASE + 0x */
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x8060));
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x8064));
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x8068)); /* ext h sets hctr to 0x25, ext v sets vctr to 2 */
+   writel( 0x000e004b, (APOLLO_CPIPE_BASE + 0x8094)); /* hsync for hdmi starts at 1 ends at 0x3e */
+   writel( 0x0005000a, (APOLLO_CPIPE_BASE + 0x8098)); /* 6 lines wide hdmi vsync */
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x809c));
+   writel( 0x0000000e, (APOLLO_CPIPE_BASE + 0x80a0)); /* hdmi vsync starts at 14 horiz count */
+   writel( 0x0000000e, (APOLLO_CPIPE_BASE + 0x80a4)); /* vsync ends, ditto */
+   writel( 0x030f0002, (APOLLO_CPIPE_BASE + 0x94e0)); /* !hsync, !vsync, blank, odd/even to HD DENC */
+   writel( 0x070f0002, (APOLLO_CPIPE_BASE + 0x98e0)); /* hsync, vsync, !blank, odd/even to HDMI */
+
+   /* SD CPIPE Sync Timing Generator settings */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x4000)); /* interlaced */
+   writel( 0x00000033, (APOLLO_CPIPE_BASE + 0x4040)); /* enable STG + f input only */
+   writel( 0x03590106, (APOLLO_CPIPE_BASE + 0x4044)); /* 858 wide, 263 tall */
+   writel( 0x03590088, (APOLLO_CPIPE_BASE + 0x4048)); /* h blank */
+   writel( 0x01040013, (APOLLO_CPIPE_BASE + 0x404c)); /* v blank odd */
+   writel( 0x00070010, (APOLLO_CPIPE_BASE + 0x4050)); /* hsync from 7 to 16 */
+   writel( 0x00050007, (APOLLO_CPIPE_BASE + 0x4054)); /* vsync from 5 to 7 odd (not used) */
+   writel( 0x01ae0001, (APOLLO_CPIPE_BASE + 0x4058)); /* vsync starts at 1 horiz */
+   writel( 0x01ae0001, (APOLLO_CPIPE_BASE + 0x405c)); /* vsync ends at 1 */
+   writel( 0x01040013, (APOLLO_CPIPE_BASE + 0x4060)); /* v blank even */
+   writel( 0x00050007, (APOLLO_CPIPE_BASE + 0x4064)); /* vsync from 5 to 7 even (not used) */
+   writel( 0x00000000, (APOLLO_CPIPE_BASE + 0x4068)); /* ext f sets h and v to 0 */
+   writel( 0x02060002, (APOLLO_CPIPE_BASE + 0x54e0)); /* !hsync, blank to SD DENC */
+
+   /* Bypass SD Out CSC */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x5690)); /* Bypass DS Out CSC */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x5400)); /* cause above to take effect on next shadow reload cycle */
+
+   /* Bypass DENC CSC */
+   writel( 0x00000000, (APOLLO_DENC_BASE + 0x120)); /* Bypass DENC CSC */
+
+   /* Set up the formatting PLL - programmed thru the HDMI I/F - and the serializer PLL */
+   writel( 0x00000003, (APOLLO_CGU_BASE + 0x2fc));     /* Enable TMDS clock for HDMI */
+   writel( 0x00000020, (APOLLO_CGU_BASE + 0x11c));     /* PLL_HDMI_CON3_CTL - use MPG0 PLL for Fmt PLL Source */
+   writel( 0x80000002, (APOLLO_CGU_BASE + 0x110));     /* PLL_HDMI_CON0_CTL - use HDMI register I/F rather than direct I/F */
+   writel( 0x0102040a, (APOLLO_HDMI_TX_BASE + 0x034)); /* FMT_PLL_SETTINGS - 480i, 480p */
+   writel( 0x00000203, (APOLLO_HDMI_TX_BASE + 0x030)); /* SER_PLL_SETTINGS - 480i, 480p (27 MHz) */
+   writel( 0x00000100, (APOLLO_HDMI_TX_BASE + 0x038)); /* PHY_CTRL - apply the pll settings */
+   writel( 0x00000130, (APOLLO_HDMI_TX_BASE + 0x038)); /* PHY_CTRL */
+   writel( 0x00000100, (APOLLO_HDMI_TX_BASE + 0x038)); /* PHY_CTRL */
+
+   /* HDMI programming */
+   writel( 0x0000003f, (APOLLO_HDMI_TX_BASE + 0x038));
+   writel( 0x00012761, (APOLLO_HDMI_TX_BASE + 0x044));
+   writel( 0xffffffff, (APOLLO_HDMI_TX_BASE + 0x4d8));
+   writel( 0xffffffff, (APOLLO_HDMI_TX_BASE + 0x4e8));
+   writel( 0x00100000, (APOLLO_HDMI_TX_BASE + 0x4dc));
+   writel( 0x00100000, (APOLLO_HDMI_TX_BASE + 0x4e8));
+   writel( 0x00080000, (APOLLO_HDMI_TX_BASE + 0x4dc));
+   writel( 0x00080000, (APOLLO_HDMI_TX_BASE + 0x4e8));
+   writel( 0x00040100, (APOLLO_HDMI_TX_BASE + 0x038));
+   writel( 0x00180000, (APOLLO_HDMI_TX_BASE + 0x4d8));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x4dc));
+   writel( 0x42000510, (APOLLO_HDMI_TX_BASE + 0x000));
+   writel( 0x42000410, (APOLLO_HDMI_TX_BASE + 0x000));
+   writel( 0x31000009, (APOLLO_HDMI_TX_BASE + 0x400));
+   writel( 0x00000016, (APOLLO_HDMI_TX_BASE + 0x404));
+   writel( 0x000a0184, (APOLLO_HDMI_TX_BASE + 0x180));
+   writel( 0x00000170, (APOLLO_HDMI_TX_BASE + 0x184));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x188));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x18c));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x300));
+   writel( 0x00000004, (APOLLO_HDMI_TX_BASE + 0x304));
+   writel( 0x10006978, (APOLLO_HDMI_TX_BASE + 0x308));
+   writel( 0x00001800, (APOLLO_HDMI_TX_BASE + 0x30c));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x314));
+   writel( 0x00000001, (APOLLO_HDMI_TX_BASE + 0x0a8)); /* format 1 for 480p59 */
+   writel( 0x00080013, (APOLLO_HDMI_TX_BASE + 0x0ac)); /* ext h sets hctr to 0x13, ext v sets vctr to 8 */
+   writel( 0x00003000, (APOLLO_HDMI_TX_BASE + 0x0d4));
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x0d8));
+   writel( 0x00010800, (APOLLO_HDMI_TX_BASE + 0x0e0));
+   writel( 0x04020200, (APOLLO_HDMI_TX_BASE + 0x0e4));
+   writel( 0x00000004, (APOLLO_HDMI_TX_BASE + 0x0e8));
+   writel( 0x91c1c240, (APOLLO_HDMI_TX_BASE + 0x0ec));
+
+   /*----------------------- Calibrate VDAC's ----------------------*/
+   writel( 0x0009c00e, (APOLLO_GBL_REG_BASE + 0x8fc)); /*reset VDAC0 */
+   writel( 0x0009c00e, (APOLLO_GBL_REG_BASE + 0x920)); /*reset VDAC1 */
+   writel( 0x0019f60e, (APOLLO_GBL_REG_BASE + 0x8fc)); /*VDAC0_CTRL0 30 MHz power */
+   writel( 0x0019f60e, (APOLLO_GBL_REG_BASE + 0x920)); /*VDAC1_CTRL0 30 MHz power */
+   writel( 0x52201750, (APOLLO_GBL_REG_BASE + 0x900)); /*VDAC0_CTRL1 */
+   writel( 0x52201750, (APOLLO_GBL_REG_BASE + 0x924)); /*VDAC1_CTRL1 */
+   writel( 0x52201752, (APOLLO_GBL_REG_BASE + 0x900)); /*VDAC0_CTRL1 */
+   writel( 0x52201752, (APOLLO_GBL_REG_BASE + 0x924)); /*VDAC1_CTRL1 */
+   writel( 0x3f000070, (APOLLO_GBL_REG_BASE + 0x90c)); /*VDAC0_CTRL4 70-->71 */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x90c));
+   writel( 0x3f000070, (APOLLO_GBL_REG_BASE + 0x930)); /*VDAC1_CTRL4 70-->71 */
+   writel( 0x3f000071, (APOLLO_GBL_REG_BASE + 0x930));
+
+   /*** Put the splash screen in memory ***/
+   pInc = pVRAMhd_base;
+   /* Clear the buffer to a white background. */
+   for ( i=0; i<(XRES * YRES); i++)
+   {
+      writel( 0xffffffff, pInc);
+      pInc++;
+   }
+   /* Calculate Address to begin write. */
+   pInc = (u32 *)((u32)pVRAMhd_base + ((XRES * ( (YRES - logo_height) / 2 ) * 4 )));
+   for ( line = 0; line< logo_height; line++)
+   {
+      pInc += (XRES - logo_width) / 2;
+      for ( line_pixel = 0; line_pixel< logo_width; line_pixel++)
+      {
+         HEADER_PIXEL(header_data, pixel_data)
+         *pInc = 0xff000000 + (pixel_data[2] << 16) + (pixel_data[1] << 8) + pixel_data[0];
+         pInc++;
+      }
+      pInc += (XRES - logo_width) / 2;
+   }
+
+   /* set up RIF on GFX layer 1 */
+   writel( 0xa000001f, (APOLLO_CPIPE_BASE + 0x8c44)); /* 32 bit variable width */
+   writel( APOLLO_VARI_FORMAT_ARGB, (APOLLO_CPIPE_BASE + 0x8c48)); /* 32 bit variable width */
+   writel( 0x80500027, (APOLLO_CPIPE_BASE + 0x8c54)); /* start DMA at line 8 pixel 0x90 */
+   writel( 0x00000b3f, (APOLLO_CPIPE_BASE + 0x8c5c)); /* width is 719 pels */
+   writel( uVRAMHD_start, (APOLLO_CPIPE_BASE + 0x8c64)); /* data is located at 0xb10000 */
+   writel( 0x00000b40, (APOLLO_CPIPE_BASE + 0x8c6c)); /* stride is 720*4 */
+   writel( 0x00000b40, (APOLLO_CPIPE_BASE + 0x8c70)); /* stride is 720*4 */
+   writel( 0x00000b40, (APOLLO_CPIPE_BASE + 0x8c84)); /* stride is 720*4 */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x8d90)); /* bypass alpha multi */
+
+   /* hdmi Mixer */
+   writel( 0xffff0000, (APOLLO_CPIPE_BASE + 0x8db0)); /* alpha blend enable */
+   writel( 0x000003fc, (APOLLO_CPIPE_BASE + 0x8db8)); /* per pixel alpha */
+
+   /* denc Mixer */
+   writel( 0xffff0000, (APOLLO_CPIPE_BASE + 0x8dd0)); /* alpha blend enable */
+   writel( 0x000003fc, (APOLLO_CPIPE_BASE + 0x8dd8)); /* per pixel alpha */
+
+   /* Set up HD layer */
+   writel( 0x01e002d0, (APOLLO_CPIPE_BASE + 0x8c04)); /* width and height */
+   writel( 0x01e002d0, (APOLLO_CPIPE_BASE + 0x8c08)); /* width and height */
+   writel( 0x00880028, (APOLLO_CPIPE_BASE + 0x8c10)); /* h and v start position */
+   writel( 0x00000002, (APOLLO_CPIPE_BASE + 0x8c20)); /* enable crop */
+   writel( 0x02d001e0, (APOLLO_CPIPE_BASE + 0x8c28)); /* pix dim after crop */
+   writel( 0x00000006, (APOLLO_CPIPE_BASE + 0x8c34)); /* crop enable match STG field */
+
+   /* GFX VCBM*/
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x8e90)); /* Bypass GFX VCBM */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x8c00)); /* apply settings to layer */
+
+   /* GNSH Settings */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x94a0)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x94a4)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x94a8)); /* Turn off MSB inversion */
+   writel( 0x00000004, (APOLLO_CPIPE_BASE + 0x94b0)); /* Turn off MSB inversion */
+   writel( 0x00000007, (APOLLO_CPIPE_BASE + 0x94b4)); /* Turn off MSB inversion */
+
+   /* Set up color space conversions  RGB255 -> 601 */
+   writel( 0x00000016, (APOLLO_CPIPE_BASE + 0x9690)); /* width and height */
+   writel( 0x020e0408, (APOLLO_CPIPE_BASE + 0x9694)); /* width and height */
+   writel( 0x00c91ed0, (APOLLO_CPIPE_BASE + 0x9698)); /* width and height */
+   writel( 0x1dac0384, (APOLLO_CPIPE_BASE + 0x969c)); /* width and height */
+   writel( 0x03841d0f, (APOLLO_CPIPE_BASE + 0x96a0)); /* width and height */
+   writel( 0x1f6e0000, (APOLLO_CPIPE_BASE + 0x96a4)); /* width and height */
+   writel( 0x00400000, (APOLLO_CPIPE_BASE + 0x96a8)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x96ac)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x96b0)); /* width and height */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x9400)); /* width and height */
+
+   /* HDMI AVI Infoframe */
+   writel( 0x000d0282, (APOLLO_HDMI_TX_BASE + 0x140));
+   writel( 0x005840D5, (APOLLO_HDMI_TX_BASE + 0x144));
+   writel( 0x00000002, (APOLLO_HDMI_TX_BASE + 0x148)); /* format = 2 */
+   writel( 0x00000000, (APOLLO_HDMI_TX_BASE + 0x14c));
+   writel( 0x00001403, (APOLLO_HDMI_TX_BASE + 0x310));
+
+   /* HDMI GNSH Settings */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x98a0)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x98a4)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x98a8)); /* Turn off MSB inversion */
+   writel( 0x00000004, (APOLLO_CPIPE_BASE + 0x98b0)); /* Turn off MSB inversion */
+   writel( 0x00000007, (APOLLO_CPIPE_BASE + 0x98b4)); /* Turn off MSB inversion */
+
+   /* HDMI OUTC */
+   writel( 0x04080200, (APOLLO_CPIPE_BASE + 0x98c0));    /* For CPIPE-HDMI */
+   writel( 0x030f0002, (APOLLO_CPIPE_BASE + 0x98e0));    /* For CPIPE-HDMI RGB match */
+   writel( 0x000fff00, (APOLLO_CPIPE_BASE + 0x98e4));    /* For CPIPE-HDMI RGB match */
+   writel( 0x000fff00, (APOLLO_CPIPE_BASE + 0x98e8));    /* For CPIPE-HDMI RGB match */
+
+   /* HDMI Set up color space conversions  RGB255 -> 601 */
+   writel( 0x00000016, (APOLLO_CPIPE_BASE + 0x9a90)); /* width and height */
+   writel( 0x020e0408, (APOLLO_CPIPE_BASE + 0x9a94)); /* width and height */
+   writel( 0x00c91ed0, (APOLLO_CPIPE_BASE + 0x9a98)); /* width and height */
+   writel( 0x1dac0384, (APOLLO_CPIPE_BASE + 0x9a9c)); /* width and height */
+   writel( 0x03841d0f, (APOLLO_CPIPE_BASE + 0x9aa0)); /* width and height */
+   writel( 0x1f6e0000, (APOLLO_CPIPE_BASE + 0x9aa4)); /* width and height */
+   writel( 0x00400000, (APOLLO_CPIPE_BASE + 0x9aa8)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x9aac)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x9ab0)); /* width and height */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x9800)); /* width and height */
+
+   /* set up SD RIF for GFX */
+   writel( 0xa000001f,              (APOLLO_CPIPE_BASE + 0x4c44)); /* 32 bit variable width */
+   writel( APOLLO_VARI_FORMAT_ARGB, (APOLLO_CPIPE_BASE + 0x4c48)); /* 32 bit variable width */
+   writel( 0x80500013,              (APOLLO_CPIPE_BASE + 0x4c54)); /* start DMA at line 8 pixel 0x90 */
+   writel( 0x00000b3f,              (APOLLO_CPIPE_BASE + 0x4c5c)); /* width is 719 pels */
+   writel( uVRAMHD_start,           (APOLLO_CPIPE_BASE + 0x4c64)); /* Buffer A Address */
+   writel( uVRAMHD_start + 0xb40,   (APOLLO_CPIPE_BASE + 0x4c68)); /* Buffer B Address */
+   writel( 0x00001680,              (APOLLO_CPIPE_BASE + 0x4c6c)); /* stride is 720*4 */
+   writel( 0x00001680,              (APOLLO_CPIPE_BASE + 0x4c70)); /* stride is 720*4 */
+   writel( 0x00001680,              (APOLLO_CPIPE_BASE + 0x4c84)); /* stride is 720*4 */
+   writel( 0x00000001,              (APOLLO_CPIPE_BASE + 0x4d90)); /* bypass alpha multi */
+
+   /* Setup SD layer */
+   writel( 0x00f002d0, (APOLLO_CPIPE_BASE + 0x4c04)); /* width and height */
+   writel( 0x00f002d0, (APOLLO_CPIPE_BASE + 0x4c08)); /* width and height */
+   writel( 0x00880014, (APOLLO_CPIPE_BASE + 0x4c10)); /* h and v start position */
+   writel( 0x00000002, (APOLLO_CPIPE_BASE + 0x4c20)); /* enable crop */
+   writel( 0x02d000f0, (APOLLO_CPIPE_BASE + 0x4c28)); /* pix dim after crop */
+   writel( 0x00000006, (APOLLO_CPIPE_BASE + 0x4c34)); /* crop enable match STG field */
+
+   /* GFX VCBM */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x4e90)); /* Bypass GFX VCBM */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x4c00)); /* apply settings to layer */
+
+   /* GNSH Settings */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x54a0)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x54a4)); /* Turn off MSB inversion */
+   writel( 0x00000010, (APOLLO_CPIPE_BASE + 0x54a8)); /* Turn off MSB inversion */
+   writel( 0x00000004, (APOLLO_CPIPE_BASE + 0x54b0)); /* Turn off MSB inversion */
+   writel( 0x00000007, (APOLLO_CPIPE_BASE + 0x54b4)); /* Turn off MSB inversion */
+
+   /* Set up color space conversions  RGB255 -> 601 */
+   writel( 0x00000016, (APOLLO_CPIPE_BASE + 0x5690)); /* width and height */
+   writel( 0x020e0408, (APOLLO_CPIPE_BASE + 0x5694)); /* width and height */
+   writel( 0x00c91ed0, (APOLLO_CPIPE_BASE + 0x5698)); /* width and height */
+   writel( 0x1dac0384, (APOLLO_CPIPE_BASE + 0x569c)); /* width and height */
+   writel( 0x03841d0f, (APOLLO_CPIPE_BASE + 0x56a0)); /* width and height */
+   writel( 0x1f6e0000, (APOLLO_CPIPE_BASE + 0x56a4)); /* width and height */
+   writel( 0x00400000, (APOLLO_CPIPE_BASE + 0x56a8)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x56ac)); /* width and height */
+   writel( 0x02000000, (APOLLO_CPIPE_BASE + 0x56b0)); /* width and height */
+   writel( 0x00000001, (APOLLO_CPIPE_BASE + 0x5400)); /* width and height */
+
+   iounmap(pVRAMhd_base);
+
+   return;
+}
diff -Naurp linux-2.6.34_org/arch/arm/Makefile linux-2.6.34/arch/arm/Makefile
--- linux-2.6.34_org/arch/arm/Makefile	2011-10-10 11:33:50.706068000 +0530
+++ linux-2.6.34/arch/arm/Makefile	2011-10-10 11:29:19.227462000 +0530
@@ -188,6 +188,7 @@ machine-$(CONFIG_ARCH_NUC93X)		:= nuc93x
 machine-$(CONFIG_FOOTBRIDGE)		:= footbridge
 machine-$(CONFIG_ARCH_APOLLO)     	:= apollo
 machine-$(CONFIG_ARCH_KRONOS)     	:= kronos
+machine-$(CONFIG_ARCH_KROME)     	:= krome
 
 # Platform directory name.  This list is sorted alphanumerically
 # by CONFIG_* macro name.
diff -Naurp linux-2.6.34_org/arch/arm/mm/Kconfig linux-2.6.34/arch/arm/mm/Kconfig
--- linux-2.6.34_org/arch/arm/mm/Kconfig	2011-10-10 11:33:50.232069000 +0530
+++ linux-2.6.34/arch/arm/mm/Kconfig	2011-10-10 11:29:19.230465000 +0530
@@ -409,7 +409,7 @@ config CPU_32v6K
 
 # ARMv7
 config CPU_V7
-	bool "Support ARM V7 processor" if ARCH_INTEGRATOR || MACH_REALVIEW_EB || MACH_REALVIEW_PBX || MACH_APOLLO || MACH_KRONOS
+	bool "Support ARM V7 processor" if ARCH_INTEGRATOR || MACH_REALVIEW_EB || MACH_REALVIEW_PBX || MACH_APOLLO || MACH_KRONOS || MACH_KROME
 	select CPU_32v6K if !ARCH_OMAP2
 	select CPU_32v7
 	select CPU_ABRT_EV7
@@ -789,7 +789,7 @@ config CACHE_FEROCEON_L2_WRITETHROUGH
 config CACHE_L2X0
 	bool "Enable the L2x0 outer cache controller"
 	depends on REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || \
-		   REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK || ARCH_OMAP4 || MACH_APOLLO || MACH_KRONOS
+		   REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK || ARCH_OMAP4 || MACH_APOLLO || MACH_KRONOS || MACH_KROME
 	default y
 	select OUTER_CACHE
 	select OUTER_CACHE_SYNC
diff -Naurp linux-2.6.34_org/arch/arm/mm/mmu.c linux-2.6.34/arch/arm/mm/mmu.c
--- linux-2.6.34_org/arch/arm/mm/mmu.c	2011-10-10 11:33:50.743069000 +0530
+++ linux-2.6.34/arch/arm/mm/mmu.c	2011-10-10 11:29:19.233464000 +0530
@@ -881,7 +881,7 @@ void __init reserve_node_zero(pg_data_t 
 	reserve_bootmem_node(pgdat, __pa(swapper_pg_dir),
 			     PTRS_PER_PGD * sizeof(pgd_t), BOOTMEM_DEFAULT);
 
-	if (machine_is_apollo() || machine_is_kronos())
+	if (machine_is_apollo() || machine_is_kronos() || machine_is_krome())
 	{
 		/* Reserving the 0th 4k page as per Cortex-A9 Errata */
 		ret = reserve_bootmem_node(pgdat, 0, 0x1000, BOOTMEM_DEFAULT);
diff -Naurp linux-2.6.34_org/arch/arm/tools/mach-types linux-2.6.34/arch/arm/tools/mach-types
--- linux-2.6.34_org/arch/arm/tools/mach-types	2011-10-10 11:33:50.237073000 +0530
+++ linux-2.6.34/arch/arm/tools/mach-types	2011-10-10 11:29:19.238465000 +0530
@@ -3051,3 +3051,5 @@ rdstor			MACH_RDSTOR		RDSTOR			3063
 usdloader		MACH_USDLOADER		USDLOADER		3064
 tsoploader		MACH_TSOPLOADER		TSOPLOADER		3065
 kronos			MACH_KRONOS		KRONOS			3066
+krome				MACH_KROME		KROME				3500
+# TODO: Change the KROME MACH ID accordingly after request
diff -Naurp linux-2.6.34_org/drivers/serial/ip3106.c linux-2.6.34/drivers/serial/ip3106.c
--- linux-2.6.34_org/drivers/serial/ip3106.c	2011-10-10 11:33:51.495990000 +0530
+++ linux-2.6.34/drivers/serial/ip3106.c	2011-10-10 11:29:19.242464000 +0530
@@ -1442,8 +1442,12 @@ static int ip3106_startup(struct uart_po
 
 	if(divisor <= 1)
 	{
+#ifdef CONFIG_EXECUTE_ON_EMULATOR
+			  osr = 0x40;
+#else
            osr = (((port->uartclk / baud) - 1) << 4);
            osr |= (((port->uartclk % baud) / (baud / 8)) << 1);
+#endif
            UART_SET_OSR(port, osr);
         }
 
@@ -1587,8 +1591,12 @@ static void ip3106_set_termios(struct ua
 
         if (quot <= 1)
         {
+#ifdef CONFIG_EXECUTE_ON_EMULATOR
+				osr = 0x40;
+#else
             osr = (((port->uartclk / baud) - 1) << 4);
             osr |= (((port->uartclk % baud) / (baud / 8)) << 1);
+#endif
 	    UART_SET_OSR(port, osr);
         }
 
